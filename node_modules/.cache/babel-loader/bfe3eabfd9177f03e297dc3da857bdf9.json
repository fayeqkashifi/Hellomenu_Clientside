{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Companies\\\\Company.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport PageTItle from \"../../layouts/PageTitle\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Company = () => {\n  _s();\n\n  var _errors$company;\n\n  // for validation start\n  const schema = yup.object().shape({\n    company: yup.string().required()\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); //   validation end\n  // for localization\n\n  const {\n    t\n  } = useTranslation(); // insert modal\n\n  const [modalCentered, setModalCentered] = useState(false); // edit modal\n  // insert section\n\n  const [companyState, setCompanyState] = useState([]);\n\n  const handleInput = e => {\n    e.preventDefault();\n    setCompanyState({ ...companyState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const saveCompany = e => {\n    axios.post(\"/api/InsertCompanies\", companyState).then(res => {\n      if (res.data.status === 200) {\n        // console.log(res.data.status);\n        setCompanyState('');\n        reset();\n        swal(\"Success\", res.data.message, \"success\");\n        setModalCentered(false); //  this.props.history.push(\"/\")\n      }\n    });\n  }; // insert end\n  // edit Start\n\n\n  const [editmodalCentered, setEditModalCentered] = useState(false);\n  const [editCompanystate, setEditCompanystate] = useState([]);\n\n  const editHandleInput = e => {\n    e.persist();\n    setEditCompanystate({ ...editCompanystate,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const editCompany = (e, id) => {\n    e.preventDefault();\n    axios.get(`/api/EditCompanies/${id}`).then(res => {\n      if (res.data.status === 200) {\n        setEditCompanystate(res.data.company);\n        setEditModalCentered(true);\n      } else if (res.data.status === 404) {\n        swal(\"Error\", res.data.message, \"error\");\n      }\n    });\n  };\n\n  const updateCompany = e => {\n    e.preventDefault();\n    axios.post(\"/api/UpdateCompanies\", editCompanystate).then(res => {\n      if (res.data.status === 200) {\n        // console.log(res.data.status);\n        setEditCompanystate('');\n        swal(\"Success\", res.data.message, \"success\");\n        setEditModalCentered(false); //  this.props.history.push(\"/\")\n      }\n    });\n  }; // edit End \n  // delete section \n\n\n  const deleteCompany = (e, id) => {\n    // e.preventDefault();\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: [t('cancel'), t('confirm')],\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.delete(`/api/DeleteCompanies/${id}`).then(res => {\n          if (res.data.status === 200) {\n            swal(res.data.message, {\n              icon: \"success\"\n            }); // swal(\"Success\",,\"success\");\n            // thisClicked.closest(\"tr\").remove();\n          } else if (res.data.status === 404) {\n            swal(\"Error\", res.data.message, \"error\");\n          }\n\n          setCompanyState([]);\n        });\n      } else {\n        swal(\"Your Data is safe now!\");\n      }\n    });\n  }; // delete end \n  //for retriving data using laravel API\n\n\n  const [fetchData, setFetchData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get('/api/GetCompanies').then(res => {\n      if (res.data.status === 200) {\n        setFetchData(res.data.fetchData);\n      }\n\n      setLoading(false);\n    });\n  }, [companyState, editCompanystate]);\n  var viewCompanies_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary \",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        style: {\n          position: 'fixed',\n          top: '50%',\n          left: '50%'\n        },\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  } else {\n    viewCompanies_HTMLTABLE = fetchData.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => editCompany(e, item.id),\n            className: \"btn btn-outline-danger btn-sm\",\n            children: t('edit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => deleteCompany(e, item.id),\n            className: \"btn btn-outline-warning btn-sm\",\n            children: t('delete')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CBreadcrumb, {\n      style: {\n        \"--cui-breadcrumb-divider\": \"'>'\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CBreadcrumbItem, {\n        className: \"font-weight-bold\",\n        href: \"/branches\",\n        children: t('Branches')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CBreadcrumbItem, {\n        active: true,\n        children: t('companies')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade\",\n      show: modalCentered,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(saveCompany),\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: t('add_company')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalCentered(false),\n            variant: \"\",\n            className: \"close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: t('user_id')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: t('user_id'),\n              name: \"user_id\",\n              required: true,\n              disabled: true,\n              onChange: handleInput,\n              value: localStorage.getItem('auth_id')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: t('company_name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register(\"company\"),\n              className: \"form-control\",\n              placeholder: t('company_name'),\n              name: \"company\",\n              onChange: handleInput,\n              value: companyState.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: (_errors$company = errors.company) === null || _errors$company === void 0 ? void 0 : _errors$company.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalCentered(false),\n            variant: \"danger light\",\n            children: t('close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [t('save'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade\",\n      show: editmodalCentered,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: updateCompany,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: t('edit_company')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalCentered(false),\n            variant: \"\",\n            className: \"close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: t('id')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              disabled: \"disabled\",\n              className: \"form-control\" // placeholder=\"Company Name\"\n              ,\n              name: \"id\",\n              required: true,\n              onChange: editHandleInput,\n              value: editCompanystate.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: t('company_name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: t('company_name'),\n              name: \"company\",\n              required: true,\n              onChange: editHandleInput,\n              value: editCompanystate.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalCentered(false),\n            variant: \"danger light\",\n            children: t('close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [t('update'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header border-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title mb-2\",\n                children: [t('companies'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"button\",\n                className: \"mb-2 mr-2\",\n                onClick: () => setModalCentered(true),\n                children: t('add_company')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body p-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive \",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table \",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: [t('number'), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: [t('company_name'), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: [t('actions'), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: viewCompanies_HTMLTABLE\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Company, \"98+0mFtlVqKfve8PUaUqdBZ6b7Y=\", false, function () {\n  return [useForm, useTranslation];\n});\n\n_c = Company;\nexport default Company;\n\nvar _c;\n\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Companies/Company.js"],"names":["React","Fragment","useState","useEffect","PageTItle","Button","Modal","Form","axios","swal","useTranslation","useForm","yupResolver","yup","CBreadcrumb","CBreadcrumbItem","Company","schema","object","shape","company","string","required","register","handleSubmit","reset","formState","errors","resolver","t","modalCentered","setModalCentered","companyState","setCompanyState","handleInput","e","preventDefault","target","name","value","saveCompany","post","then","res","data","status","message","editmodalCentered","setEditModalCentered","editCompanystate","setEditCompanystate","editHandleInput","persist","editCompany","id","get","updateCompany","deleteCompany","title","text","icon","buttons","dangerMode","willDelete","delete","fetchData","setFetchData","loading","setLoading","viewCompanies_HTMLTABLE","position","top","left","map","item","i","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst Company = () => {\r\n    // for validation start\r\n    const schema = yup.object().shape({\r\n        company: yup.string().required(),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    //   validation end\r\n\r\n    // for localization\r\n    const { t } = useTranslation();\r\n\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    // insert section\r\n    const [companyState, setCompanyState] = useState([]);\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        setCompanyState({ ...companyState, [e.target.name]: e.target.value });\r\n    };\r\n    const saveCompany = (e) => {\r\n        axios.post(\"/api/InsertCompanies\", companyState).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setCompanyState('');\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n    };\r\n    // insert end\r\n    // edit Start\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    const [editCompanystate, setEditCompanystate] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditCompanystate({ ...editCompanystate, [e.target.name]: e.target.value });\r\n    };\r\n    const editCompany = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditCompanies/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditCompanystate(res.data.company);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n        });\r\n    }\r\n    const updateCompany = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateCompanies\", editCompanystate).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setEditCompanystate('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n\r\n    };\r\n    // edit End \r\n    // delete section \r\n    const deleteCompany = (e, id) => {\r\n        // e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteCompanies/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(res.data.message, {\r\n                                icon: \"success\",\r\n                            });\r\n                            // swal(\"Success\",,\"success\");\r\n                            // thisClicked.closest(\"tr\").remove();\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                        setCompanyState([]);\r\n\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n    }\r\n    // delete end \r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/GetCompanies').then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [companyState, editCompanystate]);\r\n\r\n    var viewCompanies_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\"><span className=\"sr-only\" style={{position: 'fixed',top: '50%',  left: '50%'}}>{t('loading')}</span></div>\r\n    } else {\r\n        viewCompanies_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>{item.company}</td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={(e) => editCompany(e, item.id)} className=\"btn btn-outline-danger btn-sm\">{t('edit')}</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"button\" onClick={(e) => deleteCompany(e, item.id)} className=\"btn btn-outline-warning btn-sm\">{t('delete')}</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem className=\"font-weight-bold\" href=\"/branches\" >{t('Branches')}</CBreadcrumbItem>\r\n                <CBreadcrumbItem active>{t('companies')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('companies')} activeMenu={t('add_company')} motherMenu={t('companies')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveCompany)} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_company')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('user_id')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('user_id')}\r\n                                name=\"user_id\"\r\n                                required\r\n                                disabled\r\n                                onChange={handleInput}\r\n                                value={localStorage.getItem('auth_id')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('company_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"company\")}\r\n                                className=\"form-control\"\r\n                                placeholder={t('company_name')}\r\n                                name=\"company\"\r\n                                onChange={handleInput}\r\n                                value={companyState.company}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.company?.message}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateCompany} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_company')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('id')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled=\"disabled\"\r\n                                className=\"form-control\"\r\n                                // placeholder=\"Company Name\"\r\n                                name=\"id\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editCompanystate.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('company_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('company_name')}\r\n                                name=\"company\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editCompanystate.company}\r\n                            />\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('companies')} </h4>\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 mr-2\"\r\n                                    onClick={() => setModalCentered(true)} >\r\n                                    {t('add_company')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')} </th>\r\n                                            <th>{t('company_name')} </th>\r\n                                            <th>{t('actions')} </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewCompanies_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Company;\r\n"]},"metadata":{},"sourceType":"module"}