{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\React-Koki-v1.0-06-April-2021\\\\React-Koki\\\\src\\\\jsx\\\\components\\\\Dashboard\\\\Analytics\\\\Analyticsapexcustommap.js\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Analyticsapexcustommap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: false,\n      //Set render state to false  \n      series: [{\n        name: \"New Clients\",\n        data: [20, 40, 60, 35, 50, 70, 30]\n      }, {\n        name: \"Retained Clients\",\n        data: [-28, -32, -12, -5, -35, -10, -30]\n      }],\n      options: {\n        chart: {\n          type: \"bar\",\n          height: 400,\n          stacked: true,\n          toolbar: {\n            show: false\n          },\n          sparkline: {//enabled: true\n          },\n          backgroundBarRadius: 5,\n          offsetX: -10\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: \"45%\",\n            endingShape: \"rounded\",\n            colors: {\n              backgroundBarColors: [\"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\", \"rgba(0,0,0,0)\"],\n              backgroundBarOpacity: 1,\n              backgroundBarRadius: 5,\n              opacity: 0\n            }\n          },\n          distributed: true\n        },\n        colors: ['#dd2f6e', '#3e4954'],\n        grid: {\n          show: true\n        },\n        legend: {\n          show: false\n        },\n        fill: {\n          opacity: 1\n        },\n        dataLabels: {\n          enabled: false,\n          colors: [\"#6EC51E\", \"#FF285C\"],\n          dropShadow: {\n            enabled: true,\n            top: 1,\n            left: 1,\n            blur: 1,\n            opacity: 1\n          }\n        },\n        xaxis: {\n          categories: ['4', '5', '6', '7', '8', '9', '10'],\n          labels: {\n            style: {\n              colors: '#787878',\n              fontSize: '13px',\n              fontFamily: 'Poppins',\n              fontWeight: 400\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          crosshairs: {\n            show: false\n          }\n        },\n        yaxis: {\n          //show: false\n          labels: {\n            style: {\n              colors: \"#787878\",\n              fontSize: \"13px\",\n              fontFamily: \"Poppins\",\n              fontWeight: 400\n            }\n          }\n        },\n        tooltip: {\n          x: {\n            show: true\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      //Start the timer\n      this.setState({\n        render: true\n      }); //After 1 second, set render to true\n    }.bind(this), 1000);\n  }\n\n  render() {\n    let renderContainer = false;\n\n    if (this.state.render) {\n      renderContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"bar\",\n          height: 440\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 22\n      }, this);\n    }\n\n    return renderContainer //Render the dom elements, or, when this.state == false, nothing.\t\n    ;\n  }\n\n}\n\nexport default Analyticsapexcustommap;","map":{"version":3,"sources":["D:/fineDine/React-Koki-v1.0-06-April-2021/React-Koki/src/jsx/components/Dashboard/Analytics/Analyticsapexcustommap.js"],"names":["React","Component","ReactApexChart","Analyticsapexcustommap","constructor","props","state","render","series","name","data","options","chart","type","height","stacked","toolbar","show","sparkline","backgroundBarRadius","offsetX","plotOptions","bar","columnWidth","endingShape","colors","backgroundBarColors","backgroundBarOpacity","opacity","distributed","grid","legend","fill","dataLabels","enabled","dropShadow","top","left","blur","xaxis","categories","labels","style","fontSize","fontFamily","fontWeight","axisBorder","crosshairs","yaxis","tooltip","x","componentDidMount","setTimeout","setState","bind","renderContainer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass Analyticsapexcustommap extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n\t\trender: false, //Set render state to false  \r\n         series: [\r\n            {\r\n               name: \"New Clients\",\r\n               data: [20, 40, 60, 35, 50, 70, 30],\r\n            },\r\n            {\r\n               name: \"Retained Clients\",\r\n               data: [-28, -32, -12, -5, -35, -10, -30 ],\r\n            },\r\n         ],\r\n         options: {\r\n            chart: {\r\n               type: \"bar\",\r\n               height: 400,\r\n               stacked: true,\r\n               toolbar: {\r\n                  show: false,\r\n               },\r\n               sparkline: {\r\n                  //enabled: true\r\n               },\r\n               backgroundBarRadius: 5,\r\n               offsetX: -10,\r\n            },\r\n            plotOptions: {\r\n               bar: {\r\n                  columnWidth: \"45%\",\r\n                  endingShape: \"rounded\",\r\n                  colors: {\r\n                     backgroundBarColors: [\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                        \"rgba(0,0,0,0)\",\r\n                     ],\r\n                     backgroundBarOpacity: 1,\r\n                     backgroundBarRadius: 5,\r\n                     opacity: 0,\r\n                  },\r\n               },\r\n               distributed: true,\r\n            },\r\n           colors:['#dd2f6e', '#3e4954'],\r\n\r\n            grid: {\r\n               show: true,\r\n            },\r\n            legend: {\r\n               show: false,\r\n            },\r\n            fill: {\r\n               opacity: 1,\r\n            },\r\n            dataLabels: {\r\n               enabled: false,\r\n               colors: [\"#6EC51E\", \"#FF285C\"],\r\n               dropShadow: {\r\n                  enabled: true,\r\n                  top: 1,\r\n                  left: 1,\r\n                  blur: 1,\r\n                  opacity: 1,\r\n               },\r\n            },\r\n            xaxis: {\r\n               categories: ['4', '5', '6', '7', '8', '9', '10'],\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tcolors: '#787878',\r\n\t\t\t\t\t\tfontSize: '13px',\r\n\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\tfontWeight: 400\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\taxisBorder: {\r\n\t\t\t\t\tshow: false,\r\n\t\t\t\t},\r\n              \r\n               crosshairs: {\r\n                  show: false,\r\n               },\r\n              \r\n            },\r\n\r\n            yaxis: {\r\n               //show: false\r\n               labels: {\r\n                  style: {\r\n                     colors: \"#787878\",\r\n                     fontSize: \"13px\",\r\n                     fontFamily: \"Poppins\",\r\n                     fontWeight: 400,\r\n                  },\r\n               },\r\n            },\r\n\r\n            tooltip: {\r\n               x: {\r\n                  show: true,\r\n               },\r\n            },\r\n         },\r\n      };\r\n   }\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t  setTimeout(function() { //Start the timer\r\n\t\t  this.setState({render: true}) //After 1 second, set render to true\r\n\t  }.bind(this), 1000)\r\n\t}\t\r\n\t\t\r\n    render() {\r\n\t\tlet renderContainer = false;\r\n\t\tif(this.state.render) {\r\n\t\t renderContainer = <div id=\"chart\">\r\n\t\t\t\t<ReactApexChart\r\n\t\t\t\t   options={this.state.options}\r\n\t\t\t\t   series={this.state.series}\r\n\t\t\t\t   type=\"bar\"\r\n\t\t\t\t   height={440}\r\n\t\t\t\t/>\r\n\t\t\t </div>;\r\n\t\t}\t\r\n        return (\r\n\t\t\trenderContainer //Render the dom elements, or, when this.state == false, nothing.\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Analyticsapexcustommap;\r\n"]},"metadata":{},"sourceType":"module"}