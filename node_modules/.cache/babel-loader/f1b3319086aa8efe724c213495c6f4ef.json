{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Products\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, Component, KeyboardEventHandler } from \"react\"; // import PageTItle from \"../../layouts/PageTitle\";\n\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { CBreadcrumb, CBreadcrumbItem, CDropdownMenu, CDropdownToggle, CDropdown } from '@coreui/react';\nimport Select from 'react-select';\nimport TagInputSelect from './TagInputSelect';\nimport Switch from \"react-switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = props => {\n  _s();\n\n  // validation\n  const schema = yup.object().shape({\n    variant_name: yup.string().required(\"This field is a required field\"),\n    Buyingquantity: yup.number().positive().integer().required().typeError('You must specify a number'),\n    buyingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    sellingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    Description: yup.string().required(\"This field is a required field\"),\n    Advice: yup.string().required(\"This field is a required field\"),\n    CurrentPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    OldPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    UnitID: yup.string().required(\"This field is a required field\"),\n    attributes: yup.string().required(\"This field is a required field\")\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // for localization\n\n  const {\n    t\n  } = useTranslation();\n  const id = props.match.params.id;\n  const [barchid, setBranchId] = useState(0); // insert a section\n\n  const [variantInsert, setVariantInsert] = useState({\n    variant_name: '',\n    // SellingQuantity: '',\n    Buyingquantity: '',\n    buyingPrice: '',\n    sellingPrice: '',\n    Description: '',\n    Advice: '',\n    CurrentPrice: '',\n    OldPrice: '',\n    UnitID: '',\n    sub_categoryID: '',\n    ProductName: '',\n    branch_id: barchid\n  });\n\n  const handleInput = e => {\n    e.persist();\n    setVariantInsert({ ...variantInsert,\n      [e.target.name]: e.target.value\n    });\n  }; // insert\n\n\n  const saveProduct = e => {\n    // e.preventDefault();\n    // console.log(e.target[0].files);\n    // var files = e.target[0].files;\n    const formData = new FormData();\n\n    for (let i = 0; i < imageState.image.length; i++) {\n      formData.append(\"file[]\", imageState.image[i]);\n    }\n\n    formData.append('variant_name', variantInsert.variant_name);\n    formData.append('Buyingquantity', variantInsert.Buyingquantity);\n    formData.append('buyingPrice', variantInsert.buyingPrice);\n    formData.append('sellingPrice', variantInsert.sellingPrice);\n    formData.append('Description', variantInsert.Description);\n    formData.append('Advice', variantInsert.Advice);\n    formData.append('CurrentPrice', variantInsert.CurrentPrice);\n    formData.append('OldPrice', variantInsert.OldPrice);\n    formData.append('UnitID', variantInsert.UnitID);\n    formData.append('sub_categoryID', variantInsert.sub_categoryID);\n    formData.append('ProductName', variantInsert.ProductName);\n    formData.append('branch_id', barchid);\n    axios.post(`/api/InsertInventory/${id}`, formData).then(res => {\n      if (res.data.status === 200) {\n        setVariantInsert({\n          variant_name: '',\n          // SellingQuantity: '',\n          Buyingquantity: '',\n          buyingPrice: '',\n          sellingPrice: '',\n          Description: '',\n          Advice: '',\n          CurrentPrice: '',\n          OldPrice: '',\n          UnitID: '',\n          sub_categoryID: '',\n          branch_id: barchid\n        });\n        reset();\n        swal(\"Success\", res.data.message, \"success\");\n        setSelectedFiles([]);\n      }\n    });\n  }; // select images start \n\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [imageState, setImageState] = useState([]);\n\n  const handleImageChange = e => {\n    const imagesArray = [];\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      imagesArray.push(e.target.files[i]);\n    }\n\n    setImageState({ ...imageState,\n      image: imagesArray\n    });\n    setSelectedFiles([]);\n\n    if (e.target.files) {\n      const filesArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n      setSelectedFiles(prevImages => prevImages.concat(filesArray));\n      Array.from(e.target.files).map(file => URL.revokeObjectURL(file));\n    }\n  };\n\n  const renderPhotos = source => {\n    return source.map(photo => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"p-2\",\n        src: photo,\n        alt: \"\",\n        style: {\n          width: \"100\",\n          height: \"100px\"\n        }\n      }, photo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this);\n    });\n  }; // select images end \n  //for retriving data using laravel API\n\n\n  const [fetchData, setFetchData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unitData, setUnitData] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/GetUnitsAll/${id}`).then(res => {\n      if (res.data.status === 200) {\n        setBranchId(res.data.fetchData[0].branchID);\n        setUnitData(res.data.fetchData);\n      }\n\n      setLoading(false);\n    });\n    axios.get(`/api/GetAttributes`).then(res => {\n      if (res.data.status === 200) {\n        setFetchData(res.data.fetchData);\n      }\n    });\n  }, [id, variantInsert]);\n  const [displayValue, setDisplayValue] = useState([]);\n\n  const handleSelectEvent = e => {\n    setDisplayValue(Array.isArray(e) ? e.map(item => item.label) : []);\n  };\n\n  const [tagArray, setTagArray] = useState([]);\n\n  const check = e => {\n    e.preventDefault();\n    console.log(tagArray);\n  };\n\n  var viewProducts_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary \",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }, this);\n  } else {\n    viewProducts_HTMLTABLE = fetchData.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-3 col-lg-4 col-sm-6\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CBreadcrumb, {\n      style: {\n        \"--cui-breadcrumb-divider\": \"'>'\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"font-weight-bold\",\n        to: `/products/${id}`,\n        children: [t('products_list'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"8p1PJ3M/Dhlgyg3ATqmBUeqnWH8=\", false, function () {\n  return [useForm, useTranslation];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Products/AddProduct.js"],"names":["React","Fragment","useState","useEffect","Component","KeyboardEventHandler","Button","Card","Form","axios","swal","Link","useTranslation","useForm","yupResolver","yup","CBreadcrumb","CBreadcrumbItem","CDropdownMenu","CDropdownToggle","CDropdown","Select","TagInputSelect","Switch","AddProduct","props","schema","object","shape","variant_name","string","required","Buyingquantity","number","positive","integer","typeError","buyingPrice","sellingPrice","Description","Advice","CurrentPrice","OldPrice","UnitID","attributes","register","handleSubmit","reset","formState","errors","resolver","t","id","match","params","barchid","setBranchId","variantInsert","setVariantInsert","sub_categoryID","ProductName","branch_id","handleInput","e","persist","target","name","value","saveProduct","formData","FormData","i","imageState","image","length","append","post","then","res","data","status","message","setSelectedFiles","selectedFiles","setImageState","handleImageChange","imagesArray","files","push","filesArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","revokeObjectURL","renderPhotos","source","photo","width","height","fetchData","setFetchData","loading","setLoading","unitData","setUnitData","get","branchID","displayValue","setDisplayValue","handleSelectEvent","isArray","item","label","tagArray","setTagArray","check","preventDefault","console","log","viewProducts_HTMLTABLE"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, Component, KeyboardEventHandler } from \"react\";\r\n// import PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem, CDropdownMenu, CDropdownToggle, CDropdown } from '@coreui/react'\r\nimport Select from 'react-select';\r\nimport TagInputSelect from './TagInputSelect'\r\nimport Switch from \"react-switch\";\r\n\r\nconst AddProduct = (props) => {\r\n    // validation\r\n    const schema = yup.object().shape({\r\n        variant_name: yup.string().required(\"This field is a required field\"),\r\n        Buyingquantity: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        buyingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        sellingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        Description: yup.string().required(\"This field is a required field\"),\r\n        Advice: yup.string().required(\"This field is a required field\"),\r\n        CurrentPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        OldPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        UnitID: yup.string().required(\"This field is a required field\"),\r\n        attributes: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    const id = props.match.params.id;\r\n\r\n\r\n    const [barchid, setBranchId] = useState(0);\r\n\r\n    // insert a section\r\n    const [variantInsert, setVariantInsert] = useState({\r\n        variant_name: '',\r\n        // SellingQuantity: '',\r\n        Buyingquantity: '',\r\n        buyingPrice: '',\r\n        sellingPrice: '',\r\n        Description: '',\r\n        Advice: '',\r\n        CurrentPrice: '',\r\n        OldPrice: '',\r\n        UnitID: '',\r\n        sub_categoryID: '',\r\n        ProductName: '',\r\n        branch_id: barchid\r\n    });\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setVariantInsert({ ...variantInsert, [e.target.name]: e.target.value });\r\n    };\r\n    // insert\r\n    const saveProduct = (e) => {\r\n        // e.preventDefault();\r\n        // console.log(e.target[0].files);\r\n\r\n        // var files = e.target[0].files;\r\n        const formData = new FormData();\r\n        for (let i = 0; i < imageState.image.length; i++) {\r\n            formData.append(\"file[]\", imageState.image[i]);\r\n        }\r\n        formData.append('variant_name', variantInsert.variant_name);\r\n        formData.append('Buyingquantity', variantInsert.Buyingquantity);\r\n        formData.append('buyingPrice', variantInsert.buyingPrice);\r\n        formData.append('sellingPrice', variantInsert.sellingPrice);\r\n        formData.append('Description', variantInsert.Description);\r\n        formData.append('Advice', variantInsert.Advice);\r\n        formData.append('CurrentPrice', variantInsert.CurrentPrice);\r\n        formData.append('OldPrice', variantInsert.OldPrice);\r\n        formData.append('UnitID', variantInsert.UnitID);\r\n        formData.append('sub_categoryID', variantInsert.sub_categoryID);\r\n        formData.append('ProductName', variantInsert.ProductName);\r\n        formData.append('branch_id', barchid);\r\n        axios.post(`/api/InsertInventory/${id}`, formData).then(res => {\r\n            if (res.data.status === 200) {\r\n                setVariantInsert({\r\n                    variant_name: '',\r\n                    // SellingQuantity: '',\r\n                    Buyingquantity: '',\r\n                    buyingPrice: '',\r\n                    sellingPrice: '',\r\n                    Description: '',\r\n                    Advice: '',\r\n                    CurrentPrice: '',\r\n                    OldPrice: '',\r\n                    UnitID: '',\r\n                    sub_categoryID: '',\r\n                    branch_id: barchid\r\n                });\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setSelectedFiles([]);\r\n            }\r\n        });\r\n    };\r\n    // select images start \r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [imageState, setImageState] = useState([]);\r\n    const handleImageChange = (e) => {\r\n        const imagesArray = [];\r\n        for (let i = 0; i < e.target.files.length; i++) {\r\n            imagesArray.push(e.target.files[i]);\r\n        }\r\n        setImageState({ ...imageState, image: imagesArray });\r\n\r\n        setSelectedFiles([]);\r\n        if (e.target.files) {\r\n            const filesArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file));\r\n            setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n            Array.from(e.target.files).map(\r\n                (file) => URL.revokeObjectURL(file)\r\n            );\r\n        }\r\n\r\n    };\r\n    const renderPhotos = (source) => {\r\n        return source.map((photo) => {\r\n            return <img className=\"p-2\" src={photo} alt=\"\" key={photo} style={{ width: \"100\", height: \"100px\" }} />;\r\n        });\r\n    };\r\n    // select images end \r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [unitData, setUnitData] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`/api/GetUnitsAll/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setBranchId(res.data.fetchData[0].branchID);\r\n                setUnitData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n        axios.get(`/api/GetAttributes`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n        });\r\n\r\n    }, [id, variantInsert]);\r\n\r\n    const [displayValue, setDisplayValue] = useState([]);\r\n    const handleSelectEvent = (e) => {\r\n        setDisplayValue(Array.isArray(e) ? e.map(item => item.label) : [])\r\n    }\r\n    const [tagArray, setTagArray] = useState([]);\r\n\r\n    const check = (e) => {\r\n        e.preventDefault()\r\n        console.log(tagArray);\r\n    }\r\n  \r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n\r\n        viewProducts_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <div className=\"col-xl-3 col-lg-4 col-sm-6\" key={i}>\r\n\r\n                    </div>\r\n                )\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <Link className=\"font-weight-bold\" to={`/products/${id}`}>{t('products_list')} </Link>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('variants')} activeMenu={t('variant_list')} motherMenu={t('variants')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            {/* <Modal className=\"fade bd-example-modal-lg\" show={modalCentered} size=\"lg\"> */}\r\n           \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}