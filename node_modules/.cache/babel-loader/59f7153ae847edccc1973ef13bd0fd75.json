{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Attributes\\\\Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { CBreadcrumb } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Options = props => {\n  _s();\n\n  var _errors$optionName, _errors$description;\n\n  // validation start\n  const schema = yup.object().shape({\n    optionName: yup.string().required(\"This field is a required field\"),\n    description: yup.string().required(\"This field is a required field\")\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // for localization\n\n  const {\n    t\n  } = useTranslation(); // ID\n\n  const id = props.match.params.id; // insert modal\n\n  const [modalCentered, setModalCentered] = useState(false); // edit modal\n\n  const [editmodalCentered, setEditModalCentered] = useState(false); // insert a section\n\n  const [Insert, setInsert] = useState({\n    optionName: '',\n    description: '',\n    attribute_id: id\n  });\n\n  const handleInput = e => {\n    e.persist();\n    setInsert({ ...Insert,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const save = e => {\n    // e.preventDefault();\n    axios.post(\"/api/InsertOption\", Insert).then(res => {\n      if (res.data.status === 200) {\n        setInsert({\n          optionName: '',\n          description: '',\n          attribute_id: id\n        });\n        reset();\n        swal(\"Success\", res.data.message, \"success\");\n        setModalCentered(false); //  this.props.history.push(\"/\")\n      }\n    });\n  }; // edit code\n\n\n  const [edit, setUnit] = useState([]);\n\n  const editHandleInput = e => {\n    e.persist();\n    setUnit({ ...edit,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const fetch = (e, id) => {\n    e.preventDefault();\n    axios.get(`/api/EditOption/${id}`).then(res => {\n      if (res.data.status === 200) {\n        setUnit(res.data.unit);\n        setEditModalCentered(true);\n      } else if (res.data.status === 404) {\n        swal(\"Error\", res.data.message, \"error\");\n      }\n    });\n  };\n\n  const update = e => {\n    e.preventDefault();\n    axios.post(\"/api/UpdateOption\", edit).then(res => {\n      if (res.data.status === 200) {\n        setUnit('');\n        swal(\"Success\", res.data.message, \"success\");\n        setEditModalCentered(false); //  this.props.history.push(\"/\")\n      } else if (res.data.status === 404) {\n        swal(\"Error\", res.data.message, \"error\");\n      }\n    });\n  }; //for retriving data using laravel API\n\n\n  const [fetchData, setFetchData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`/api/GetOptions/${id}`).then(res => {\n      if (res.data.status === 200) {\n        // console.log(res.data.fetchData);\n        setFetchData(res.data.fetchData);\n      }\n\n      setLoading(false);\n    });\n  }, [Insert, edit, id]);\n  var viewProducts_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary \",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  } else {\n    viewProducts_HTMLTABLE = fetchData.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", item.optionName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => fetch(e, item.id),\n            className: \"btn btn-outline-danger btn-sm\",\n            children: t('edit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => deleteOption(e, item.id),\n            className: \"btn btn-outline-warning btn-sm\",\n            children: t('delete')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this);\n    });\n  } // delete section \n\n\n  const deleteOption = (e, id) => {\n    e.preventDefault();\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: [t('cancel'), t('confirm')],\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.delete(`/api/DeleteOption/${id}`).then(res => {\n          if (res.data.status === 200) {\n            swal(\"Success\", res.data.message, \"success\");\n            setInsert({\n              optionName: '',\n              description: '',\n              attribute_id: id\n            });\n          } else if (res.data.status === 404) {\n            swal(\"Error\", res.data.message, \"error\");\n          }\n        });\n      } else {\n        swal(\"Your Data is safe now!\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CBreadcrumb, {\n      style: {\n        \"--cui-breadcrumb-divider\": \"'>'\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"font-weight-bold\",\n        to: \"/branches\",\n        children: [t('Branches'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n        className: \"font-weight-bold\",\n        to: \"/attributes\",\n        children: [t('attributes'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), \"  /\", /*#__PURE__*/_jsxDEV(Link, {\n        active: true,\n        children: t('options')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade\",\n      show: modalCentered,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(save),\n        method: \"POST\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: t('add_option')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalCentered(false),\n            variant: \"\",\n            className: \"close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [t('option_name'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register(\"optionName\"),\n              className: \"form-control\",\n              placeholder: t('option_name'),\n              name: \"optionName\",\n              onChange: handleInput,\n              value: Insert.optionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: (_errors$optionName = errors.optionName) === null || _errors$optionName === void 0 ? void 0 : _errors$optionName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [t('description'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              ...register(\"description\"),\n              className: \"form-control\",\n              placeholder: t('description'),\n              name: \"description\",\n              onChange: handleInput,\n              value: Insert.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalCentered(false),\n            variant: \"danger light\",\n            children: t('close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: t('save')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade\",\n      show: editmodalCentered,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: update,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [t('edit_option'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalCentered(false),\n            variant: \"\",\n            className: \"close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: t('option_name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: t('option_name'),\n              name: \"optionName\",\n              required: true,\n              onChange: editHandleInput,\n              value: edit.optionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [t('description'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: t('description'),\n              name: \"description\",\n              onChange: editHandleInput,\n              value: edit.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalCentered(false),\n            variant: \"danger light\",\n            children: t('close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [t('update'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header border-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title mb-2\",\n                children: t('options')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"button\",\n                className: \"mb-2 mr-2\",\n                onClick: () => setModalCentered(true),\n                children: t('add_option')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body p-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive \",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table \",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('number')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('option_name')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('description')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('actions')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: viewProducts_HTMLTABLE\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Options, \"B4jLIXMiummTGW4ovGG1/SMg8g8=\", false, function () {\n  return [useForm, useTranslation];\n});\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Attributes/Options.js"],"names":["React","Fragment","useState","useEffect","Link","Button","Modal","Form","axios","swal","useTranslation","useForm","yupResolver","yup","CBreadcrumb","Options","props","schema","object","shape","optionName","string","required","description","register","handleSubmit","reset","formState","errors","resolver","t","id","match","params","modalCentered","setModalCentered","editmodalCentered","setEditModalCentered","Insert","setInsert","attribute_id","handleInput","e","persist","target","name","value","save","post","then","res","data","status","message","edit","setUnit","editHandleInput","fetch","preventDefault","get","unit","update","fetchData","setFetchData","loading","setLoading","viewProducts_HTMLTABLE","map","item","i","deleteOption","title","text","icon","buttons","dangerMode","willDelete","delete"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb } from '@coreui/react'\r\n\r\nconst Options = (props) => {\r\n    // validation start\r\n    const schema = yup.object().shape({\r\n        optionName: yup.string().required(\"This field is a required field\"),\r\n        description: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    \r\n    // for localization\r\n    const { t } = useTranslation();\r\n    // ID\r\n    const id = props.match.params.id;\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert a section\r\n    const [Insert, setInsert] = useState({\r\n        optionName: '',\r\n        description: '',\r\n        attribute_id: id\r\n    });\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setInsert({ ...Insert, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const save= (e) => {\r\n        // e.preventDefault();\r\n        axios.post(\"/api/InsertOption\", Insert).then(res => {\r\n            if (res.data.status === 200) {\r\n                setInsert({\r\n                    optionName: '',\r\n                    description: '',\r\n                    attribute_id: id\r\n                });\r\n                reset();\r\n\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n    };\r\n    // edit code\r\n    const [edit, setUnit] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setUnit({ ...edit, [e.target.name]: e.target.value });\r\n    };\r\n    const fetch = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditOption/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setUnit(res.data.unit);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    const update = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateOption\", edit).then(res => {\r\n            if (res.data.status === 200) {\r\n                setUnit('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/GetOptions/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.fetchData);\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [Insert, edit, id]);\r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n        viewProducts_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <td>{i + 1}</td>\r\n\r\n                        <td> {item.optionName}</td>\r\n                        <td> {item.description}</td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={(e) => fetch(e, item.id)} className=\"btn btn-outline-danger btn-sm\">{t('edit')}</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"button\" onClick={(e) => deleteOption(e, item.id)} className=\"btn btn-outline-warning btn-sm\">{t('delete')}</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete section \r\n    const deleteOption = (e, id) => {\r\n        e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteOption/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                            setInsert({\r\n                                optionName: '',\r\n                                description: '',\r\n                                attribute_id: id\r\n                            });\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <Fragment>\r\n             <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <Link className=\"font-weight-bold\" to=\"/branches\" >{t('Branches')} </Link> / \r\n                <Link className=\"font-weight-bold\" to=\"/attributes\" >{t('attributes')} </Link>  / \r\n                <Link active>{t('options')}</Link>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('units')} activeMenu={t('add_unit')} motherMenu={t('units')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(save)} method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_option')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('option_name')} </strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"optionName\")}\r\n\r\n                                className=\"form-control\"\r\n                                placeholder={t('option_name')}\r\n                                name=\"optionName\"\r\n                                onChange={handleInput}\r\n                                value={Insert.optionName}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.optionName?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('description')} </strong> </label>\r\n                            <textarea\r\n                                    type=\"text\"\r\n                                    {...register(\"description\")}\r\n                                    className=\"form-control\"\r\n                                    placeholder={t('description')}\r\n                                    name=\"description\"\r\n                                    onChange={handleInput}\r\n                                    value={Insert.description}\r\n                                />\r\n                            <div className=\"text-danger\">\r\n                                {errors.description?.message}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')}</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={update} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_option')} </Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('option_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('option_name')}\r\n                                name=\"optionName\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={edit.optionName}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('description')} </strong> </label>\r\n                            <textarea\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder={t('description')}\r\n                                    name=\"description\"\r\n                                    onChange={editHandleInput}\r\n                                    value={edit.description}\r\n                                />\r\n                           \r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('options')}</h4>\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 mr-2\"\r\n                                    onClick={() => setModalCentered(true)} >\r\n                                    {t('add_option')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')}</th>\r\n                                            <th>{t('option_name')}</th>\r\n                                            <th>{t('description')}</th>\r\n                                            <th>{t('actions')}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewProducts_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Options;\r\n"]},"metadata":{},"sourceType":"module"}