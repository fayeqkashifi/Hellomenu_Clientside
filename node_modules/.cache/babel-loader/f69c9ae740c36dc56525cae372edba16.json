{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Branches\\\\ShowBranchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowBranchDetails = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const branchNameId = atob(props.match.params.id); // atob(branchNameId)\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/GetBranchForShow/${branchNameId}`).then(res => {\n      if (res.data.status === 200) {\n        setData(res.data.data);\n      }\n\n      setLoading(false);\n    });\n  }, []);\n  var viewShow_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: t('loading')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  } else {\n    viewShow_HTMLTABLE = data.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-4 col-lg-6 col-sm-6\",\n        children: \"nothing\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-center  h-200 align-items-center h-80\",\n    children: [atob(branchNameId), viewShow_HTMLTABLE]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShowBranchDetails, \"hiHKo1eqdwiARGCk2NqKb/EG2FU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ShowBranchDetails;\nexport default ShowBranchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowBranchDetails\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Branches/ShowBranchDetails.js"],"names":["React","useEffect","useState","axios","useTranslation","ShowBranchDetails","props","t","branchNameId","atob","match","params","id","loading","setLoading","data","setData","get","then","res","status","viewShow_HTMLTABLE","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAQH,cAAc,EAA5B;AACE,QAAMI,YAAY,GAAEC,IAAI,CAACH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAxB,CAFkC,CAGlC;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBZ,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAiBd,QAAQ,CAAC,EAAD,CAA/B;AACAD,EAAAA,SAAS,CAAC,MAAI;AAEXE,IAAAA,KAAK,CAACc,GAAN,CAAW,yBAAwBT,YAAa,EAAhD,EAAmDU,IAAnD,CAAwDC,GAAG,IAAI;AAC5D,UAAGA,GAAG,CAACJ,IAAJ,CAASK,MAAT,KAAoB,GAAvB,EAA2B;AACxBJ,QAAAA,OAAO,CAACG,GAAG,CAACJ,IAAJ,CAASA,IAAV,CAAP;AACF;;AACDD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALF;AAQF,GAVQ,EAUP,EAVO,CAAT;AAWA,MAAIO,kBAAkB,GAAC,EAAvB;;AACA,MAAGR,OAAH,EAAW;AACR,wBAAO;AAAA,gBAAKN,CAAC,CAAC,SAAD;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFA,MAEI;AACDc,IAAAA,kBAAkB,GAClBN,IAAI,CAACO,GAAL,CAAS,CAACC,IAAD,EAAMC,CAAN,KAAU;AACf,0BACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA,SAAiDA,CAAjD;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPD,CADA;AASH;;AAEA,sBACG;AAAK,IAAA,SAAS,EAAC,2DAAf;AAAA,eACOf,IAAI,CAACD,YAAD,CADX,EAEIa,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAOF,CAvCD;;GAAMhB,iB;UACSD,c;;;KADTC,iB;AAyCN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ShowBranchDetails = (props) => {\r\n\tconst { t } = useTranslation();\r\n   const branchNameId =atob(props.match.params.id);\r\n   // atob(branchNameId)\r\n   const [loading, setLoading]= useState(true); \r\n   const [data, setData]= useState([])\r\n   useEffect(()=>{\r\n\r\n      axios.get(`/api/GetBranchForShow/${branchNameId}`).then(res => {\r\n         if(res.data.status === 200){\r\n            setData(res.data.data);\r\n         }\r\n         setLoading(false);\r\n       });\r\n      \r\n\r\n   },[])\r\n   var viewShow_HTMLTABLE=\"\";\r\n   if(loading){\r\n      return <h4>{t('loading')}</h4>\r\n  }else{\r\n      viewShow_HTMLTABLE = \r\n      data.map((item,i)=>{\r\n          return (\r\n              <div className=\"col-xl-4 col-lg-6 col-sm-6\" key={i}>\r\n                  \r\n               nothing\r\n              </div>\r\n          )\r\n      })\r\n  }\r\n   \r\n   return (\r\n      <div className=\"row justify-content-center  h-200 align-items-center h-80\">\r\n            {atob(branchNameId)}\r\n         {viewShow_HTMLTABLE}\r\n      </div>\r\n   );\r\n\r\n};\r\n\r\nexport default ShowBranchDetails;\r\n"]},"metadata":{},"sourceType":"module"}