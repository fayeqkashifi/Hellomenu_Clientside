{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Products\\\\TagInputSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css'; // If using WebPack and style-loader.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagInputSelect = props => {\n  _s();\n\n  const x = props.item;\n  const [state, setState] = useState({\n    x: []\n  });\n\n  const handleChange = tags => {\n    setState({\n      tags\n    }); // props.setfunction(...props.arr,{ tags })\n  };\n\n  return /*#__PURE__*/_jsxDEV(TagsInput, {\n    value: state.tags,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagInputSelect, \"g43ESCsBY2f643opcsPpzPlGAkM=\");\n\n_c = TagInputSelect;\nexport default TagInputSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagInputSelect\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Products/TagInputSelect.js"],"names":["React","useState","TagsInput","TagInputSelect","props","x","item","state","setState","handleChange","tags"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,qCAAP,C,CAA6C;;;;AAE7C,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,CAAC,GAAED,KAAK,CAACE,IAAf;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAAEI,IAAAA,CAAC,EAAE;AAAL,GAAD,CAAlC;;AAEA,QAAMI,YAAY,GAAIC,IAAD,IAAU;AAC7BF,IAAAA,QAAQ,CAAC;AAAEE,MAAAA;AAAF,KAAD,CAAR,CAD6B,CAE7B;AACD,GAHD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAK,CAACG,IAAxB;AAA8B,IAAA,QAAQ,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAXD;;GAAMN,c;;KAAAA,c;AAaN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\r\n\r\nconst TagInputSelect = (props) => {\r\n  const x =props.item;\r\n  const [state, setState] = useState({ x: [] });\r\n  \r\n  const handleChange = (tags) => {\r\n    setState({ tags })\r\n    // props.setfunction(...props.arr,{ tags })\r\n  }\r\n  return (\r\n    <TagsInput value={state.tags} onChange={handleChange} />\r\n  );\r\n};\r\n\r\nexport default TagInputSelect;\r\n"]},"metadata":{},"sourceType":"module"}