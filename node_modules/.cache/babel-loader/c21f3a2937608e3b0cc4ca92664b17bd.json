{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Products\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\"; // import PageTItle from \"../../layouts/PageTitle\";\n\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { CBreadcrumb } from '@coreui/react';\nimport Select from 'react-select';\nimport TagInputSelect from './TagInputSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = props => {\n  _s();\n\n  // validation\n  const schema = yup.object().shape({\n    variant_name: yup.string().required(\"This field is a required field\"),\n    Buyingquantity: yup.number().positive().integer().required().typeError('You must specify a number'),\n    buyingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    sellingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    Description: yup.string().required(\"This field is a required field\"),\n    Advice: yup.string().required(\"This field is a required field\"),\n    CurrentPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    OldPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\n    UnitID: yup.string().required(\"This field is a required field\"),\n    attributes: yup.string().required(\"This field is a required field\")\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // for localization\n\n  const {\n    t\n  } = useTranslation();\n  const id = props.match.params.id; // insert a section\n\n  const [productInsert, setProductInsert] = useState([]);\n\n  const handleInput = e => {\n    e.persist();\n    setProductInsert({ ...productInsert,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const [imageState, setImageState] = useState([]);\n\n  const handleImage = e => {\n    setImageState({ ...imageState,\n      CategoryIcon: e.target.files[0]\n    });\n  }; // insert\n\n\n  const saveProduct = e => {\n    e.preventDefault();\n    const formData = new FormData(); // console.log(\"test\");\n\n    formData.append('image', imageState.image);\n    formData.append('Description', productInsert.Description);\n    formData.append('ProductName', productInsert.ProductName);\n    formData.append('UnitID', productInsert.UnitID);\n    axios.post(`/api/InsertProducts`, formData).then(res => {\n      if (res.data.status === 200) {\n        setProductInsert();\n        reset();\n        swal(\"Success\", res.data.message, \"success\"); // setSelectedFiles([]);\n      }\n    });\n  }; // select images start \n  // const [selectedFiles, setSelectedFiles] = useState([]);\n  // const [imageState, setImageState] = useState([]);\n  // const handleImageChange = (e) => {\n  //     const imagesArray = [];\n  //     for (let i = 0; i < e.target.files.length; i++) {\n  //         imagesArray.push(e.target.files[i]);\n  //     }\n  //     setImageState({ ...imageState, image: imagesArray });\n  //     setSelectedFiles([]);\n  //     if (e.target.files) {\n  //         const filesArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file));\n  //         setSelectedFiles((prevImages) => prevImages.concat(filesArray));\n  //         Array.from(e.target.files).map(\n  //             (file) => URL.revokeObjectURL(file)\n  //         );\n  //     }\n  // };\n  // const renderPhotos = (source) => {\n  //     return source.map((photo) => {\n  //         return <img className=\"p-2\" src={photo} alt=\"\" key={photo} style={{ width: \"100\", height: \"100px\" }} />;\n  //     });\n  // };\n  // select images end \n  //for retriving data using laravel API\n\n\n  const [fetchData, setFetchData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unitData, setUnitData] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/GetUnitsAll/${id}`).then(res => {\n      if (res.data.status === 200) {\n        // console.log(res.data.fetchData)\n        setBranchId(res.data.fetchData[0].branchID);\n        setUnitData(res.data.fetchData);\n      }\n\n      setLoading(false);\n    });\n    axios.get(`/api/GetAttributes`).then(res => {\n      if (res.data.status === 200) {\n        setFetchData(res.data.fetchData);\n      }\n    });\n  }, [id, productInsert]); // set Attribute select box \n\n  const [displayValue, setDisplayValue] = useState([]);\n\n  const handleSelectEvent = e => {\n    setDisplayValue(Array.isArray(e) ? e.map(item => item.label) : []);\n  }; // set by child TagInputSelect \n\n\n  const [tagArray, setTagArray] = useState([]); // jsut for testing in console\n  // const check = (e) => {\n  //     e.preventDefault()\n  //     console.log(tagArray);\n  // }\n\n  var viewProducts_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary \",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 16\n    }, this);\n  } else {\n    var _errors$ProductName, _errors$UnitID, _errors$Description;\n\n    viewProducts_HTMLTABLE =\n    /*#__PURE__*/\n    // fetchData.map((item, i) => {\n    //     return (\n    _jsxDEV(Form, {\n      onSubmit: saveProduct,\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: t('add_product')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 \",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: t('product_name')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 59\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ...register(\"ProductName\"),\n                className: \"form-control\",\n                placeholder: t('product_name'),\n                name: \"ProductName\",\n                onChange: handleInput,\n                value: productInsert.ProductName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: (_errors$ProductName = errors.ProductName) === null || _errors$ProductName === void 0 ? void 0 : _errors$ProductName.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 \",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: t('unit')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 59\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"text\",\n                ...register(\"UnitID\"),\n                className: \"form-control\",\n                placeholder: \"UnitID\",\n                name: \"UnitID\",\n                onChange: handleInput,\n                value: productInsert.UnitID,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: t('select_a_unit')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this), \" )\", unitData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.id,\n                  children: item.UnitName\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: (_errors$UnitID = errors.UnitID) === null || _errors$UnitID === void 0 ? void 0 : _errors$UnitID.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 \",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: t('description')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 59\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                ...register(\"Description\"),\n                className: \"form-control\",\n                placeholder: t('description'),\n                name: \"Description\",\n                onChange: handleInput,\n                value: productInsert.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: (_errors$Description = errors.Description) === null || _errors$Description === void 0 ? void 0 : _errors$Description.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 \",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: t('image')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 59\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"form-control\",\n                placeholder: t('image'),\n                name: \"image\",\n                required: true,\n                onChange: handleImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: [\" \", t('save'), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this); //     )\n    // })\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CBreadcrumb, {\n      style: {\n        \"--cui-breadcrumb-divider\": \"'>'\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"font-weight-bold\",\n        to: `/products/${id}`,\n        children: [t('products_list'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), viewProducts_HTMLTABLE]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"UBzuaaprZP0rWQgF21YWpXbujxQ=\", false, function () {\n  return [useForm, useTranslation];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Products/AddProduct.js"],"names":["React","Fragment","useState","useEffect","Button","Card","Form","axios","swal","Link","useTranslation","useForm","yupResolver","yup","CBreadcrumb","Select","TagInputSelect","AddProduct","props","schema","object","shape","variant_name","string","required","Buyingquantity","number","positive","integer","typeError","buyingPrice","sellingPrice","Description","Advice","CurrentPrice","OldPrice","UnitID","attributes","register","handleSubmit","reset","formState","errors","resolver","t","id","match","params","productInsert","setProductInsert","handleInput","e","persist","target","name","value","imageState","setImageState","handleImage","CategoryIcon","files","saveProduct","preventDefault","formData","FormData","append","image","ProductName","post","then","res","data","status","message","fetchData","setFetchData","loading","setLoading","unitData","setUnitData","get","setBranchId","branchID","displayValue","setDisplayValue","handleSelectEvent","Array","isArray","map","item","label","tagArray","setTagArray","viewProducts_HTMLTABLE","UnitName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD,C,CACA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA,QAAMC,MAAM,GAAGN,GAAG,CAACO,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,IAAAA,YAAY,EAAET,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,CADgB;AAE9BC,IAAAA,cAAc,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,OAAxB,GAAkCJ,QAAlC,GAA6CK,SAA7C,CAAuD,2BAAvD,CAFc;AAG9BC,IAAAA,WAAW,EAAEjB,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,OAAxB,GAAkCJ,QAAlC,GAA6CK,SAA7C,CAAuD,2BAAvD,CAHiB;AAI9BE,IAAAA,YAAY,EAAElB,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,OAAxB,GAAkCJ,QAAlC,GAA6CK,SAA7C,CAAuD,2BAAvD,CAJgB;AAK9BG,IAAAA,WAAW,EAAEnB,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,CALiB;AAM9BS,IAAAA,MAAM,EAAEpB,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,CANsB;AAO9BU,IAAAA,YAAY,EAAErB,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,OAAxB,GAAkCJ,QAAlC,GAA6CK,SAA7C,CAAuD,2BAAvD,CAPgB;AAQ9BM,IAAAA,QAAQ,EAAEtB,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,OAAxB,GAAkCJ,QAAlC,GAA6CK,SAA7C,CAAuD,2BAAvD,CARoB;AAS9BO,IAAAA,MAAM,EAAEvB,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB,CATsB;AAU9Ba,IAAAA,UAAU,EAAExB,GAAG,CAACU,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB;AAVkB,GAAnB,EAWZA,QAXY,EAAf;AAYA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2D/B,OAAO,CAAC;AACrEgC,IAAAA,QAAQ,EAAE/B,WAAW,CAACO,MAAD;AADgD,GAAD,CAAxE,CAd0B,CAiB1B;;AACA,QAAM;AAAEyB,IAAAA;AAAF,MAAQlC,cAAc,EAA5B;AACA,QAAMmC,EAAE,GAAG3B,KAAK,CAAC4B,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B,CAnB0B,CAuB1B;;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoC/C,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMgD,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,OAAF;AACAH,IAAAA,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoB,OAACG,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA9C,KAAD,CAAhB;AACH,GAHD;;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvD,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMwD,WAAW,GAAIP,CAAD,IAAO;AACvBM,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBG,MAAAA,YAAY,EAAER,CAAC,CAACE,MAAF,CAASO,KAAT,CAAe,CAAf;AAA/B,KAAD,CAAb;AACH,GAFD,CA/B0B,CAkC1B;;;AACA,QAAMC,WAAW,GAAIV,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACW,cAAF;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFuB,CAGvB;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBT,UAAU,CAACU,KAApC;AACAH,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BjB,aAAa,CAAChB,WAA7C;AACA+B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BjB,aAAa,CAACmB,WAA7C;AACAJ,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BjB,aAAa,CAACZ,MAAxC;AACA7B,IAAAA,KAAK,CAAC6D,IAAN,CAAY,qBAAZ,EAAkCL,QAAlC,EAA4CM,IAA5C,CAAiDC,GAAG,IAAI;AACpD,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AACzBvB,QAAAA,gBAAgB;AAChBT,QAAAA,KAAK;AACLhC,QAAAA,IAAI,CAAC,SAAD,EAAY8D,GAAG,CAACC,IAAJ,CAASE,OAArB,EAA8B,SAA9B,CAAJ,CAHyB,CAIzB;AACH;AACJ,KAPD;AAQH,GAhBD,CAnC0B,CAoD1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BzE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0E,OAAD,EAAUC,UAAV,IAAwB3E,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC4E,QAAD,EAAWC,WAAX,IAA0B7E,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACyE,GAAN,CAAW,oBAAmBnC,EAAG,EAAjC,EAAoCwB,IAApC,CAAyCC,GAAG,IAAI;AAC5C,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAS,QAAAA,WAAW,CAACX,GAAG,CAACC,IAAJ,CAASG,SAAT,CAAmB,CAAnB,EAAsBQ,QAAvB,CAAX;AACAH,QAAAA,WAAW,CAACT,GAAG,CAACC,IAAJ,CAASG,SAAV,CAAX;AACH;;AACDG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPD;AAQAtE,IAAAA,KAAK,CAACyE,GAAN,CAAW,oBAAX,EAAgCX,IAAhC,CAAqCC,GAAG,IAAI;AACxC,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AACzBG,QAAAA,YAAY,CAACL,GAAG,CAACC,IAAJ,CAASG,SAAV,CAAZ;AACH;AACJ,KAJD;AAMH,GAfQ,EAeN,CAAC7B,EAAD,EAAKG,aAAL,CAfM,CAAT,CAnF0B,CAmG1B;;AACA,QAAM,CAACmC,YAAD,EAAeC,eAAf,IAAkClF,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMmF,iBAAiB,GAAIlC,CAAD,IAAO;AAC7BiC,IAAAA,eAAe,CAACE,KAAK,CAACC,OAAN,CAAcpC,CAAd,IAAmBA,CAAC,CAACqC,GAAF,CAAMC,IAAI,IAAIA,IAAI,CAACC,KAAnB,CAAnB,GAA+C,EAAhD,CAAf;AACH,GAFD,CArG0B,CAyG1B;;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B1F,QAAQ,CAAC,EAAD,CAAxC,CA1G0B,CA4G1B;AACA;AACA;AACA;AACA;;AAGA,MAAI2F,sBAAsB,GAAG,EAA7B;;AACA,MAAIjB,OAAJ,EAAa;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAAA,6BAA6D;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,kBAA2BhC,CAAC,CAAC,SAAD;AAA5B;AAAA;AAAA;AAAA;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AAAA;;AAEHiD,IAAAA,sBAAsB;AAAA;AAClB;AACA;AACA,YAAC,IAAD;AAAM,MAAA,QAAQ,EAAEhC,WAAhB;AAA6B,MAAA,MAAM,EAAC,MAApC;AAA2C,MAAA,OAAO,EAAC,qBAAnD;AAAA,8BACI,QAAC,IAAD,CAAM,MAAN;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAajB,CAAC,CAAC,aAAD;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,OAAjB;AAAA,6CAA0B;AAAA,4BAASA,CAAC,CAAC,cAAD;AAAV;AAAA;AAAA;AAAA;AAAA,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,IAAI,EAAC,MADT;AAAA,mBAEQN,QAAQ,CAAC,aAAD,CAFhB;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,WAAW,EAAEM,CAAC,CAAC,cAAD,CAJlB;AAKI,gBAAA,IAAI,EAAC,aALT;AAMI,gBAAA,QAAQ,EAAEM,WANd;AAOI,gBAAA,KAAK,EAAEF,aAAa,CAACmB;AAPzB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAWI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,iDACKzB,MAAM,CAACyB,WADZ,wDACK,oBAAoBM;AADzB;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAkBI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,OAAjB;AAAA,6CAA0B;AAAA,4BAAS7B,CAAC,CAAC,MAAD;AAAV;AAAA;AAAA;AAAA;AAAA,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,IAAI,EAAC,MAAb;AAAA,mBACQN,QAAQ,CAAC,QAAD,CADhB;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,WAAW,EAAC,QAJhB;AAKI,gBAAA,IAAI,EAAC,QALT;AAMI,gBAAA,QAAQ,EAAEY,WANd;AAOI,gBAAA,KAAK,EAAEF,aAAa,CAACZ,MAPzB;AAAA,wCAQI;AAAQ,kBAAA,KAAK,EAAC,EAAd;AAAA,4BAAkBQ,CAAC,CAAC,eAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,wBARJ,QAUQkC,QAAQ,CAACU,GAAT,CAAcC,IAAD,iBACT;AAAQ,kBAAA,KAAK,EAAEA,IAAI,CAAC5C,EAApB;AAAA,4BAAuC4C,IAAI,CAACK;AAA5C,mBAA6BL,IAAI,CAAC5C,EAAlC;AAAA;AAAA;AAAA;AAAA,wBADJ,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAeI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,4CACKH,MAAM,CAACN,MADZ,mDACK,eAAeqC;AADpB;AAAA;AAAA;AAAA;AAAA,sBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAuCI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,OAAjB;AAAA,6CAA0B;AAAA,4BAAS7B,CAAC,CAAC,aAAD;AAAV;AAAA;AAAA;AAAA;AAAA,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,IAAI,EAAC,MADT;AAAA,mBAEQN,QAAQ,CAAC,aAAD,CAFhB;AAGI,gBAAA,SAAS,EAAC,cAHd;AAII,gBAAA,WAAW,EAAEM,CAAC,CAAC,aAAD,CAJlB;AAKI,gBAAA,IAAI,EAAC,aALT;AAMI,gBAAA,QAAQ,EAAEM,WANd;AAOI,gBAAA,KAAK,EAAEF,aAAa,CAAChB;AAPzB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAWI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,iDACKU,MAAM,CAACV,WADZ,wDACK,oBAAoByC;AADzB;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvCJ,eAwDI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,OAAjB;AAAA,6CAA0B;AAAA,4BAAS7B,CAAC,CAAC,OAAD;AAAV;AAAA;AAAA;AAAA;AAAA,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAGI;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,SAAS,EAAC,cAFd;AAGI,gBAAA,WAAW,EAAEA,CAAC,CAAC,OAAD,CAHlB;AAII,gBAAA,IAAI,EAAC,OAJT;AAKI,gBAAA,QAAQ,MALZ;AAMI,gBAAA,QAAQ,EAAEc;AANd;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAkFI,QAAC,IAAD,CAAM,MAAN;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAA,0BAA0Cd,CAAC,CAAC,MAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAlFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CAFG,CA2FC;AACA;AAEP;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAE,oCAA4B;AAA9B,OAApB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAmC,QAAA,EAAE,EAAG,aAAYC,EAAG,EAAvD;AAAA,mBAA2DD,CAAC,CAAC,eAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAKIiD,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA/ND;;GAAM5E,U;UAc+DN,O,EAInDD,c;;;KAlBZO,U;AAiON,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n// import PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb} from '@coreui/react'\r\nimport Select from 'react-select';\r\nimport TagInputSelect from './TagInputSelect'\r\n\r\nconst AddProduct = (props) => {\r\n    // validation\r\n    const schema = yup.object().shape({\r\n        variant_name: yup.string().required(\"This field is a required field\"),\r\n        Buyingquantity: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        buyingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        sellingPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        Description: yup.string().required(\"This field is a required field\"),\r\n        Advice: yup.string().required(\"This field is a required field\"),\r\n        CurrentPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        OldPrice: yup.number().positive().integer().required().typeError('You must specify a number'),\r\n        UnitID: yup.string().required(\"This field is a required field\"),\r\n        attributes: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    const id = props.match.params.id;\r\n    \r\n\r\n\r\n    // insert a section\r\n    const [productInsert, setProductInsert] = useState([]);\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setProductInsert({ ...productInsert, [e.target.name]: e.target.value });\r\n    };\r\n    const [imageState, setImageState] = useState([]);\r\n\r\n    const handleImage = (e) => {\r\n        setImageState({ ...imageState, CategoryIcon: e.target.files[0] });\r\n    };\r\n    // insert\r\n    const saveProduct = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        // console.log(\"test\");\r\n        formData.append('image', imageState.image);\r\n        formData.append('Description', productInsert.Description);\r\n        formData.append('ProductName', productInsert.ProductName);\r\n        formData.append('UnitID', productInsert.UnitID);\r\n        axios.post(`/api/InsertProducts`, formData).then(res => {\r\n            if (res.data.status === 200) {\r\n                setProductInsert();\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                // setSelectedFiles([]);\r\n            }\r\n        });\r\n    };\r\n    // select images start \r\n    // const [selectedFiles, setSelectedFiles] = useState([]);\r\n    // const [imageState, setImageState] = useState([]);\r\n    // const handleImageChange = (e) => {\r\n    //     const imagesArray = [];\r\n    //     for (let i = 0; i < e.target.files.length; i++) {\r\n    //         imagesArray.push(e.target.files[i]);\r\n    //     }\r\n    //     setImageState({ ...imageState, image: imagesArray });\r\n\r\n    //     setSelectedFiles([]);\r\n    //     if (e.target.files) {\r\n    //         const filesArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file));\r\n    //         setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n    //         Array.from(e.target.files).map(\r\n    //             (file) => URL.revokeObjectURL(file)\r\n    //         );\r\n    //     }\r\n\r\n    // };\r\n    // const renderPhotos = (source) => {\r\n    //     return source.map((photo) => {\r\n    //         return <img className=\"p-2\" src={photo} alt=\"\" key={photo} style={{ width: \"100\", height: \"100px\" }} />;\r\n    //     });\r\n    // };\r\n    // select images end \r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [unitData, setUnitData] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`/api/GetUnitsAll/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.fetchData)\r\n                setBranchId(res.data.fetchData[0].branchID);\r\n                setUnitData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n        axios.get(`/api/GetAttributes`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n        });\r\n\r\n    }, [id, productInsert]);\r\n    // set Attribute select box \r\n    const [displayValue, setDisplayValue] = useState([]);\r\n    const handleSelectEvent = (e) => {\r\n        setDisplayValue(Array.isArray(e) ? e.map(item => item.label) : [])\r\n    }\r\n\r\n    // set by child TagInputSelect \r\n    const [tagArray, setTagArray] = useState([]);\r\n\r\n    // jsut for testing in console\r\n    // const check = (e) => {\r\n    //     e.preventDefault()\r\n    //     console.log(tagArray);\r\n    // }\r\n  \r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n\r\n        viewProducts_HTMLTABLE =\r\n            // fetchData.map((item, i) => {\r\n            //     return (\r\n            <Form onSubmit={saveProduct} method=\"POST\" encType=\"multipart/form-data\">\r\n                <Card.Header>\r\n                    <Card.Title>{t('add_product')}</Card.Title>\r\n                 \r\n\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-1 \"> <strong>{t('product_name')}</strong> </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    {...register(\"ProductName\")}\r\n                                    className=\"form-control\"\r\n                                    placeholder={t('product_name')}\r\n                                    name=\"ProductName\"\r\n                                    onChange={handleInput}\r\n                                    value={productInsert.ProductName}\r\n                                />\r\n                                <div className=\"text-danger\">\r\n                                    {errors.ProductName?.message}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-1 \"> <strong>{t('unit')}</strong> </label>\r\n                                <select type=\"text\"\r\n                                    {...register(\"UnitID\")}\r\n\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"UnitID\"\r\n                                    name=\"UnitID\"\r\n                                    onChange={handleInput}\r\n                                    value={productInsert.UnitID}>\r\n                                    <option value=\"\">{t('select_a_unit')}</option> )\r\n                                    {\r\n                                        unitData.map((item) =>\r\n                                            <option value={item.id} key={item.id}>{item.UnitName}</option>)\r\n                                    }</select>\r\n                                <div className=\"text-danger\">\r\n                                    {errors.UnitID?.message}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-1 \"> <strong>{t('description')}</strong> </label>\r\n                                <textarea\r\n                                    type=\"text\"\r\n                                    {...register(\"Description\")}\r\n                                    className=\"form-control\"\r\n                                    placeholder={t('description')}\r\n                                    name=\"Description\"\r\n                                    onChange={handleInput}\r\n                                    value={productInsert.Description}\r\n                                />\r\n                                <div className=\"text-danger\">\r\n                                    {errors.Description?.message}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-1 \"> <strong>{t('image')}</strong> </label>\r\n                                {/* <div className=\"file-loading\"> */}\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"form-control\"\r\n                                    placeholder={t('image')}\r\n                                    name=\"image\"\r\n                                    required\r\n                                    onChange={handleImage}\r\n                                />\r\n                            {/* </div> */}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"result\">{renderPhotos(selectedFiles)}</div> */}\r\n                    </div>\r\n                    \r\n                </Card.Body>\r\n                <Card.Footer>\r\n                <Button variant=\"primary\" type=\"submit\"> {t('save')} </Button>\r\n                </Card.Footer>\r\n            </Form>\r\n            //     )\r\n            // })\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <Link className=\"font-weight-bold\" to={`/products/${id}`}>{t('products_list')} </Link>\r\n            </CBreadcrumb>\r\n            \r\n           {viewProducts_HTMLTABLE}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}