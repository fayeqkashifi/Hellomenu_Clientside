{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Products\\\\TagInputSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css'; // If using WebPack and style-loader.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagInputSelect = props => {\n  _s();\n\n  const [state, setState] = useState({\n    item: []\n  });\n\n  const handleChange = item => {\n    setState({\n      item\n    });\n    props.setfunction({\n      item\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TagsInput, {\n    value: state.item,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagInputSelect, \"jeYTWSBnG6PkJG/tOl1ri+Qs4e4=\");\n\n_c = TagInputSelect;\nexport default TagInputSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagInputSelect\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Products/TagInputSelect.js"],"names":["React","useState","TagsInput","TagInputSelect","props","state","setState","item","handleChange","setfunction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAO,qCAAP,C,CAA6C;;;;AAE7C,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAID,IAAD,IAAU;AAC7BD,IAAAA,QAAQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,CAAR;AACAH,IAAAA,KAAK,CAACK,WAAN,CAAkB;AAAEF,MAAAA;AAAF,KAAlB;AACD,GAHD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAK,CAACE,IAAxB;AAA8B,IAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAVD;;GAAML,c;;KAAAA,c;AAYN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport TagsInput from 'react-tagsinput'\r\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\r\n\r\nconst TagInputSelect = (props) => {\r\n  const [state, setState] = useState({ item: [] });\r\n  \r\n  const handleChange = (item) => {\r\n    setState({ item })\r\n    props.setfunction({ item })\r\n  }\r\n  return (\r\n    <TagsInput value={state.item} onChange={handleChange} />\r\n  );\r\n};\r\n\r\nexport default TagInputSelect;\r\n"]},"metadata":{},"sourceType":"module"}