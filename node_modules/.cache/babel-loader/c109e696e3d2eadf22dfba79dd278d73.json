{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\React-Koki-v1.0-06-April-2021\\\\React-Koki\\\\src\\\\jsx\\\\components\\\\charts\\\\apexcharts\\\\ApexBarChart.js\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ApexBarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: false,\n      //Set render state to false\n      series: [{\n        name: \"Aplication Sent\",\n        data: [40, 55, 15, 50, 70, 20, 55]\n      }, {\n        name: \"Appllication Answered\",\n        data: [55, 55, 35, 15, 35, 55, 20]\n      }, {\n        name: \"Hired\",\n        data: [20, 17, 55, 45, 30, 65, 50]\n      }],\n      options: {\n        chart: {\n          type: \"bar\",\n          height: 350,\n          stacked: true,\n          toolbar: {\n            show: false\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              position: \"bottom\",\n              offsetX: -10,\n              offsetY: 0\n            }\n          }\n        }],\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: \"35%\",\n            endingShape: \"rounded\",\n            startingShape: \"rounded\",\n            backgroundRadius: 10,\n            colors: {\n              backgroundBarColors: [\"#ECECEC\", \"#ECECEC\", \"#ECECEC\", \"#ECECEC\", \"#ECECEC\", \"#ECECEC\", \"#ECECEC\"],\n              backgroundBarOpacity: 1,\n              backgroundBarRadius: 10\n            }\n          }\n        },\n        colors: [\"#2BC155\", \"#FF9B52\", \"#DD2F6E\"],\n        xaxis: {\n          show: true,\n          axisBorder: {\n            show: false\n          },\n          labels: {\n            style: {\n              colors: \"#828282\",\n              fontSize: \"14px\",\n              fontFamily: \"Poppins\",\n              fontWeight: \"light\",\n              cssClass: \"apexcharts-xaxis-label\"\n            }\n          },\n          crosshairs: {\n            show: false\n          },\n          categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n        },\n        yaxis: {\n          show: false\n        },\n        grid: {\n          show: false\n        },\n        toolbar: {\n          enabled: false\n        },\n        dataLabels: {\n          enabled: false\n        },\n        legend: {\n          show: false\n        },\n        fill: {\n          opacity: 1\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      //Start the timer\n      this.setState({\n        render: true\n      }); //After 1 second, set render to true\n    }.bind(this), 1000);\n  }\n\n  render() {\n    let renderContainer = false;\n\n    if (this.state.render) {\n      renderContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"columnChart\",\n        children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"bar\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }, this);\n    }\n\n    return renderContainer //Render the dom elements, or, when this.state == false, nothing.\n    ;\n  }\n\n}\n\nexport default ApexBarChart;","map":{"version":3,"sources":["D:/fineDine/React-Koki-v1.0-06-April-2021/React-Koki/src/jsx/components/charts/apexcharts/ApexBarChart.js"],"names":["React","Component","ReactApexChart","ApexBarChart","constructor","props","state","render","series","name","data","options","chart","type","height","stacked","toolbar","show","responsive","breakpoint","legend","position","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","endingShape","startingShape","backgroundRadius","colors","backgroundBarColors","backgroundBarOpacity","backgroundBarRadius","xaxis","axisBorder","labels","style","fontSize","fontFamily","fontWeight","cssClass","crosshairs","categories","yaxis","grid","enabled","dataLabels","fill","opacity","componentDidMount","setTimeout","setState","bind","renderContainer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport ReactApexChart from \"react-apexcharts\";\n\nclass ApexBarChart extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n\t\t   render: false, //Set render state to false\n         series: [\n            {\n               name: \"Aplication Sent\",\n               data: [40, 55, 15, 50, 70, 20, 55],\n            },\n            {\n               name: \"Appllication Answered\",\n               data: [55, 55, 35, 15, 35, 55, 20],\n            },\n            {\n               name: \"Hired\",\n               data: [20, 17, 55, 45, 30, 65, 50],\n            },\n         ],\n         options: {\n            chart: {\n               type: \"bar\",\n               height: 350,\n               stacked: true,\n               toolbar: {\n                  show: false,\n               },\n            },\n            responsive: [\n               {\n                  breakpoint: 480,\n                  options: {\n                     legend: {\n                        position: \"bottom\",\n                        offsetX: -10,\n                        offsetY: 0,\n                     },\n                  },\n               },\n            ],\n            plotOptions: {\n               bar: {\n                  horizontal: false,\n                  columnWidth: \"35%\",\n\n                  endingShape: \"rounded\",\n                  startingShape: \"rounded\",\n                  backgroundRadius: 10,\n                  colors: {\n                     backgroundBarColors: [\n                        \"#ECECEC\",\n                        \"#ECECEC\",\n                        \"#ECECEC\",\n                        \"#ECECEC\",\n                        \"#ECECEC\",\n                        \"#ECECEC\",\n                        \"#ECECEC\",\n                     ],\n                     backgroundBarOpacity: 1,\n                     backgroundBarRadius: 10,\n                  },\n               },\n            },\n            colors: [\"#2BC155\", \"#FF9B52\", \"#DD2F6E\"],\n            xaxis: {\n               show: true,\n               axisBorder: {\n                  show: false,\n               },\n\n               labels: {\n                  style: {\n                     colors: \"#828282\",\n                     fontSize: \"14px\",\n                     fontFamily: \"Poppins\",\n                     fontWeight: \"light\",\n                     cssClass: \"apexcharts-xaxis-label\",\n                  },\n               },\n               crosshairs: {\n                  show: false,\n               },\n\n               categories: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            },\n            yaxis: {\n               show: false,\n            },\n            grid: {\n               show: false,\n            },\n            toolbar: {\n               enabled: false,\n            },\n            dataLabels: {\n               enabled: false,\n            },\n            legend: {\n               show: false,\n            },\n            fill: {\n               opacity: 1,\n            },\n         },\n      };\n   }\n\n\tcomponentDidMount() {\n\t  setTimeout(function() { //Start the timer\n\t\t  this.setState({render: true}) //After 1 second, set render to true\n\t  }.bind(this), 1000)\n\t}\n\n   render() {\n\t   let renderContainer = false;\n\t   \n\t   if(this.state.render) {\n\t\t\t renderContainer = <div id=\"columnChart\">\n\t\t\t\t<ReactApexChart\n\t\t\t\t   options={this.state.options}\n\t\t\t\t   series={this.state.series}\n\t\t\t\t   type=\"bar\"\n\t\t\t\t   height={350}\n\t\t\t\t/>\n\t\t\t </div>;\n\t\t}\n\t   \n\t   return (\n\t\t  renderContainer //Render the dom elements, or, when this.state == false, nothing.\n\t\t);\n   }\n}\nexport default ApexBarChart;\n"]},"metadata":{},"sourceType":"module"}