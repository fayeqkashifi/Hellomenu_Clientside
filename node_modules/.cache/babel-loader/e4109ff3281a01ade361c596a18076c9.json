{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Registration from \"./jsx/pages/Registration\"; /// Components\n\nimport Markup from \"./jsx\";\nimport Login from \"./jsx/pages/Login\"; /// Style\n\nimport \"./css/style.css\";\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\"; // import PrivateRoute from './jsx/components/PrivateRoute';\n\nimport PublicRoute from './jsx/components/PublicRoute';\nimport axios from \"axios\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector).use(HttpApi).init({\n  // the translations\n  // (tip move them in a JSON file and import them,\n  // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n  fallbackLng: \"en\",\n  detection: {\n    // order and from where user language should be detected\n    order: ['localStorage', 'cookie', 'htmlTag', 'localStorage', 'sessionStorage', 'path', 'subdomain'],\n    cashes: ['cookie']\n  },\n  backend: {\n    loadPath: '/assets/locales/{{lng}}/translation.json'\n  },\n  react: {\n    useSuspense: false\n  }\n}); // function App() {\n//   const { t } = useTranslation();\n//   return <h2>{t('welcome_to_react')}</h2>;\n// }\n\naxios.defaults.baseURL = \"http://127.0.0.1:8000\";\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.post['Accept'] = 'application/json';\naxios.defaults.withcredentials = true;\naxios.interceptors.request.use(function (config) {\n  const token = localStorage.getItem('auth_token');\n  config.headers.Authorization = token ? `Bearer ${token}` : '';\n  return config;\n});\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(PublicRoute, {\n        restricted: true,\n        component: Login,\n        path: \"/page-login\",\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PublicRoute, {\n        restricted: false,\n        component: Registration,\n        path: \"/user-register\",\n        exact: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Markup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Registration","Markup","Login","PublicRoute","axios","i18n","useTranslation","initReactI18next","LanguageDetector","HttpApi","use","init","fallbackLng","detection","order","cashes","backend","loadPath","react","useSuspense","defaults","baseURL","headers","post","withcredentials","interceptors","request","config","token","localStorage","getItem","Authorization","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,QAAgD,kBAAhD;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;AACA,OAAO,iBAAP;AACA,OAAO,6DAAP,C,CACA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACAJ,IAAI,CACDK,GADH,CACOH,gBADP,EACyB;AADzB,CAEGG,GAFH,CAEOF,gBAFP,EAGGE,GAHH,CAGOD,OAHP,EAIGE,IAJH,CAIQ;AACJ;AACA;AACA;AAEAC,EAAAA,WAAW,EAAE,IALT;AAMJC,EAAAA,SAAS,EAAC;AACP;AACDC,IAAAA,KAAK,EAAE,CAAC,cAAD,EAAiB,QAAjB,EAA0B,SAA1B,EAAqC,cAArC,EAAqD,gBAArD,EAAyE,MAAzE,EAAiF,WAAjF,CAFC;AAGRC,IAAAA,MAAM,EAAC,CAAC,QAAD;AAHC,GANN;AAWJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GAXL;AAcJC,EAAAA,KAAK,EAAE;AAACC,IAAAA,WAAW,EAAE;AAAd;AAdH,CAJR,E,CAoBA;AACA;AACA;AACA;;AAKAf,KAAK,CAACgB,QAAN,CAAeC,OAAf,GAAuB,uBAAvB;AACAjB,KAAK,CAACgB,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA4C,kBAA5C;AACAnB,KAAK,CAACgB,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,QAA5B,IAAsC,kBAAtC;AACAnB,KAAK,CAACgB,QAAN,CAAeI,eAAf,GAAgC,IAAhC;AACApB,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BhB,GAA3B,CAA+B,UAASiB,MAAT,EAAgB;AAC5C,QAAMC,KAAK,GAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;AACAH,EAAAA,MAAM,CAACL,OAAP,CAAeS,aAAf,GAA+BH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA3D;AACA,SAAOD,MAAP;AACF,CAJD;;AASA,MAAMK,GAAG,GAAG,MAAM;AACf,sBACG,QAAC,MAAD;AAAA,2BACG,QAAC,MAAD;AAAA,8BACG,QAAC,WAAD;AAAa,QAAA,UAAU,EAAE,IAAzB;AAA+B,QAAA,SAAS,EAAE9B,KAA1C;AAAiD,QAAA,IAAI,EAAC,aAAtD;AAAoE,QAAA,KAAK;AAAzE;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAzB;AAAgC,QAAA,SAAS,EAAEF,YAA3C;AAAyD,QAAA,IAAI,EAAC,gBAA9D;AAA+E,QAAA,KAAK;AAApF;AAAA;AAAA;AAAA;AAAA,cAFH,eAIG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADH;AA4BF,CA7BD;;KAAMgC,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Registration from \"./jsx/pages/Registration\";\n/// Components\nimport Markup from \"./jsx\";\nimport Login from \"./jsx/pages/Login\";\n/// Style\nimport \"./css/style.css\";\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\n// import PrivateRoute from './jsx/components/PrivateRoute';\nimport PublicRoute from './jsx/components/PublicRoute';\nimport axios from \"axios\"\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector) \n  .use(HttpApi) \n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n    \n    fallbackLng: \"en\",\n    detection:{\n       // order and from where user language should be detected\n      order: ['localStorage', 'cookie','htmlTag', 'localStorage', 'sessionStorage',   'path', 'subdomain'],\n      cashes:['cookie'],\n    },\n    backend: {\n      loadPath: '/assets/locales/{{lng}}/translation.json',\n    },\n    react: {useSuspense: false},\n  });\n// function App() {\n//   const { t } = useTranslation();\n//   return <h2>{t('welcome_to_react')}</h2>;\n// }\n\n\n\n\naxios.defaults.baseURL=\"http://127.0.0.1:8000\";\naxios.defaults.headers.post['Content-Type']='application/json'\naxios.defaults.headers.post['Accept']='application/json'\naxios.defaults.withcredentials= true;\naxios.interceptors.request.use(function(config){\n   const token=localStorage.getItem('auth_token');\n   config.headers.Authorization = token ? `Bearer ${token}` : '';\n   return config;\n});\n\n\n\n\nconst App = () => {\n   return (\n      <Router>\n         <Switch>\n            <PublicRoute restricted={true} component={Login} path=\"/page-login\" exact />\n            <PublicRoute restricted={false} component={Registration} path=\"/user-register\" exact />\n            {/* {localStorage.getItem('auth_token') ? <Markup /> : <Redirect to=\"/page-login\" />} */}\n            <Markup />\n            {/* <PrivateRoute component={Branches} path=\"/branches\" exact />\n            <PrivateRoute component={Category} path=\"/category\" exact />\n            <PrivateRoute component={Unit} path=\"/unit\" exact />\n            <PrivateRoute component={Inventory} path=\"/inventory\" exact />\n            <PrivateRoute component={Company} path=\"/companies\" exact />\n            <PrivateRoute component={Product} path=\"/products\" exact />\n            <PrivateRoute component={SubCategory} path=\"/sub-category\" exact />\n            <PrivateRoute component={ServiceArea} path=\"/service-area\" exact />\n            <PrivateRoute component={Profile} path=\"/profile\" exact /> */}\n            {/* <PrivateRoute component={Home} path=\"/dashboard\" exact /> */}\n\n            {/* <Route exact path='/page-login' component={Login} />\n            <Route exact path=\"/user-register\"  component={Registration} /> \n            <Route  exact path=\"/dashboard\"  component={Markup} /> \n           \n            \n               {/* */}\n           \n         </Switch>\n       </Router>\n   );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}