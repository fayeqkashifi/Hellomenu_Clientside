{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { isLogin } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, { ...rest,\n          render: props => isLogin() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/page-login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/PrivateRoute.js"],"names":["React","BrowserRouter","Router","Route","Redirect","Switch","isLogin","PrivateRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,MAAnD,QAAiE,kBAAjE;AACA,SAASC,OAAT,QAAwB,UAAxB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD;AAAA;AACI;AACA;AACA,YAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,+BACI,QAAC,KAAD,OAAWA,IAAX;AAAiB,UAAA,MAAM,EAAEC,KAAK,IAC1BL,OAAO,kBACH,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,kBADG,gBAEL,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAeH,CAhBD;;KAAMJ,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { isLogin } from '../utils';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Router>\r\n            <Switch>\r\n                <Route {...rest} render={props => (\r\n                    isLogin() ?\r\n                        <Component {...props} />\r\n                    : <Redirect to=\"/page-login\" />\r\n                )} />\r\n                \r\n            </Switch>\r\n        </Router>\r\n\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}