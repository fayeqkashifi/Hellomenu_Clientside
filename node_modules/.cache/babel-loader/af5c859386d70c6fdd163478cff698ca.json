{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\Auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Router, Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport * as auth from \"../_redux/authRedux\";\nimport { login } from \"../_redux/authCrud\";\n/*\r\n  INTL (i18n) docs:\r\n  https://github.com/formatjs/react-intl/blob/master/docs/Components.md#formattedmessage\r\n*/\n\n/*\r\n  Formik+YUP:\r\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"admin@demo.com\",\n  password: \"demo\"\n};\n\nfunction Login(props) {\n  _s();\n\n  const {\n    intl\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Wrong email format\").min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\"),\n    password: Yup.string().min(3, \"Minimum 3 symbols\").max(50, \"Maximum 50 symbols\")\n  });\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const getInputClasses = fieldname => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: LoginSchema,\n    onSubmit: (values, {\n      setStatus,\n      setSubmitting\n    }) => {\n      enableLoading();\n      setTimeout(() => {\n        login(values.email, values.password).then(({\n          data: {\n            accessToken\n          }\n        }) => {\n          disableLoading();\n          props.login(accessToken);\n        }).catch(() => {\n          disableLoading();\n          setSubmitting(false);\n          setStatus(intl.formatMessage({\n            id: \"AUTH.VALIDATION.INVALID_LOGIN\"\n          }));\n        });\n      }, 1000);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form login-signin\",\n    id: \"kt_login_signin_form\",\n    children: \"dsjfsa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"pJ87EHN1dfgLFfg5TTdXt1LPs8E=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/Auth/Login.js"],"names":["React","useState","Router","Link","useFormik","Yup","connect","auth","login","initialValues","email","password","Login","props","intl","loading","setLoading","LoginSchema","object","shape","string","min","max","enableLoading","disableLoading","getInputClasses","fieldname","formik","touched","errors","validationSchema","onSubmit","values","setStatus","setSubmitting","setTimeout","then","data","accessToken","catch","formatMessage","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,qBAAtB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,gBADa;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;;AAKA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,WAAW,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACrCT,IAAAA,KAAK,EAAEL,GAAG,CAACe,MAAJ,GACJV,KADI,CACE,oBADF,EAEJW,GAFI,CAEA,CAFA,EAEG,mBAFH,EAGJC,GAHI,CAGA,EAHA,EAGI,oBAHJ,CAD8B;AAOrCX,IAAAA,QAAQ,EAAEN,GAAG,CAACe,MAAJ,GACPC,GADO,CACH,CADG,EACA,mBADA,EAEPC,GAFO,CAEH,EAFG,EAEC,oBAFD;AAP2B,GAAnB,CAApB;;AAaA,QAAMC,aAAa,GAAG,MAAM;AAC1BP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMQ,cAAc,GAAG,MAAM;AAC3BR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMS,eAAe,GAAIC,SAAD,IAAe;AACrC,QAAIC,MAAM,CAACC,OAAP,CAAeF,SAAf,KAA6BC,MAAM,CAACE,MAAP,CAAcH,SAAd,CAAjC,EAA2D;AACzD,aAAO,YAAP;AACD;;AAED,QAAIC,MAAM,CAACC,OAAP,CAAeF,SAAf,KAA6B,CAACC,MAAM,CAACE,MAAP,CAAcH,SAAd,CAAlC,EAA4D;AAC1D,aAAO,UAAP;AACD;;AAED,WAAO,EAAP;AACD,GAVD;;AAYA,QAAMC,MAAM,GAAGvB,SAAS,CAAC;AACvBK,IAAAA,aADuB;AAEvBqB,IAAAA,gBAAgB,EAAEb,WAFK;AAGvBc,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAT,KAA0C;AAClDX,MAAAA,aAAa;AACbY,MAAAA,UAAU,CAAC,MAAM;AACf3B,QAAAA,KAAK,CAACwB,MAAM,CAACtB,KAAR,EAAesB,MAAM,CAACrB,QAAtB,CAAL,CACGyB,IADH,CACQ,CAAC;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA;AAAF;AAAR,SAAD,KAA+B;AACnCd,UAAAA,cAAc;AACdX,UAAAA,KAAK,CAACL,KAAN,CAAY8B,WAAZ;AACD,SAJH,EAKGC,KALH,CAKS,MAAM;AACXf,UAAAA,cAAc;AACdU,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,UAAAA,SAAS,CACPnB,IAAI,CAAC0B,aAAL,CAAmB;AACjBC,YAAAA,EAAE,EAAE;AADa,WAAnB,CADO,CAAT;AAKD,SAbH;AAcD,OAfS,EAeP,IAfO,CAAV;AAgBD;AArBsB,GAAD,CAAxB;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,IAAA,EAAE,EAAC,sBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAlEQ7B,K;UAoCQR,S;;;KApCRQ,K;AAoET,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Router,Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport * as auth from \"../_redux/authRedux\";\r\nimport { login } from \"../_redux/authCrud\";\r\n\r\n/*\r\n  INTL (i18n) docs:\r\n  https://github.com/formatjs/react-intl/blob/master/docs/Components.md#formattedmessage\r\n*/\r\n\r\n/*\r\n  Formik+YUP:\r\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\r\n*/\r\n\r\nconst initialValues = {\r\n  email: \"admin@demo.com\",\r\n  password: \"demo\",\r\n};\r\n\r\nfunction Login(props) {\r\n  const { intl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      \r\n      ,\r\n    password: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      ,\r\n  });\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (fieldname) => {\r\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      enableLoading();\r\n      setTimeout(() => {\r\n        login(values.email, values.password)\r\n          .then(({ data: { accessToken } }) => {\r\n            disableLoading();\r\n            props.login(accessToken);\r\n          })\r\n          .catch(() => {\r\n            disableLoading();\r\n            setSubmitting(false);\r\n            setStatus(\r\n              intl.formatMessage({\r\n                id: \"AUTH.VALIDATION.INVALID_LOGIN\",\r\n              })\r\n            );\r\n          });\r\n      }, 1000);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-form login-signin\" id=\"kt_login_signin_form\">\r\n      dsjfsa\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}