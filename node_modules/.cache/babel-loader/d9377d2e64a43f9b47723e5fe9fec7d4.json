{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\index.js\";\nimport React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector).use(HttpApi).init({\n  // the translations\n  // (tip move them in a JSON file and import them,\n  // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n  supportedLngs: ['en', 'tr'],\n  fallbackLng: \"en\",\n  detection: {\n    // order and from where user language should be detected\n    order: ['cookie', 'htmlTag', 'localStorage', 'path', 'subdomain'],\n    caches: ['cookie']\n  },\n  backend: {\n    loadPath: '/assets/locales/{{lng}}/translation.json'\n  }\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 10\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/index.js"],"names":["React","Suspense","ReactDOM","App","i18n","useTranslation","initReactI18next","LanguageDetector","HttpApi","use","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,eAAjD;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACAJ,IAAI,CACDK,GADH,CACOH,gBADP,EACyB;AADzB,CAEGG,GAFH,CAEOF,gBAFP,EAGGE,GAHH,CAGOD,OAHP,EAIGE,IAJH,CAIQ;AACJ;AACA;AACA;AACAC,EAAAA,aAAa,EAAE,CAAC,IAAD,EAAM,IAAN,CAJX;AAKJC,EAAAA,WAAW,EAAE,IALT;AAMJC,EAAAA,SAAS,EAAC;AACP;AACDC,IAAAA,KAAK,EAAE,CAAE,QAAF,EAAW,SAAX,EAAsB,cAAtB,EAAuC,MAAvC,EAA+C,WAA/C,CAFC;AAGRC,IAAAA,MAAM,EAAE,CAAC,QAAD;AAHA,GANN;AAWJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH;AAXL,CAJR;AAoBAf,QAAQ,CAACgB,MAAT,eAES,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAFT,EAIGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJH","sourcesContent":["import React,{Suspense} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector) \n  .use(HttpApi) \n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n    supportedLngs: ['en','tr'],\n    fallbackLng: \"en\",\n    detection:{\n       // order and from where user language should be detected\n      order: [ 'cookie','htmlTag', 'localStorage',  'path', 'subdomain'],\n      caches: ['cookie'],\n    },\n    backend: {\n      loadPath: '/assets/locales/{{lng}}/translation.json',\n    }\n  });\n\nReactDOM.render(\n   \n         <App />\n   ,\n   document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}