{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\index.js\";\nimport React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector).use(HttpApi).init({\n  // the translations\n  // (tip move them in a JSON file and import them,\n  // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n  supportedLngs: ['en', 'tr'],\n  fallbackLng: \"en\",\n  detection: {\n    // order and from where user language should be detected\n    order: ['cookie', 'htmlTag', 'localStorage', 'path', 'subdomain'],\n    caches: ['cookie']\n  },\n  backend: {\n    loadPath: '/assets/locales/{{lng}}/translation.json'\n  }\n});\n\nconst loadingMarkup = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"py-4 text-center\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"spinner-border text-primary \",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"sr-only\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 67\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 11\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 7\n}, this);\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Suspense, {\n  fallback: loadingMarkup,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 4\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/index.js"],"names":["React","Suspense","ReactDOM","App","i18n","initReactI18next","LanguageDetector","HttpApi","use","init","supportedLngs","fallbackLng","detection","order","caches","backend","loadPath","loadingMarkup","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEAH,IAAI,CACDI,GADH,CACOH,gBADP,EACyB;AADzB,CAEGG,GAFH,CAEOF,gBAFP,EAGGE,GAHH,CAGOD,OAHP,EAIGE,IAJH,CAIQ;AACJ;AACA;AACA;AACAC,EAAAA,aAAa,EAAE,CAAC,IAAD,EAAM,IAAN,CAJX;AAKJC,EAAAA,WAAW,EAAE,IALT;AAMJC,EAAAA,SAAS,EAAC;AACP;AACDC,IAAAA,KAAK,EAAE,CAAE,QAAF,EAAW,SAAX,EAAsB,cAAtB,EAAuC,MAAvC,EAA+C,WAA/C,CAFC;AAGRC,IAAAA,MAAM,EAAE,CAAC,QAAD;AAHA,GANN;AAWJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH;AAXL,CAJR;;AAmBA,MAAMC,aAAa,gBACb;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA,yBACI;AAAK,IAAA,KAAK,EAAC,8BAAX;AAA0C,IAAA,IAAI,EAAC,QAA/C;AAAA,2BAAwD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADN;;AAMAf,QAAQ,CAACgB,MAAT,eACG,QAAC,QAAD;AAAU,EAAA,QAAQ,EAAED,aAApB;AAAA,yBACM,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,QADH,EAKGE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALH","sourcesContent":["import React,{Suspense} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from 'i18next-http-backend';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector) \n  .use(HttpApi) \n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n    supportedLngs: ['en','tr'],\n    fallbackLng: \"en\",\n    detection:{\n       // order and from where user language should be detected\n      order: [ 'cookie','htmlTag', 'localStorage',  'path', 'subdomain'],\n      caches: ['cookie'],\n    },\n    backend: {\n      loadPath: '/assets/locales/{{lng}}/translation.json',\n    }\n  });\nconst loadingMarkup=(\n      <div className=\"py-4 text-center\">\n          <div class=\"spinner-border text-primary \" role=\"status\"><span class=\"sr-only\">Loading...</span></div>\n\n      </div>\n)\nReactDOM.render(\n   <Suspense fallback={loadingMarkup}>\n         <App />\n   </Suspense>\n   ,\n   document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}