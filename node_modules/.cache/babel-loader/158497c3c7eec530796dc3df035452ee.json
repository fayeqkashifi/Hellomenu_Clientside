{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Products\\\\CreatableInputOnly.js\";\nimport React, { Component, componentWillReceiveProps, KeyboardEventHandler } from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport { ActionMeta, OnChangeValue } from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst components = {\n  DropdownIndicator: null\n};\n\nconst createOption = label => ({\n  label,\n  value: label\n});\n\nexport default class CreatableInputOnly extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      value: []\n    };\n\n    this.handleChange = (value, actionMeta) => {\n      console.group('Value Changed');\n      console.log(value);\n      console.log(`action: ${actionMeta.action}`);\n      console.groupEnd();\n      this.setState({\n        value\n      });\n      this.props.setArrFunc([...this.props.arr, {\n        currentValue: inputValue,\n        item: this.props.item,\n        value: value\n      }]);\n    };\n\n    this.handleInputChange = inputValue => {\n      this.setState({\n        inputValue\n      });\n    };\n\n    this.handleKeyDown = event => {\n      const {\n        inputValue,\n        value\n      } = this.state;\n      if (!inputValue) return;\n\n      switch (event.key) {\n        case 'Enter':\n        case 'Tab':\n          console.group('Value Added');\n          console.log(value);\n          console.groupEnd();\n          this.setState({\n            inputValue: '',\n            value: [...value, createOption(inputValue)]\n          });\n          this.props.setArrFunc([...this.props.arr, {\n            currentValue: inputValue,\n            item: this.props.item,\n            value: value\n          }]);\n          event.preventDefault();\n      }\n    };\n  }\n\n  //   componentWillReceiveProps = (nextProps) => {\n  //      console.log(\"fdsakfjskld\");\n  //   }\n  render() {\n    const {\n      inputValue,\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n        components: components,\n        inputValue: inputValue,\n        isClearable: true,\n        isMulti: true,\n        menuIsOpen: false,\n        onChange: this.handleChange,\n        onInputChange: this.handleInputChange,\n        onKeyDown: this.handleKeyDown,\n        placeholder: \"Type something and press enter...\",\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Products/CreatableInputOnly.js"],"names":["React","Component","componentWillReceiveProps","KeyboardEventHandler","CreatableSelect","ActionMeta","OnChangeValue","components","DropdownIndicator","createOption","label","value","CreatableInputOnly","constructor","props","state","inputValue","handleChange","actionMeta","console","group","log","action","groupEnd","setState","setArrFunc","arr","currentValue","item","handleInputChange","handleKeyDown","event","key","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component, componentWillReceiveProps, KeyboardEventHandler } from 'react';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { ActionMeta, OnChangeValue } from 'react-select';\r\n\r\nconst components = {\r\n  DropdownIndicator: null,\r\n};\r\n\r\ninterface Option {\r\n   label: string;\r\n   value: string;\r\n}\r\n\r\nconst createOption = (label: string) => ({\r\n  label,\r\n  value: label,\r\n});\r\n\r\ninterface State {\r\n   inputValue: string;\r\n   value:  Option[];\r\n}\r\n\r\nexport default class CreatableInputOnly extends Component<{}, State> {\r\n    constructor(props){\r\n        super(props);\r\n    };\r\n  state: State = {\r\n    inputValue: '',\r\n    value: [],\r\n  };\r\n  handleChange = (\r\n    value: OnChangeValue<Option, true>,\r\n    actionMeta: ActionMeta<Option>\r\n  ) => {\r\n    console.group('Value Changed');\r\n    console.log(value);\r\n    \r\n    console.log(`action: ${actionMeta.action}`);\r\n    console.groupEnd();\r\n    this.setState({ value });\r\n    this.props.setArrFunc(\r\n        [...this.props.arr,{\r\n            currentValue:inputValue,\r\n\r\n            item:this.props.item,\r\n            value: value\r\n        }\r\n        ]\r\n    );\r\n\r\n\r\n\r\n  };\r\n  handleInputChange = (inputValue: string) => {\r\n    this.setState({ inputValue });\r\n\r\n  };\r\n  handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (event) => {\r\n    const { inputValue, value } = this.state;\r\n    if (!inputValue) return;\r\n    switch (event.key) {\r\n      case 'Enter':\r\n      case 'Tab':\r\n        console.group('Value Added');\r\n        \r\n        console.log(value);\r\n\r\n        console.groupEnd();\r\n        this.setState({\r\n          inputValue: '',\r\n          value: [...value, createOption(inputValue)],\r\n        });\r\n        \r\n        this.props.setArrFunc(\r\n            [...this.props.arr,\r\n                {\r\n                currentValue:inputValue,\r\n                item:this.props.item,\r\n                value: value\r\n                }\r\n            ]\r\n        );\r\n        event.preventDefault();\r\n    }\r\n  };\r\n//   componentWillReceiveProps = (nextProps) => {\r\n//      console.log(\"fdsakfjskld\");\r\n//   }\r\n \r\n  render() {\r\n    const { inputValue, value } = this.state;\r\n    return (\r\n      <div>  \r\n      <CreatableSelect\r\n        components={components}\r\n        inputValue={inputValue}\r\n        isClearable\r\n        isMulti\r\n        menuIsOpen={false}\r\n        onChange={this.handleChange}\r\n        onInputChange={this.handleInputChange}\r\n        onKeyDown={this.handleKeyDown}\r\n        placeholder=\"Type something and press enter...\"\r\n        value={value}\r\n      />\r\n       {/* {\r\n        value.map((item,i)=>{\r\n            return(\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\" key={i}>\r\n            <div className=\"form-group\">\r\n                <label className=\"mb-1 \"> <strong>{item.label}</strong> </label>\r\n            </div>\r\n        </div>\r\n                \r\n        )\r\n\r\n        })\r\n        } */}\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}