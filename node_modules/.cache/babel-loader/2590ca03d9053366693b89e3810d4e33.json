{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Attributes\\\\Attributes.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Attributes = props => {\n  _s();\n\n  var _errors$attributeName;\n\n  // validation start\n  const schema = yup.object().shape({\n    attributeName: yup.string().required(\"This field is a required field\")\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // validation end \n  // for localization\n\n  const {\n    t\n  } = useTranslation(); // get ID from URL\n\n  const id = props.match.params.id; // insert modal\n\n  const [modalCentered, setModalCentered] = useState(false); // edit modal\n\n  const [editmodalCentered, setEditModalCentered] = useState(false); // insert a section\n\n  const [attributeInsert, setAttributeInsert] = useState([]);\n\n  const handleInput = e => {\n    e.persist();\n    setAttributeInsert({ ...attributeInsert,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const saveAttribute = e => {\n    // e.preventDefault();\n    axios.post(\"/api/InsertAttribute\", attributeInsert).then(res => {\n      if (res.data.status === 200) {\n        setAttributeInsert([]);\n        reset();\n        swal(\"Success\", res.data.message, \"success\");\n        setModalCentered(false); //  this.props.history.push(\"/\")\n      }\n    });\n  }; // edit code\n\n\n  const [editAttribute, setEditAttribute] = useState([]);\n\n  const editHandleInput = e => {\n    e.persist();\n    setEditAttribute({ ...editAttribute,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const fetchAttribute = (e, id) => {\n    e.preventDefault();\n    axios.get(`/api/EditAttribute/${id}`).then(res => {\n      if (res.data.status === 200) {\n        setEditAttribute(res.data.item);\n        setEditModalCentered(true);\n      } else if (res.data.status === 404) {\n        swal(\"Error\", res.data.message, \"error\");\n      }\n    });\n  };\n\n  const updateAttribute = e => {\n    e.preventDefault();\n    axios.post(\"/api/UpdateAttribute\", editAttribute).then(res => {\n      if (res.data.status === 200) {\n        setEditAttribute('');\n        setEditModalCentered(false);\n        swal(\"Success\", res.data.message, \"success\"); //  this.props.history.push(\"/\")\n      } else if (res.data.status === 404) {\n        swal(\"Error\", res.data.message, \"error\");\n      }\n    });\n  }; //for retriving data using laravel API\n\n\n  const [fetchData, setFetchData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get(`/api/GetAttributes`).then(res => {\n      if (res.data.status === 200) {\n        // console.log(res.data.fetchData);\n        setFetchData(res.data.fetchData);\n      }\n\n      setLoading(false);\n    });\n  }, [attributeInsert, editAttribute, id]);\n  var viewProducts_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary \",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this);\n  } else {\n    viewProducts_HTMLTABLE = fetchData.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", item.attributeName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => fetchAttribute(e, item.id),\n            className: \"btn btn-outline-danger btn-sm\",\n            children: t('edit')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: e => deleteAttribute(e, item.id),\n            className: \"btn btn-outline-warning btn-sm\",\n            children: t('delete')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this);\n    });\n  } // delete section \n\n\n  const deleteAttribute = (e, id) => {\n    e.preventDefault();\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      buttons: [t('cancel'), t('confirm')],\n      dangerMode: true\n    }).then(willDelete => {\n      if (willDelete) {\n        axios.delete(`/api/DeleteAttribute/${id}`).then(res => {\n          if (res.data.status === 200) {\n            swal(\"Success\", res.data.message, \"success\");\n            setAttributeInsert([]);\n          } else if (res.data.status === 404) {\n            swal(\"Error\", res.data.message, \"error\");\n          }\n        });\n      } else {\n        swal(\"Your Data is safe now!\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CBreadcrumb, {\n      style: {\n        \"--cui-breadcrumb-divider\": \"'>'\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CBreadcrumbItem, {\n        active: true,\n        children: t('attributes')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade\",\n      show: modalCentered,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(saveAttribute),\n        method: \"POST\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: t('add_attribute')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalCentered(false),\n            variant: \"\",\n            className: \"close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [t('attribute_name'), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register(\"attributeName\"),\n              className: \"form-control\",\n              placeholder: t('attribute_name'),\n              name: \"attributeName\",\n              onChange: handleInput,\n              value: attributeInsert.attributeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: (_errors$attributeName = errors.attributeName) === null || _errors$attributeName === void 0 ? void 0 : _errors$attributeName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalCentered(false),\n            variant: \"danger light\",\n            children: t('close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: t('save')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"fade\",\n      show: editmodalCentered,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: updateAttribute,\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [t('edit_Attribute'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalCentered(false),\n            variant: \"\",\n            className: \"close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1 \",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: t('attribute_name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: t('attribute_name'),\n              name: \"attributeName\",\n              required: true,\n              onChange: editHandleInput,\n              value: editAttribute.attributeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalCentered(false),\n            variant: \"danger light\",\n            children: t('close')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [t('update'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header border-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title mb-2\",\n                children: t('attributes')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"button\",\n                className: \"mb-2 mr-2\",\n                onClick: () => setModalCentered(true),\n                children: t('add_attribute')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body p-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive \",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('number')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('attribute_name')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t('actions')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: viewProducts_HTMLTABLE\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Attributes, \"ZzvFEdU8jAA11xc+cP6iA9XCt8M=\", false, function () {\n  return [useForm, useTranslation];\n});\n\n_c = Attributes;\nexport default Attributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attributes\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Attributes/Attributes.js"],"names":["React","Fragment","useState","useEffect","Button","Modal","Form","axios","swal","useTranslation","useForm","yupResolver","yup","CBreadcrumb","CBreadcrumbItem","Attributes","props","schema","object","shape","attributeName","string","required","register","handleSubmit","reset","formState","errors","resolver","t","id","match","params","modalCentered","setModalCentered","editmodalCentered","setEditModalCentered","attributeInsert","setAttributeInsert","handleInput","e","persist","target","name","value","saveAttribute","post","then","res","data","status","message","editAttribute","setEditAttribute","editHandleInput","fetchAttribute","preventDefault","get","item","updateAttribute","fetchData","setFetchData","loading","setLoading","viewProducts_HTMLTABLE","map","i","deleteAttribute","title","text","icon","buttons","dangerMode","willDelete","delete"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst Attributes = (props) => {\r\n    // validation start\r\n    const schema = yup.object().shape({\r\n        attributeName: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // validation end \r\n    // for localization\r\n    const { t } = useTranslation();\r\n    // get ID from URL\r\n    const id = props.match.params.id;\r\n\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n\r\n\r\n    \r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert a section\r\n    const [attributeInsert, setAttributeInsert] = useState([]);\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setAttributeInsert({ ...attributeInsert, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const saveAttribute= (e) => {\r\n        // e.preventDefault();\r\n        axios.post(\"/api/InsertAttribute\", attributeInsert).then(res => {\r\n            if (res.data.status === 200) {\r\n                setAttributeInsert([]);\r\n                reset();\r\n\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n    };\r\n    // edit code\r\n    const [editAttribute, setEditAttribute] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditAttribute({ ...editAttribute, [e.target.name]: e.target.value });\r\n    };\r\n    const fetchAttribute = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditAttribute/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditAttribute(res.data.item);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n        });\r\n    }\r\n    const updateAttribute = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateAttribute\", editAttribute).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditAttribute('');\r\n                setEditModalCentered(false)\r\n\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                //  this.props.history.push(\"/\")\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/GetAttributes`).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.fetchData);\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [attributeInsert, editAttribute, id]);\r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n        viewProducts_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <td>{i + 1}</td>\r\n\r\n                        <td> {item.attributeName}</td>\r\n                        <td>\r\n                            {/* <Link to={`add-option/${item.id}`} className=\"btn btn-outline-danger btn-sm\">{t('options')}</Link>&nbsp;&nbsp;&nbsp; */}\r\n                            <button type=\"button\" onClick={(e) => fetchAttribute(e, item.id)} className=\"btn btn-outline-danger btn-sm\">{t('edit')}</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"button\" onClick={(e) => deleteAttribute(e, item.id)} className=\"btn btn-outline-warning btn-sm\">{t('delete')}</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete section \r\n    const deleteAttribute = (e, id) => {\r\n        e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteAttribute/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                            setAttributeInsert([]);\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <Fragment>\r\n             <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem active>{t('attributes')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveAttribute)} method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_attribute')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('attribute_name')} </strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"attributeName\")}\r\n                                className=\"form-control\"\r\n                                placeholder={t('attribute_name')}\r\n                                name=\"attributeName\"\r\n                                onChange={handleInput}\r\n                                value={attributeInsert.attributeName}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.attributeName?.message}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')}</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateAttribute} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_Attribute')} </Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('attribute_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('attribute_name')}\r\n                                name=\"attributeName\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editAttribute.attributeName}\r\n                            />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('attributes')}</h4>\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 mr-2\"\r\n                                    onClick={() => setModalCentered(true)} >\r\n                                    {t('add_attribute')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table text-center\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')}</th>\r\n                                            <th>{t('attribute_name')}</th>\r\n                                            <th>{t('actions')}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewProducts_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Attributes;\r\n"]},"metadata":{},"sourceType":"module"}