{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\React-Koki-v1.0-06-April-2021\\\\React-Koki\\\\src\\\\jsx\\\\components\\\\charts\\\\apexcharts\\\\ApexChart.js\";\nimport React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n};\n\nclass ApexChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      render: false,\n      //Set render state to false\n      series: [{\n        name: \"South\",\n        data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\n          min: 10,\n          max: 60\n        })\n      }, {\n        name: \"North\",\n        data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\n          min: 10,\n          max: 20\n        })\n      }, {\n        name: \"Central\",\n        data: generateDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 20, {\n          min: 10,\n          max: 15\n        })\n      }],\n      options: {\n        chart: {\n          type: \"area\",\n          height: 350,\n          stacked: true,\n          events: {\n            selection: function (chart, e) {\n              console.log(new Date(e.xaxis.min));\n            }\n          },\n          toolbar: {\n            show: false\n          }\n        },\n        colors: [\"#ea3c7c\", \"#00E396\", \"#CED4DC\"],\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          curve: \"smooth\"\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            opacityFrom: 0.6,\n            opacityTo: 0.8\n          }\n        },\n        zoom: {\n          enabled: false\n        },\n        legend: {\n          show: false,\n          position: \"top\",\n          horizontalAlign: \"left\"\n        },\n        xaxis: {\n          type: \"datetime\"\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      //Start the timer\n      this.setState({\n        render: true\n      }); //After 1 second, set render to true\n    }.bind(this), 1000);\n  }\n\n  render() {\n    let renderContainer = false;\n\n    if (this.state.render) {\n      renderContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 24\n      }, this);\n    }\n\n    return renderContainer //Render the dom elements, or, when this.state == false, nothing.\n    ;\n  }\n\n}\n\nexport default ApexChart;","map":{"version":3,"sources":["D:/fineDine/React-Koki-v1.0-06-April-2021/React-Koki/src/jsx/components/charts/apexcharts/ApexChart.js"],"names":["React","ReactApexChart","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","ApexChart","Component","constructor","props","state","render","name","data","Date","getTime","options","chart","type","height","stacked","events","selection","e","console","log","xaxis","toolbar","show","colors","dataLabels","enabled","stroke","curve","fill","gradient","opacityFrom","opacityTo","zoom","legend","position","horizontalAlign","componentDidMount","setTimeout","setState","bind","renderContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nvar generateDayWiseTimeSeries = function (baseval, count, yrange) {\n   var i = 0;\n   var series = [];\n   while (i < count) {\n      var x = baseval;\n      var y =\n         Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push([x, y]);\n      baseval += 86400000;\n      i++;\n   }\n   return series;\n};\n\nclass ApexChart extends React.Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n\t\t   render: false, //Set render state to false\n         series: [\n            {\n               name: \"South\",\n               data: generateDayWiseTimeSeries(\n                  new Date(\"11 Feb 2017 GMT\").getTime(),\n                  20,\n                  {\n                     min: 10,\n                     max: 60,\n                  }\n               ),\n            },\n            {\n               name: \"North\",\n               data: generateDayWiseTimeSeries(\n                  new Date(\"11 Feb 2017 GMT\").getTime(),\n                  20,\n                  {\n                     min: 10,\n                     max: 20,\n                  }\n               ),\n            },\n            {\n               name: \"Central\",\n               data: generateDayWiseTimeSeries(\n                  new Date(\"11 Feb 2017 GMT\").getTime(),\n                  20,\n                  {\n                     min: 10,\n                     max: 15,\n                  }\n               ),\n            },\n         ],\n         options: {\n            chart: {\n               type: \"area\",\n               height: 350,\n               stacked: true,\n               events: {\n                  selection: function (chart, e) {\n                     console.log(new Date(e.xaxis.min));\n                  },\n               },\n               toolbar: {\n                  show: false,\n               },\n            },\n            colors: [\"#ea3c7c\", \"#00E396\", \"#CED4DC\"],\n            dataLabels: {\n               enabled: false,\n            },\n            stroke: {\n               show: true,\n               curve: \"smooth\",\n            },\n            fill: {\n               type: \"gradient\",\n               gradient: {\n                  opacityFrom: 0.6,\n                  opacityTo: 0.8,\n               },\n            },\n            zoom: {\n               enabled: false,\n            },\n            legend: {\n               show: false,\n               position: \"top\",\n               horizontalAlign: \"left\",\n            },\n            xaxis: {\n               type: \"datetime\",\n            },\n         },\n      };\n   }\n\n\n\tcomponentDidMount() {\n\t  setTimeout(function() { //Start the timer\n\t\t  this.setState({render: true}) //After 1 second, set render to true\n\t  }.bind(this), 1000)\n\t}\n\n   render() {\n\t   let renderContainer = false;\n\t   \n\t   if(this.state.render) {\n\t\t\t renderContainer =  <div id=\"chart\">\n            <ReactApexChart\n               options={this.state.options}\n               series={this.state.series}\n               type=\"area\"\n               height={350}\n            />\n         </div>;\n\t\t}\n\t   \n\t   return (\n\t\t  renderContainer //Render the dom elements, or, when this.state == false, nothing.\n\t\t);\n   }\n}\n\nexport default ApexChart;\n"]},"metadata":{},"sourceType":"module"}