{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\Products\\\\AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\"; // import PageTItle from \"../../layouts/PageTitle\";\n\nimport { Container, Button, Card, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { CBreadcrumb } from '@coreui/react';\nimport Select from 'react-select';\nimport TagInputSelect from './TagInputSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProduct = props => {\n  _s();\n\n  // validation\n  const schema = yup.object().shape({\n    Description: yup.string().required(\"This field is a required field\"),\n    ProductName: yup.string().required(\"This field is a required field\"),\n    UnitID: yup.string().required(\"This field is a required field\")\n  }).required();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // for localization\n\n  const {\n    t\n  } = useTranslation();\n  const id = props.match.params.id; // insert a section\n\n  const [productInsert, setProductInsert] = useState([]);\n\n  const handleInput = e => {\n    e.persist();\n    setProductInsert({ ...productInsert,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const [imageState, setImageState] = useState([]);\n\n  const handleImage = e => {\n    setImageState({ ...imageState,\n      CategoryIcon: e.target.files[0]\n    });\n  }; // insert\n\n\n  const saveProduct = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    console.log(productInsert);\n    formData.append('image', imageState.image);\n    formData.append('Description', productInsert.Description);\n    formData.append('ProductName', productInsert.ProductName);\n    formData.append('UnitID', productInsert.UnitID);\n    axios.post('/api/InsertProducts', formData).then(res => {\n      if (res.data.status === 200) {\n        // setProductInsert();\n        reset();\n        swal(\"Success\", res.data.message, \"success\"); // setSelectedFiles([]);\n      }\n    });\n  }; // select images start \n  // const [selectedFiles, setSelectedFiles] = useState([]);\n  // const [imageState, setImageState] = useState([]);\n  // const handleImageChange = (e) => {\n  //     const imagesArray = [];\n  //     for (let i = 0; i < e.target.files.length; i++) {\n  //         imagesArray.push(e.target.files[i]);\n  //     }\n  //     setImageState({ ...imageState, image: imagesArray });\n  //     setSelectedFiles([]);\n  //     if (e.target.files) {\n  //         const filesArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file));\n  //         setSelectedFiles((prevImages) => prevImages.concat(filesArray));\n  //         Array.from(e.target.files).map(\n  //             (file) => URL.revokeObjectURL(file)\n  //         );\n  //     }\n  // };\n  // const renderPhotos = (source) => {\n  //     return source.map((photo) => {\n  //         return <img className=\"p-2\" src={photo} alt=\"\" key={photo} style={{ width: \"100\", height: \"100px\" }} />;\n  //     });\n  // };\n  // select images end \n  //for retriving data using laravel API\n\n\n  const [fetchData, setFetchData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unitData, setUnitData] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/GetUnitsAll/${id}`).then(res => {\n      if (res.data.status === 200) {\n        // console.log(res.data.fetchData)\n        setUnitData(res.data.fetchData);\n      }\n\n      setLoading(false);\n    });\n    axios.get(`/api/GetAttributes`).then(res => {\n      if (res.data.status === 200) {\n        setFetchData(res.data.fetchData);\n      }\n    });\n  }, [id, productInsert]); // set Attribute select box \n\n  const [displayValue, setDisplayValue] = useState([]);\n\n  const handleSelectEvent = e => {\n    setDisplayValue(Array.isArray(e) ? e.map(item => item.label) : []);\n  }; // set by child TagInputSelect \n\n\n  const [tagArray, setTagArray] = useState([]); // jsut for testing in console\n  // const check = (e) => {\n  //     e.preventDefault()\n  //     console.log(tagArray);\n  // }\n\n  var viewProducts_HTMLTABLE = \"\";\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary \",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: t('loading')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 16\n    }, this);\n  } else {\n    var _errors$ProductName, _errors$ProductName2, _errors$ProductName3, _errors$UnitID, _errors$UnitID2, _errors$UnitID3, _errors$Description, _errors$Description2, _errors$Description3;\n\n    viewProducts_HTMLTABLE =\n    /*#__PURE__*/\n    // fetchData.map((item, i) => {\n    //     return (\n    _jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(saveProduct),\n        method: \"POST\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: t('add_product')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1 \",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: t('product_name')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 63\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ...register(\"ProductName\"),\n                  className: ((_errors$ProductName = errors.ProductName) === null || _errors$ProductName === void 0 ? void 0 : _errors$ProductName.message) ? \"form-control  is-invalid\" : \"form-control\",\n                  placeholder: t('product_name'),\n                  name: \"ProductName\",\n                  onChange: handleInput,\n                  value: productInsert.ProductName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), ((_errors$ProductName2 = errors.ProductName) === null || _errors$ProductName2 === void 0 ? void 0 : _errors$ProductName2.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$ProductName3 = errors.ProductName) === null || _errors$ProductName3 === void 0 ? void 0 : _errors$ProductName3.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1 \",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: t('unit')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 63\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  type: \"text\",\n                  ...register(\"UnitID\"),\n                  className: ((_errors$UnitID = errors.UnitID) === null || _errors$UnitID === void 0 ? void 0 : _errors$UnitID.message) ? \"form-control  is-invalid\" : \"form-control\",\n                  placeholder: \"UnitID\",\n                  name: \"UnitID\",\n                  onChange: handleInput,\n                  value: productInsert.UnitID,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: t('select_a_unit')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 41\n                  }, this), \" )\", unitData.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.id,\n                    children: item.UnitName\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this), ((_errors$UnitID2 = errors.UnitID) === null || _errors$UnitID2 === void 0 ? void 0 : _errors$UnitID2.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$UnitID3 = errors.UnitID) === null || _errors$UnitID3 === void 0 ? void 0 : _errors$UnitID3.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1 \",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: t('description')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 63\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  ...register(\"Description\"),\n                  className: ((_errors$Description = errors.Description) === null || _errors$Description === void 0 ? void 0 : _errors$Description.message) ? \"form-control  is-invalid\" : \"form-control\",\n                  placeholder: t('description'),\n                  name: \"Description\",\n                  onChange: handleInput,\n                  value: productInsert.Description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), ((_errors$Description2 = errors.Description) === null || _errors$Description2 === void 0 ? void 0 : _errors$Description2.message) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$Description3 = errors.Description) === null || _errors$Description3 === void 0 ? void 0 : _errors$Description3.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1 \",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: t('image')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 63\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  className: \"form-control\",\n                  placeholder: t('image'),\n                  name: \"image\",\n                  required: true,\n                  onChange: handleImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [\" \", t('save'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: t('product_variation')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 \",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: t('attributes')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 59\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select // defaultValue={[colourOptions[2], colourOptions[3]]}\n              , {\n                isMulti: true,\n                name: \"colors\",\n                options: fetchData.map((o, i) => {\n                  return {\n                    id: i,\n                    value: o.id,\n                    label: o.attributeName\n                  };\n                }),\n                className: \"basic-multi-select\",\n                classNamePrefix: \"select\",\n                onChange: handleSelectEvent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 mt-3\",\n            children: displayValue === null || displayValue === void 0 ? void 0 : displayValue.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1 \",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: item\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 75\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TagInputSelect, {\n                    item: item,\n                    setfunction: setTagArray,\n                    arr: tagArray\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 45\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 3mt-\",\n            children: tagArray === null || tagArray === void 0 ? void 0 : tagArray.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row my-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-3 col-xxl-3 col-lg-3 col-sm-12 \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1 \",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [productInsert.ProductName, \"--\", item]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 79\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-2 col-xxl-2 col-lg-2 col-sm-12 \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1 \",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 79\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"Price\",\n                      placeholder: \"Price\" // value={item.name}\n                      // onChange={(e) => onChange(index, e)}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-2 col-xxl-2 col-lg-2 col-sm-12 \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1 \",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Quantity\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 79\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"Quantity\",\n                      placeholder: \"Name\" // value={item.name}\n                      // onChange={(e) => onChange(index, e)}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-2 col-xxl-2 col-lg-2 col-sm-12 \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1 \",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"sku\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 79\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"sku\",\n                      placeholder: \"sku\" // value={item.name}\n                      // onChange={(e) => onChange(index, e)}\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-2 col-xxl-2 col-lg-2 col-sm-2 mt-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"mb-1 \",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Photos\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 79\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      name: \"file\",\n                      className: \"form-control\" // onChange={handleImageChange}\n                      ,\n                      multiple: true,\n                      required: true,\n                      \"data-overwrite-initial\": \"false\",\n                      \"data-min-file-count\": \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-1 col-xxl-1 col-lg-1 col-sm-1 mt-1\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning \" // onClick={(e) => handleRemoveField(e, index)}\n                    ,\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"16\",\n                      height: \"16\",\n                      fill: \"currentColor\",\n                      className: \"bi bi-x-lg\",\n                      viewBox: \"0 0 16 16\",\n                      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                        fillRule: \"evenodd\",\n                        d: \"M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                        fillRule: \"evenodd\",\n                        d: \"M2.146 2.146a.5.5 0 0 0 0 .708l11 11a.5.5 0 0 0 .708-.708l-11-11a.5.5 0 0 0-.708 0Z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 45\n                }, this)]\n              }, `item-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: [\" \", t('save'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this); //     )\n    // })\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CBreadcrumb, {\n      style: {\n        \"--cui-breadcrumb-divider\": \"'>'\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"font-weight-bold\",\n        to: `/products/${id}`,\n        children: [t('products_list'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }, this), viewProducts_HTMLTABLE]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProduct, \"UBzuaaprZP0rWQgF21YWpXbujxQ=\", false, function () {\n  return [useForm, useTranslation];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/Products/AddProduct.js"],"names":["React","Fragment","useState","useEffect","Container","Button","Card","Form","axios","swal","Link","useTranslation","useForm","yupResolver","yup","CBreadcrumb","Select","TagInputSelect","AddProduct","props","schema","object","shape","Description","string","required","ProductName","UnitID","register","handleSubmit","reset","formState","errors","resolver","t","id","match","params","productInsert","setProductInsert","handleInput","e","persist","target","name","value","imageState","setImageState","handleImage","CategoryIcon","files","saveProduct","preventDefault","formData","FormData","console","log","append","image","post","then","res","data","status","message","fetchData","setFetchData","loading","setLoading","unitData","setUnitData","get","displayValue","setDisplayValue","handleSelectEvent","Array","isArray","map","item","label","tagArray","setTagArray","viewProducts_HTMLTABLE","UnitName","o","i","attributeName"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n// import PageTItle from \"../../layouts/PageTitle\";\r\nimport { Container, Button, Card, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb } from '@coreui/react'\r\nimport Select from 'react-select';\r\nimport TagInputSelect from './TagInputSelect'\r\n\r\nconst AddProduct = (props) => {\r\n    // validation\r\n    const schema = yup.object().shape({\r\n        Description: yup.string().required(\"This field is a required field\"),\r\n        ProductName: yup.string().required(\"This field is a required field\"),\r\n        UnitID: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    const id = props.match.params.id;\r\n\r\n\r\n\r\n    // insert a section\r\n    const [productInsert, setProductInsert] = useState([]);\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setProductInsert({ ...productInsert, [e.target.name]: e.target.value });\r\n    };\r\n    const [imageState, setImageState] = useState([]);\r\n\r\n    const handleImage = (e) => {\r\n        setImageState({ ...imageState, CategoryIcon: e.target.files[0] });\r\n    };\r\n    // insert\r\n    const saveProduct = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        console.log(productInsert);\r\n        formData.append('image', imageState.image);\r\n        formData.append('Description', productInsert.Description);\r\n        formData.append('ProductName', productInsert.ProductName);\r\n        formData.append('UnitID', productInsert.UnitID);\r\n        axios.post('/api/InsertProducts', formData).then(res => {\r\n            if (res.data.status === 200) {\r\n                // setProductInsert();\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                // setSelectedFiles([]);\r\n            }\r\n        });\r\n    };\r\n    // select images start \r\n    // const [selectedFiles, setSelectedFiles] = useState([]);\r\n    // const [imageState, setImageState] = useState([]);\r\n    // const handleImageChange = (e) => {\r\n    //     const imagesArray = [];\r\n    //     for (let i = 0; i < e.target.files.length; i++) {\r\n    //         imagesArray.push(e.target.files[i]);\r\n    //     }\r\n    //     setImageState({ ...imageState, image: imagesArray });\r\n\r\n    //     setSelectedFiles([]);\r\n    //     if (e.target.files) {\r\n    //         const filesArray = Array.from(e.target.files).map((file) => URL.createObjectURL(file));\r\n    //         setSelectedFiles((prevImages) => prevImages.concat(filesArray));\r\n    //         Array.from(e.target.files).map(\r\n    //             (file) => URL.revokeObjectURL(file)\r\n    //         );\r\n    //     }\r\n\r\n    // };\r\n    // const renderPhotos = (source) => {\r\n    //     return source.map((photo) => {\r\n    //         return <img className=\"p-2\" src={photo} alt=\"\" key={photo} style={{ width: \"100\", height: \"100px\" }} />;\r\n    //     });\r\n    // };\r\n    // select images end \r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [unitData, setUnitData] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`/api/GetUnitsAll/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.fetchData)\r\n                setUnitData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n        axios.get(`/api/GetAttributes`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n        });\r\n\r\n    }, [id, productInsert]);\r\n    // set Attribute select box \r\n    const [displayValue, setDisplayValue] = useState([]);\r\n    const handleSelectEvent = (e) => {\r\n        setDisplayValue(Array.isArray(e) ? e.map(item => item.label) : [])\r\n    }\r\n\r\n    // set by child TagInputSelect \r\n    const [tagArray, setTagArray] = useState([]);\r\n\r\n    // jsut for testing in console\r\n    // const check = (e) => {\r\n    //     e.preventDefault()\r\n    //     console.log(tagArray);\r\n    // }\r\n\r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n\r\n        viewProducts_HTMLTABLE =\r\n            // fetchData.map((item, i) => {\r\n            //     return (\r\n            <Container>\r\n                <Form onSubmit={handleSubmit(saveProduct)} method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Card.Header>\r\n                        <Card.Title>{t('add_product')}</Card.Title>\r\n\r\n\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <div className=\"row\" >\r\n                            <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('product_name')}</strong> </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        {...register(\"ProductName\")}\r\n                                        className={\r\n                                            errors.ProductName?.message\r\n                                                ? \"form-control  is-invalid\"\r\n                                                : \"form-control\"\r\n                                        }\r\n                                        placeholder={t('product_name')}\r\n                                        name=\"ProductName\"\r\n                                        onChange={handleInput}\r\n                                        value={productInsert.ProductName}\r\n                                    />\r\n                                    {errors.ProductName?.message && (\r\n                                        <div className=\"invalid-feedback\">{errors.ProductName?.message}</div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('unit')}</strong> </label>\r\n                                    <select type=\"text\"\r\n                                        {...register(\"UnitID\")}\r\n\r\n                                        className={\r\n                                            errors.UnitID?.message\r\n                                                ? \"form-control  is-invalid\"\r\n                                                : \"form-control\"\r\n                                        }\r\n                                        placeholder=\"UnitID\"\r\n                                        name=\"UnitID\"\r\n                                        onChange={handleInput}\r\n                                        value={productInsert.UnitID}>\r\n                                        <option value=\"\">{t('select_a_unit')}</option> )\r\n                                        {\r\n                                            unitData.map((item) =>\r\n                                                <option value={item.id} key={item.id}>{item.UnitName}</option>)\r\n                                        }</select>\r\n                                    {errors.UnitID?.message && (\r\n                                        <div className=\"invalid-feedback\">{errors.UnitID?.message}</div>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('description')}</strong> </label>\r\n                                    <textarea\r\n                                        type=\"text\"\r\n                                        {...register(\"Description\")}\r\n                                        className={\r\n                                            errors.Description?.message\r\n                                                ? \"form-control  is-invalid\"\r\n                                                : \"form-control\"\r\n                                        }\r\n                                        placeholder={t('description')}\r\n                                        name=\"Description\"\r\n                                        onChange={handleInput}\r\n                                        value={productInsert.Description}\r\n                                    />\r\n                                    {errors.Description?.message && (\r\n                                        <div className=\"invalid-feedback\">{errors.Description?.message}</div>\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('image')}</strong> </label>\r\n                                    {/* <div className=\"file-loading\"> */}\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('image')}\r\n                                        name=\"image\"\r\n                                        required\r\n                                        onChange={handleImage}\r\n                                    />\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"result\">{renderPhotos(selectedFiles)}</div> */}\r\n                        </div>\r\n\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"primary\" type=\"submit\"> {t('save')} </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n                <Form >\r\n                    <Card.Header>\r\n                        <Card.Title>{t('product_variation')}</Card.Title>\r\n\r\n\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 \">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"mb-1 \"> <strong>{t('attributes')}</strong> </label>\r\n\r\n                                <Select\r\n                                    // defaultValue={[colourOptions[2], colourOptions[3]]}\r\n                                    isMulti\r\n                                    name=\"colors\"\r\n                                    options={fetchData.map((o, i) => {\r\n                                        return { id: i, value: o.id, label: o.attributeName };\r\n                                    })}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                    onChange={handleSelectEvent}\r\n                                />\r\n\r\n                                {/* <div className=\"text-danger\">\r\n                                    {errors.attributes?.message}\r\n                                </div> */}\r\n                            </div>\r\n                            {/* {displayValue.length } */}\r\n                        </div>\r\n\r\n                        <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 mt-3\">\r\n                            {\r\n                                displayValue?.map((item, i) => {\r\n                                    return (\r\n                                        <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\" key={i}>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"mb-1 \"> <strong>{item}</strong> </label>\r\n                                                <TagInputSelect item={item} setfunction={setTagArray} arr={tagArray} />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        {/* <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 mt-3\">\r\n                            <button onClick={(e) => check(e)}>check</button>\r\n                        </div> */}\r\n                        <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12 3mt-\">\r\n                            {\r\n                                tagArray?.map((item, i) => {\r\n                                    return (\r\n                                        <div className=\"row my-1\" key={`item-${i}`}>\r\n\r\n                                            <div className=\"col-xl-3 col-xxl-3 col-lg-3 col-sm-12 \">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"mb-1 \"> <strong>{productInsert.ProductName}--{item}</strong> </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-2 col-xxl-2 col-lg-2 col-sm-12 \">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"mb-1 \"> <strong>Price</strong> </label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        name=\"Price\"\r\n                                                        placeholder=\"Price\"\r\n                                                    // value={item.name}\r\n                                                    // onChange={(e) => onChange(index, e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-2 col-xxl-2 col-lg-2 col-sm-12 \">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"mb-1 \"> <strong>Quantity</strong> </label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        name=\"Quantity\"\r\n                                                        placeholder=\"Name\"\r\n                                                    // value={item.name}\r\n                                                    // onChange={(e) => onChange(index, e)}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-2 col-xxl-2 col-lg-2 col-sm-12 \">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"mb-1 \"> <strong>sku</strong> </label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        name=\"sku\"\r\n                                                        placeholder=\"sku\"\r\n                                                    // value={item.name}\r\n                                                    // onChange={(e) => onChange(index, e)}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-2 col-xxl-2 col-lg-2 col-sm-2 mt-1\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"mb-1 \"> <strong>Photos</strong> </label>\r\n                                                    {/* <div className=\"file-loading\"> */}\r\n                                                    <input\r\n                                                        type=\"file\"\r\n                                                        name=\"file\"\r\n                                                        className=\"form-control\"\r\n                                                        // onChange={handleImageChange}\r\n                                                        multiple\r\n                                                        required\r\n                                                        data-overwrite-initial=\"false\"\r\n                                                        data-min-file-count=\"1\" />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-xl-1 col-xxl-1 col-lg-1 col-sm-1 mt-1\">\r\n                                                <button\r\n                                                    className=\"btn btn-warning \"\r\n                                                // onClick={(e) => handleRemoveField(e, index)}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n                                                        <path fillRule=\"evenodd\" d=\"M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z\" />\r\n                                                        <path fillRule=\"evenodd\" d=\"M2.146 2.146a.5.5 0 0 0 0 .708l11 11a.5.5 0 0 0 .708-.708l-11-11a.5.5 0 0 0-.708 0Z\" />\r\n                                                    </svg>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Button variant=\"primary\" type=\"submit\"> {t('save')} </Button>\r\n                    </Card.Footer>\r\n                </Form>\r\n            </Container>\r\n        //     )\r\n        // })\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <Link className=\"font-weight-bold\" to={`/products/${id}`}>{t('products_list')} </Link>\r\n            </CBreadcrumb>\r\n            {viewProducts_HTMLTABLE}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n"]},"metadata":{},"sourceType":"module"}