{"ast":null,"code":"var _jsxFileName = \"D:\\\\fineDine\\\\source code\\\\Client-Side\\\\src\\\\jsx\\\\components\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (// Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    isLogin() ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/page-login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }, this)\n  );\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/fineDine/source code/Client-Side/src/jsx/components/PrivateRoute.js"],"names":["React","Route","Redirect","isLogin","PrivateRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,UAAxB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD,SACI;AACA;AACAJ,IAAAA,OAAO,kBAAI,QAAC,KAAD,OAAWI,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,iBAEjC,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAFG;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAGD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANV;AASH,CAVD;;KAAMJ,Y;AAYN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from '../utils';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    return (\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        isLogin() ?<Route {...rest} render={props => (\r\n           \r\n                <Component {...props} /> )} />\r\n            : <Redirect to=\"/page-login\"/> \r\n       \r\n    );\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}