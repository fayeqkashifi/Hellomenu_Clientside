[{"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\index.js":"1","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\App.js":"2","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\index.js":"3","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\Footer.js":"4","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Login.js":"5","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Registration.js":"6","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\LockScreen.js":"7","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error400.js":"8","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error503.js":"9","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error403.js":"10","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error404.js":"11","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\ForgotPassword.js":"12","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Widget.js":"13","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error500.js":"14","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\ButtonGroup.js":"15","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Button.js":"16","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Accordion.js":"17","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Alert.js":"18","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Cards.js":"19","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Badge.js":"20","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\ListGroup.js":"21","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\PopOver.js":"22","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Modal.js":"23","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Carousel.js":"24","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\ProgressBar.js":"25","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\MediaObject.js":"26","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Pagination.js":"27","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\DropDown.js":"28","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Typography.js":"29","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\DataTable.js":"30","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Tab.js":"31","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\ApexChart.js":"32","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\index.js":"33","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\BootstrapTable.js":"34","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Companies\\Companies.js":"35","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Grid.js":"36","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Orderlist\\Orderlist.js":"37","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\Analytics.js":"38","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\Home.js":"39","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Order\\Order.js":"40","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\AppProfile\\AppProfile.js":"41","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductGrid\\ProductGrid.js":"42","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Calendar\\Calendar.js":"43","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Customerlist\\Customerlist.js":"44","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductOrder.js":"45","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductList\\ProductList.js":"46","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\Invoice\\Invoice.js":"47","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\Checkout\\Checkout.js":"48","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\AppProfile\\PostDetails.js":"49","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Inbox\\Inbox.js":"50","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\Customers\\Customers.js":"51","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Summernote\\SummerNote.js":"52","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Review\\Review.js":"53","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Compose\\Compose.js":"54","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Read\\Read.js":"55","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Element\\Element.js":"56","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductGrid\\ProductDetail.js":"57","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\Pickers.js":"58","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\MainNouiSlider.js":"59","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\jQueryValidation\\jQueryValidation.js":"60","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Nestable\\Nestable.js":"61","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\Select2.js":"62","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Sweet Alert\\SweetAlert.js":"63","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Toastr\\Toastr.js":"64","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Jqv Map\\JqvMap.js":"65","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\Wizard.js":"66","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\index.js":"67","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\index.js":"68","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Sparkline\\index.js":"69","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\index.js":"70","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\rechart\\index.js":"71","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\PageTitle.js":"72","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line3.js":"73","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\pie.js":"74","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line4.js":"75","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Sparkline\\NagetivePositive.js":"76","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Bar.js":"77","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line6.js":"78","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\realtime.js":"79","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\rechart\\BarChartNoPadding.js":"80","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar2.js":"81","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar3.js":"82","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar4.js":"83","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\CustomGroup.js":"84","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\Disabling.js":"85","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Nestable\\NTable.js":"86","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\ClickablePips.js":"87","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Nestable\\NTable2.js":"88","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\Disabling.js":"89","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\MultiSelect.js":"90","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\index.jsx":"91","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\SlideDragable.js":"92","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\SnappingToValues.js":"93","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\NouiColor.js":"94","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\Toggle.js":"95","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\MetarialDateAndTime.js":"96","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\MetarialTime.js":"97","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\MetarialDate.js":"98","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\Color.js":"99","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\LinearGradientPicker.js":"100","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\Nonlinearslider.js":"101","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Compose\\DropFile.js":"102","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Inbox\\InboxMessage.js":"103","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\AppProfile\\Lightgallery.js":"104","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepFour.js":"105","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Summernote\\Rte.js":"106","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepThree.js":"107","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepTwo.js":"108","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepOne.js":"109","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductList\\SingleProductList.js":"110","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductGrid\\Products.js":"111","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\tableData.js":"112","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Customerlist\\Dropdownblog1.js":"113","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Order\\Polarareacharts.js":"114","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Calendar\\EventCalendar.js":"115","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\NagetivePositive2.js":"116","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\rechart\\PositiveNagative.js":"117","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Pie.js":"118","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line4.js":"119","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\RadialBar.js":"120","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\productData\\index.js":"121","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line.js":"122","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line3.js":"123","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Bar2.js":"124","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Bar.js":"125","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line2.js":"126","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\polar.js":"127","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\radar.js":"128","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\ApexBarChart.js":"129","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Sparkline\\sample-base.js":"130","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\dualLine2.js":"131","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\data.js":"132","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\dualArea.js":"133","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\gradinetArea.js":"134","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\basicArea.js":"135","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\donut.jsx":"136","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar5.js":"137","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\dualLine.js":"138","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar6.js":"139","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\donught.js":"140","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar1.js":"141","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line1.js":"142","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\Header.js":"143","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\polar.jsx":"144","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\area.jsx":"145","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\line.jsx":"146","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\bar.jsx":"147","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\ChatBox.js":"148","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\productData\\allProducts.js":"149","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\NavHader.js":"150","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\SideBar.js":"151","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\ApexNagetivePosative1.js":"152","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\ApexNagetivePosative.js":"153","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\Apexspline.js":"154","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\productData\\ProductStar.js":"155","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\Chat.js":"156","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\Alerts.js":"157","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\Notes.js":"158","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\MsgBox.js":"159","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\Apexchartrevenue.js":"160","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\donught2.js":"161","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\ApexChartcircle.js":"162","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\Analyticsapexcustommap.js":"163","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Companies\\SingleCompani.js":"164","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Orderlist\\Dropdownblog2.js":"165","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Companies\\CompaniesIcons.js":"166","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Line2.js":"167","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Line3.js":"168","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\BasicLine.js":"169","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Line.js":"170","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Bar4.js":"171","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Bar3.js":"172","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\BarChart2.js":"173","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\PatientTable.js":"174","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\FeesCollection.js":"175","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\ProfileDatatable.js":"176","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\SimpleDataTable.js":"177","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\BasicDatatable.js":"178","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\alertData.js":"179","D:\\fineDine\\source code\\Client-Side\\src\\index.js":"180","D:\\fineDine\\source code\\Client-Side\\src\\App.js":"181","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\index.js":"182","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\Footer.js":"183","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error400.js":"184","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error403.js":"185","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\LockScreen.js":"186","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error404.js":"187","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error500.js":"188","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error503.js":"189","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Login.js":"190","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Registration.js":"191","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\ForgotPassword.js":"192","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Dashboard\\Home\\Home.js":"193","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\index.js":"194","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\PageTitle.js":"195","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\Header.js":"196","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\NavHader.js":"197","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\SideBar.js":"198","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\branches.js":"199","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Companies\\company.js":"200","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Products\\product.js":"201","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\services\\serviceArea.js":"202","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\units\\unit.js":"203","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Inventories\\inventory.js":"204","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Units\\unit.js":"205","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Services\\serviceArea.js":"206","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\category.js":"207","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\subCategory.js":"208","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Dashboard\\Profile\\Profile.js":"209","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\PublicRoute.js":"210","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\PrivateRoute.js":"211","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\utils\\index.js":"212","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\order.js":"213","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\variants.js":"214","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\gallary.js":"215","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\basket.js":"216","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\Order.js":"217","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\Basket.js":"218","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\Gallary.js":"219","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\Variants.js":"220","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\Branches.js":"221","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Products\\Product.js":"222","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Companies\\Company.js":"223","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\Category.js":"224","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Services\\ServiceArea.js":"225","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\SubCategory.js":"226","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Units\\Unit.js":"227","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Inventories\\Inventory.js":"228","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\ShowBranchDetails.js":"229","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\VariantDetailsForPublicLink.js":"230","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\VariantDetails.js":"231","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\Tables.js":"232"},{"size":204,"mtime":1608533946000,"results":"233","hashOfConfig":"234"},{"size":676,"mtime":1634374013052,"results":"235","hashOfConfig":"234"},{"size":8468,"mtime":1634379212189,"results":"236","hashOfConfig":"234"},{"size":469,"mtime":1608547334000,"results":"237","hashOfConfig":"234"},{"size":3007,"mtime":1608372114000,"results":"238","hashOfConfig":"234"},{"size":3178,"mtime":1608371920000,"results":"239","hashOfConfig":"234"},{"size":1654,"mtime":1608372128000,"results":"240","hashOfConfig":"234"},{"size":804,"mtime":1607371138000,"results":"241","hashOfConfig":"234"},{"size":709,"mtime":1608121002000,"results":"242","hashOfConfig":"234"},{"size":846,"mtime":1607371158000,"results":"243","hashOfConfig":"234"},{"size":930,"mtime":1607371162000,"results":"244","hashOfConfig":"234"},{"size":2125,"mtime":1608798840000,"results":"245","hashOfConfig":"234"},{"size":226652,"mtime":1608621386000,"results":"246","hashOfConfig":"234"},{"size":848,"mtime":1607371166000,"results":"247","hashOfConfig":"234"},{"size":8756,"mtime":1608727320000,"results":"248","hashOfConfig":"234"},{"size":32869,"mtime":1608371354000,"results":"249","hashOfConfig":"234"},{"size":32007,"mtime":1608107740000,"results":"250","hashOfConfig":"234"},{"size":25587,"mtime":1608371872000,"results":"251","hashOfConfig":"234"},{"size":16643,"mtime":1608727878000,"results":"252","hashOfConfig":"234"},{"size":19795,"mtime":1608547392000,"results":"253","hashOfConfig":"234"},{"size":19364,"mtime":1608383802000,"results":"254","hashOfConfig":"234"},{"size":4099,"mtime":1608108678000,"results":"255","hashOfConfig":"234"},{"size":24126,"mtime":1608552300000,"results":"256","hashOfConfig":"234"},{"size":5760,"mtime":1608362644000,"results":"257","hashOfConfig":"234"},{"size":11444,"mtime":1608641908000,"results":"258","hashOfConfig":"234"},{"size":11080,"mtime":1608369396000,"results":"259","hashOfConfig":"234"},{"size":4191,"mtime":1608556938000,"results":"260","hashOfConfig":"234"},{"size":32198,"mtime":1608619978000,"results":"261","hashOfConfig":"234"},{"size":19603,"mtime":1608560036000,"results":"262","hashOfConfig":"234"},{"size":781,"mtime":1608718896000,"results":"263","hashOfConfig":"234"},{"size":15755,"mtime":1608557966000,"results":"264","hashOfConfig":"234"},{"size":3242,"mtime":1608617654000,"results":"265","hashOfConfig":"234"},{"size":3235,"mtime":1608125522000,"results":"266","hashOfConfig":"234"},{"size":53701,"mtime":1608719214000,"results":"267","hashOfConfig":"234"},{"size":34594,"mtime":1607310520000,"results":"268","hashOfConfig":"234"},{"size":10047,"mtime":1608108810000,"results":"269","hashOfConfig":"234"},{"size":6694,"mtime":1608382228000,"results":"270","hashOfConfig":"234"},{"size":31436,"mtime":1608808978000,"results":"271","hashOfConfig":"234"},{"size":44595,"mtime":1608798958000,"results":"272","hashOfConfig":"234"},{"size":19440,"mtime":1608717148000,"results":"273","hashOfConfig":"234"},{"size":38398,"mtime":1608716038000,"results":"274","hashOfConfig":"234"},{"size":527,"mtime":1608016280000,"results":"275","hashOfConfig":"234"},{"size":370,"mtime":1608036278000,"results":"276","hashOfConfig":"234"},{"size":15273,"mtime":1608622368000,"results":"277","hashOfConfig":"234"},{"size":9307,"mtime":1608621512000,"results":"278","hashOfConfig":"234"},{"size":596,"mtime":1608016090000,"results":"279","hashOfConfig":"234"},{"size":8508,"mtime":1608724236000,"results":"280","hashOfConfig":"234"},{"size":19770,"mtime":1608029996000,"results":"281","hashOfConfig":"234"},{"size":21061,"mtime":1608618462000,"results":"282","hashOfConfig":"234"},{"size":16957,"mtime":1608635932000,"results":"283","hashOfConfig":"234"},{"size":33866,"mtime":1608637612000,"results":"284","hashOfConfig":"234"},{"size":937,"mtime":1608117556000,"results":"285","hashOfConfig":"234"},{"size":48976,"mtime":1608799548000,"results":"286","hashOfConfig":"234"},{"size":14607,"mtime":1608635756000,"results":"287","hashOfConfig":"234"},{"size":20758,"mtime":1608636854000,"results":"288","hashOfConfig":"234"},{"size":75713,"mtime":1608639662000,"results":"289","hashOfConfig":"234"},{"size":9540,"mtime":1608734210000,"results":"290","hashOfConfig":"234"},{"size":8542,"mtime":1608788942000,"results":"291","hashOfConfig":"234"},{"size":8330,"mtime":1608380948000,"results":"292","hashOfConfig":"234"},{"size":20738,"mtime":1608118188000,"results":"293","hashOfConfig":"234"},{"size":2274,"mtime":1608109894000,"results":"294","hashOfConfig":"234"},{"size":38002,"mtime":1608727562000,"results":"295","hashOfConfig":"234"},{"size":13377,"mtime":1608111288000,"results":"296","hashOfConfig":"234"},{"size":12483,"mtime":1608381220000,"results":"297","hashOfConfig":"234"},{"size":1373,"mtime":1608801792000,"results":"298","hashOfConfig":"234"},{"size":2107,"mtime":1608117518000,"results":"299","hashOfConfig":"234"},{"size":816,"mtime":1607542318000,"results":"300","hashOfConfig":"234"},{"size":4876,"mtime":1608362446000,"results":"301","hashOfConfig":"234"},{"size":5804,"mtime":1608616516000,"results":"302","hashOfConfig":"234"},{"size":4171,"mtime":1608617536000,"results":"303","hashOfConfig":"234"},{"size":1124,"mtime":1608368878000,"results":"304","hashOfConfig":"234"},{"size":691,"mtime":1608360578000,"results":"305","hashOfConfig":"234"},{"size":3033,"mtime":1607286392000,"results":"306","hashOfConfig":"234"},{"size":1175,"mtime":1608362172000,"results":"307","hashOfConfig":"234"},{"size":3369,"mtime":1608362284000,"results":"308","hashOfConfig":"234"},{"size":3101,"mtime":1608616366000,"results":"309","hashOfConfig":"234"},{"size":2331,"mtime":1608621082000,"results":"310","hashOfConfig":"234"},{"size":2740,"mtime":1608369320000,"results":"311","hashOfConfig":"234"},{"size":1286,"mtime":1608115346000,"results":"312","hashOfConfig":"234"},{"size":1288,"mtime":1608034132000,"results":"313","hashOfConfig":"234"},{"size":1898,"mtime":1607285936000,"results":"314","hashOfConfig":"234"},{"size":1995,"mtime":1607286074000,"results":"315","hashOfConfig":"234"},{"size":1696,"mtime":1608621220000,"results":"316","hashOfConfig":"234"},{"size":561,"mtime":1607303582000,"results":"317","hashOfConfig":"234"},{"size":700,"mtime":1607303582000,"results":"318","hashOfConfig":"234"},{"size":727,"mtime":1607303582000,"results":"319","hashOfConfig":"234"},{"size":901,"mtime":1607539824000,"results":"320","hashOfConfig":"234"},{"size":645,"mtime":1607303582000,"results":"321","hashOfConfig":"234"},{"size":1114,"mtime":1607540978000,"results":"322","hashOfConfig":"234"},{"size":997,"mtime":1607303582000,"results":"323","hashOfConfig":"234"},{"size":1927,"mtime":1608730614000,"results":"324","hashOfConfig":"234"},{"size":757,"mtime":1607538810000,"results":"325","hashOfConfig":"234"},{"size":1296,"mtime":1608381264000,"results":"326","hashOfConfig":"234"},{"size":1288,"mtime":1607530234000,"results":"327","hashOfConfig":"234"},{"size":409,"mtime":1607541364000,"results":"328","hashOfConfig":"234"},{"size":589,"mtime":1607303582000,"results":"329","hashOfConfig":"234"},{"size":550,"mtime":1607303582000,"results":"330","hashOfConfig":"234"},{"size":630,"mtime":1607303582000,"results":"331","hashOfConfig":"234"},{"size":374,"mtime":1608381616000,"results":"332","hashOfConfig":"234"},{"size":1293,"mtime":1607303582000,"results":"333","hashOfConfig":"234"},{"size":1244,"mtime":1608381284000,"results":"334","hashOfConfig":"234"},{"size":1391,"mtime":1607303582000,"results":"335","hashOfConfig":"234"},{"size":1294,"mtime":1607303582000,"results":"336","hashOfConfig":"234"},{"size":1555,"mtime":1608547576000,"results":"337","hashOfConfig":"234"},{"size":3952,"mtime":1608020424000,"results":"338","hashOfConfig":"234"},{"size":1195,"mtime":1607303582000,"results":"339","hashOfConfig":"234"},{"size":4633,"mtime":1608028984000,"results":"340","hashOfConfig":"234"},{"size":1978,"mtime":1606745486000,"results":"341","hashOfConfig":"234"},{"size":2404,"mtime":1606745480000,"results":"342","hashOfConfig":"234"},{"size":2403,"mtime":1608790508000,"results":"343","hashOfConfig":"234"},{"size":944,"mtime":1608013424000,"results":"344","hashOfConfig":"234"},{"size":11411,"mtime":1608552510000,"results":"345","hashOfConfig":"234"},{"size":3176,"mtime":1608384950000,"results":"346","hashOfConfig":"234"},{"size":1224,"mtime":1607719796000,"results":"347","hashOfConfig":"234"},{"size":4247,"mtime":1608547216000,"results":"348","hashOfConfig":"234"},{"size":5101,"mtime":1608616996000,"results":"349","hashOfConfig":"234"},{"size":1355,"mtime":1608034652000,"results":"350","hashOfConfig":"234"},{"size":1696,"mtime":1608806354000,"results":"351","hashOfConfig":"234"},{"size":2708,"mtime":1608806258000,"results":"352","hashOfConfig":"234"},{"size":2220,"mtime":1608806458000,"results":"353","hashOfConfig":"234"},{"size":291,"mtime":1607303582000,"results":"354","hashOfConfig":"234"},{"size":2354,"mtime":1608617836000,"results":"355","hashOfConfig":"234"},{"size":2267,"mtime":1608617936000,"results":"356","hashOfConfig":"234"},{"size":2011,"mtime":1608617784000,"results":"357","hashOfConfig":"234"},{"size":1570,"mtime":1608616902000,"results":"358","hashOfConfig":"234"},{"size":2275,"mtime":1608617896000,"results":"359","hashOfConfig":"234"},{"size":681,"mtime":1608041870000,"results":"360","hashOfConfig":"234"},{"size":1048,"mtime":1608040984000,"results":"361","hashOfConfig":"234"},{"size":3596,"mtime":1608616890000,"results":"362","hashOfConfig":"234"},{"size":332,"mtime":1607273284000,"results":"363","hashOfConfig":"234"},{"size":1594,"mtime":1608040346000,"results":"364","hashOfConfig":"234"},{"size":4318,"mtime":1607303582000,"results":"365","hashOfConfig":"234"},{"size":1193,"mtime":1608041332000,"results":"366","hashOfConfig":"234"},{"size":1020,"mtime":1608040684000,"results":"367","hashOfConfig":"234"},{"size":1036,"mtime":1608040514000,"results":"368","hashOfConfig":"234"},{"size":444,"mtime":1608730984000,"results":"369","hashOfConfig":"234"},{"size":1165,"mtime":1608038884000,"results":"370","hashOfConfig":"234"},{"size":1405,"mtime":1607368202000,"results":"371","hashOfConfig":"234"},{"size":1683,"mtime":1608039042000,"results":"372","hashOfConfig":"234"},{"size":909,"mtime":1608042174000,"results":"373","hashOfConfig":"234"},{"size":1104,"mtime":1608037690000,"results":"374","hashOfConfig":"234"},{"size":1221,"mtime":1608039132000,"results":"375","hashOfConfig":"234"},{"size":24604,"mtime":1608618526000,"results":"376","hashOfConfig":"234"},{"size":798,"mtime":1608730984000,"results":"377","hashOfConfig":"234"},{"size":569,"mtime":1608730986000,"results":"378","hashOfConfig":"234"},{"size":606,"mtime":1608730934000,"results":"379","hashOfConfig":"234"},{"size":813,"mtime":1608730986000,"results":"380","hashOfConfig":"234"},{"size":2180,"mtime":1607303582000,"results":"381","hashOfConfig":"234"},{"size":6195,"mtime":1608803868000,"results":"382","hashOfConfig":"234"},{"size":960,"mtime":1607369424000,"results":"383","hashOfConfig":"234"},{"size":17932,"mtime":1608618506000,"results":"384","hashOfConfig":"234"},{"size":4101,"mtime":1608722310000,"results":"385","hashOfConfig":"234"},{"size":4098,"mtime":1608722306000,"results":"386","hashOfConfig":"234"},{"size":2364,"mtime":1608531390000,"results":"387","hashOfConfig":"234"},{"size":1988,"mtime":1607303582000,"results":"388","hashOfConfig":"234"},{"size":15420,"mtime":1608369192000,"results":"389","hashOfConfig":"234"},{"size":5764,"mtime":1608370822000,"results":"390","hashOfConfig":"234"},{"size":7366,"mtime":1608370580000,"results":"391","hashOfConfig":"234"},{"size":12669,"mtime":1608370742000,"results":"392","hashOfConfig":"234"},{"size":2380,"mtime":1608722640000,"results":"393","hashOfConfig":"234"},{"size":1335,"mtime":1608187870000,"results":"394","hashOfConfig":"234"},{"size":1966,"mtime":1608618890000,"results":"395","hashOfConfig":"234"},{"size":3872,"mtime":1608546142000,"results":"396","hashOfConfig":"234"},{"size":521,"mtime":1607303582000,"results":"397","hashOfConfig":"234"},{"size":2485,"mtime":1608382330000,"results":"398","hashOfConfig":"234"},{"size":23973,"mtime":1607303582000,"results":"399","hashOfConfig":"234"},{"size":1464,"mtime":1608361320000,"results":"400","hashOfConfig":"234"},{"size":1465,"mtime":1608361390000,"results":"401","hashOfConfig":"234"},{"size":1895,"mtime":1608360658000,"results":"402","hashOfConfig":"234"},{"size":1255,"mtime":1608125466000,"results":"403","hashOfConfig":"234"},{"size":1155,"mtime":1608123362000,"results":"404","hashOfConfig":"234"},{"size":1418,"mtime":1608124134000,"results":"405","hashOfConfig":"234"},{"size":1461,"mtime":1608123594000,"results":"406","hashOfConfig":"234"},{"size":11439,"mtime":1608705384000,"results":"407","hashOfConfig":"234"},{"size":6023,"mtime":1608705232000,"results":"408","hashOfConfig":"234"},{"size":7104,"mtime":1608704750000,"results":"409","hashOfConfig":"234"},{"size":1807,"mtime":1608703072000,"results":"410","hashOfConfig":"234"},{"size":5147,"mtime":1608703338000,"results":"411","hashOfConfig":"234"},{"size":5172,"mtime":1607303582000,"results":"412","hashOfConfig":"234"},{"size":1347,"mtime":1637045709670,"results":"413","hashOfConfig":"414"},{"size":1938,"mtime":1636973713613,"results":"415","hashOfConfig":"414"},{"size":3003,"mtime":1637045688004,"results":"416","hashOfConfig":"414"},{"size":469,"mtime":1634463763359,"results":"417","hashOfConfig":"414"},{"size":804,"mtime":1607371138000,"results":"418","hashOfConfig":"414"},{"size":846,"mtime":1607371158000,"results":"419","hashOfConfig":"414"},{"size":1654,"mtime":1608372128000,"results":"420","hashOfConfig":"414"},{"size":930,"mtime":1607371162000,"results":"421","hashOfConfig":"414"},{"size":848,"mtime":1607371166000,"results":"422","hashOfConfig":"414"},{"size":709,"mtime":1608121002000,"results":"423","hashOfConfig":"414"},{"size":5726,"mtime":1637045127088,"results":"424","hashOfConfig":"414"},{"size":7648,"mtime":1637045121321,"results":"425","hashOfConfig":"414"},{"size":2125,"mtime":1608798840000,"results":"426","hashOfConfig":"414"},{"size":1829,"mtime":1636716695823,"results":"427","hashOfConfig":"414"},{"size":664,"mtime":1635185602688,"results":"428","hashOfConfig":"414"},{"size":797,"mtime":1635916896562,"results":"429","hashOfConfig":"414"},{"size":7908,"mtime":1637056866119,"results":"430","hashOfConfig":"414"},{"size":922,"mtime":1637056788351,"results":"431","hashOfConfig":"414"},{"size":4566,"mtime":1636478873800,"results":"432","hashOfConfig":"414"},{"size":14952,"mtime":1636108907527,"results":"433","hashOfConfig":"414"},{"size":11498,"mtime":1636092436527,"results":"434","hashOfConfig":"414"},{"size":11468,"mtime":1636117553956,"results":"435","hashOfConfig":"414"},{"size":9253,"mtime":1635140245427,"results":"436","hashOfConfig":"414"},{"size":8918,"mtime":1635161394796,"results":"437","hashOfConfig":"414"},{"size":28781,"mtime":1636043172375,"results":"438","hashOfConfig":"414"},{"size":9233,"mtime":1636043207552,"results":"439","hashOfConfig":"414"},{"size":9524,"mtime":1636043200237,"results":"440","hashOfConfig":"414"},{"size":13515,"mtime":1636043146973,"results":"441","hashOfConfig":"414"},{"size":12804,"mtime":1636043154339,"results":"442","hashOfConfig":"414"},{"size":23317,"mtime":1635188413846,"results":"443","hashOfConfig":"414"},{"size":432,"mtime":1635245207687,"results":"444","hashOfConfig":"414"},{"size":542,"mtime":1635870826663,"results":"445","hashOfConfig":"414"},{"size":214,"mtime":1635245629644,"results":"446","hashOfConfig":"414"},{"size":3956,"mtime":1636043188365,"results":"447","hashOfConfig":"414"},{"size":12939,"mtime":1636043239731,"results":"448","hashOfConfig":"414"},{"size":9022,"mtime":1636043213714,"results":"449","hashOfConfig":"414"},{"size":6157,"mtime":1636043182567,"results":"450","hashOfConfig":"414"},{"size":4356,"mtime":1636883330473,"results":"451","hashOfConfig":"414"},{"size":7022,"mtime":1636883333128,"results":"452","hashOfConfig":"414"},{"size":10975,"mtime":1637082916709,"results":"453","hashOfConfig":"414"},{"size":47199,"mtime":1637051311292,"results":"454","hashOfConfig":"414"},{"size":31186,"mtime":1637077563624,"results":"455","hashOfConfig":"414"},{"size":14498,"mtime":1637045645468,"results":"456","hashOfConfig":"414"},{"size":12843,"mtime":1636883067347,"results":"457","hashOfConfig":"414"},{"size":19442,"mtime":1636911939650,"results":"458","hashOfConfig":"414"},{"size":12015,"mtime":1636883320245,"results":"459","hashOfConfig":"414"},{"size":16731,"mtime":1637045628364,"results":"460","hashOfConfig":"414"},{"size":11730,"mtime":1636883305331,"results":"461","hashOfConfig":"414"},{"size":14676,"mtime":1637045637605,"results":"462","hashOfConfig":"414"},{"size":18603,"mtime":1637089050078,"results":"463","hashOfConfig":"414"},{"size":14932,"mtime":1637084925850,"results":"464","hashOfConfig":"414"},{"size":14274,"mtime":1637045196248,"results":"465","hashOfConfig":"414"},{"size":15243,"mtime":1637079529761,"results":"466","hashOfConfig":"414"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},"oef3nk",{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"469"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"469"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"469"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"469"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n8m03v",{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"839","messages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"841"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"902"},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"838"},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"838"},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"838"},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"838"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"838"},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"838"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"838"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\index.js",[],["946","947"],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\App.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\Footer.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Login.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Registration.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\LockScreen.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error400.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error503.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error403.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error404.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\ForgotPassword.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Widget.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\pages\\Error500.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\ButtonGroup.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Button.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Accordion.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Alert.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Cards.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Badge.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\ListGroup.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\PopOver.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Modal.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Carousel.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\ProgressBar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\MediaObject.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Pagination.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\DropDown.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Typography.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\DataTable.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Tab.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\ApexChart.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\BootstrapTable.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Companies\\Companies.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\Grid.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Orderlist\\Orderlist.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\Analytics.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\Home.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Order\\Order.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\AppProfile\\AppProfile.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductGrid\\ProductGrid.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Calendar\\Calendar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Customerlist\\Customerlist.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductOrder.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductList\\ProductList.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\Invoice\\Invoice.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\Checkout\\Checkout.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\AppProfile\\PostDetails.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Inbox\\Inbox.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\Customers\\Customers.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Summernote\\SummerNote.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Review\\Review.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Compose\\Compose.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Read\\Read.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Element\\Element.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductGrid\\ProductDetail.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\Pickers.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\MainNouiSlider.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\jQueryValidation\\jQueryValidation.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Nestable\\Nestable.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\Select2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Sweet Alert\\SweetAlert.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Toastr\\Toastr.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Jqv Map\\JqvMap.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\Wizard.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Sparkline\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\rechart\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\PageTitle.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line3.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\pie.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line4.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Sparkline\\NagetivePositive.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Bar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line6.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\realtime.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\rechart\\BarChartNoPadding.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar3.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar4.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\CustomGroup.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\Disabling.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Nestable\\NTable.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\ClickablePips.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Nestable\\NTable2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\Disabling.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\MultiSelect.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\index.jsx",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\SlideDragable.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\SnappingToValues.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\NouiColor.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\Toggle.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\MetarialDateAndTime.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\MetarialTime.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\MetarialDate.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\Color.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Pickers\\LinearGradientPicker.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Noui Slider\\Nonlinearslider.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Compose\\DropFile.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Email\\Inbox\\InboxMessage.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\AppProfile\\Lightgallery.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepFour.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Summernote\\Rte.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepThree.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepTwo.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Forms\\Wizard\\StepOne.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductList\\SingleProductList.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\ProductGrid\\Products.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\tableData.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Customerlist\\Dropdownblog1.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Order\\Polarareacharts.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Calendar\\EventCalendar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\NagetivePositive2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\rechart\\PositiveNagative.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Pie.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line4.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\RadialBar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\productData\\index.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line3.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Bar2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Bar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\Line2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\polar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\radar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\apexcharts\\ApexBarChart.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Sparkline\\sample-base.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\dualLine2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\PluginsMenu\\Select2\\data.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\dualArea.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\gradinetArea.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\basicArea.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\donut.jsx",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar5.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\dualLine.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar6.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\donught.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\bar1.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\line1.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\Header.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\polar.jsx",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\area.jsx",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\line.jsx",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartist\\bar.jsx",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\ChatBox.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\productData\\allProducts.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\NavHader.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\layouts\\nav\\SideBar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\ApexNagetivePosative1.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\ApexNagetivePosative.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Home\\Apexspline.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\AppsMenu\\Shop\\productData\\ProductStar.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\Chat.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\Alerts.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\Notes.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\chatBox\\MsgBox.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\Apexchartrevenue.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\Chartjs\\donught2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\ApexChartcircle.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Analytics\\Analyticsapexcustommap.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Companies\\SingleCompani.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Orderlist\\Dropdownblog2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\Dashboard\\Companies\\CompaniesIcons.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Line2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Line3.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\BasicLine.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Line.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Bar4.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\Bar3.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\charts\\chartflot\\BarChart2.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\PatientTable.js",["948"],"import React, { useState, useRef } from \"react\";\nimport { Table, Pagination, Badge, Dropdown } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport data from \"./tableData.js\";\n\nconst PatientTable = () => {\n   const sort = 3;\n   let jobPagination = Array(Math.ceil(data.patientTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.patientTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.patientTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.patientTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Patient</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.patientTable.columns.map((d, i) => (\n                                 <th key={i}>\n                                    {i === 0 ? (\n                                       <div className=\"custom-control custom-checkbox\">\n                                          <input\n                                             type=\"checkbox\"\n                                             className=\"custom-control-input\"\n                                             id=\"checkAll\"\n                                             required\n                                          />\n                                          <label\n                                             className=\"custom-control-label\"\n                                             htmlFor=\"checkAll\"\n                                          />\n                                       </div>\n                                    ) : (\n                                       d\n                                    )}\n                                 </th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, ii) => (\n                                    <td key={ii}>\n                                       {ii === 0 ? (\n                                          <div className=\"custom-control custom-checkbox\">\n                                             <input\n                                                type=\"checkbox\"\n                                                className=\"custom-control-input\"\n                                                id={`checkAll${i}`}\n                                                required\n                                             />\n                                             <label\n                                                className=\"custom-control-label\"\n                                                htmlFor={`checkAll${i}`}\n                                             />\n                                          </div>\n                                       ) : da === \"Recovered\" ? (\n                                          <Badge variant=\"success light\">\n                                             <i className=\"fa fa-circle text-success mr-1\"></i>\n                                             Recovered\n                                          </Badge>\n                                       ) : da === \"New Patient\" ? (\n                                          <Badge variant=\"danger light\">\n                                             <i className=\"fa fa-circle text-danger mr-1\"></i>\n                                             New Patient\n                                          </Badge>\n                                       ) : da === \"In Treatment\" ? (\n                                          <Badge variant=\"warning light\">\n                                             <i className=\"fa fa-circle text-warning mr-1\"></i>\n                                             In Treatment\n                                          </Badge>\n                                       ) : ii === 8 ? (\n                                          <Dropdown>\n                                             <Dropdown.Toggle\n                                                variant\n                                                className=\"icon-false table-dropdown\"\n                                             >\n                                                <svg\n                                                   width=\"24px\"\n                                                   height=\"24px\"\n                                                   viewBox=\"0 0 24 24\"\n                                                   version=\"1.1\"\n                                                >\n                                                   <g\n                                                      stroke=\"none\"\n                                                      stroke-width=\"1\"\n                                                      fill=\"none\"\n                                                      fill-rule=\"evenodd\"\n                                                   >\n                                                      <rect\n                                                         x=\"0\"\n                                                         y=\"0\"\n                                                         width=\"24\"\n                                                         height=\"24\"\n                                                      ></rect>\n                                                      <circle\n                                                         fill=\"#000000\"\n                                                         cx=\"5\"\n                                                         cy=\"12\"\n                                                         r=\"2\"\n                                                      ></circle>\n                                                      <circle\n                                                         fill=\"#000000\"\n                                                         cx=\"12\"\n                                                         cy=\"12\"\n                                                         r=\"2\"\n                                                      ></circle>\n                                                      <circle\n                                                         fill=\"#000000\"\n                                                         cx=\"19\"\n                                                         cy=\"12\"\n                                                         r=\"2\"\n                                                      ></circle>\n                                                   </g>\n                                                </svg>\n                                             </Dropdown.Toggle>\n                                             <Dropdown.Menu>\n                                                <Dropdown.Item to=\"#\">\n                                                   Accept Patient\n                                                </Dropdown.Item>\n                                                <Dropdown.Item to=\"#\">\n                                                   Reject Order\n                                                </Dropdown.Item>\n                                                <Dropdown.Item to=\"#\">\n                                                   View Details\n                                                </Dropdown.Item>\n                                             </Dropdown.Menu>\n                                          </Dropdown>\n                                       ) : (\n                                          da\n                                       )}\n                                    </td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                     </table>\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.patientTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.patientTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.patientTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-circle\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() =>\n                                    activePag.current > 1 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPagination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={\n                                       activePag.current === i ? \"active\" : \"\"\n                                    }\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPagination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PatientTable;\n","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\FeesCollection.js",["949"],"import React, { useState, useRef } from \"react\";\nimport { Table, Pagination, Badge } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport data from \"./tableData.js\";\n\nconst FeesCollection = () => {\n   const sort = 3;\n   let jobPagination = Array(Math.ceil(data.feeTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.feeTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.feeTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.feeTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Fees Collection</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.feeTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, ii) => (\n                                    <td key={ii}>\n                                       {da === \"Paid\" ? (\n                                          <Badge variant=\"success light\">\n                                             Paid\n                                          </Badge>\n                                       ) : da === \"Unpaid\" ? (\n                                          <Badge variant=\"danger light\">\n                                             Unpaid\n                                          </Badge>\n                                       ) : da === \"Panding\" ? (\n                                          <Badge variant=\"warning light\">\n                                             Panding\n                                          </Badge>\n                                       ) : (\n                                          da\n                                       )}\n                                    </td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.feeTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.feeTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.feeTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.feeTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-circle\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() =>\n                                    activePag.current > 1 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPagination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={\n                                       activePag.current === i ? \"active\" : \"\"\n                                    }\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPagination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default FeesCollection;\n","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\ProfileDatatable.js",["950"],"import React, { Fragment, useState, useRef } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\nimport data from \"./tableData.js\";\n\nconst ProfileDatatable = () => {\n   const sort = 3;\n   let jobPagination = Array(Math.ceil(data.profileTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.profileTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.profileTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.profileTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Profile Datatable</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.profileTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, i) => (\n                                    <Fragment key={i}>\n                                       <td>\n                                          {i === 0 ? (\n                                             <img\n                                                className=\"rounded-circle\"\n                                                width=\"35\"\n                                                src={da}\n                                                alt=\"\"\n                                             />\n                                          ) : (\n                                             <Fragment>\n                                                {da}\n                                                {i === 8 && (\n                                                   <div className=\"d-flex\">\n                                                      <Link\n                                                         to=\"#\"\n                                                         className=\"btn btn-primary shadow btn-xs sharp mr-1\"\n                                                      >\n                                                         <i className=\"fa fa-pencil\"></i>\n                                                      </Link>\n                                                      <Link\n                                                         to=\"#\"\n                                                         className=\"btn btn-danger shadow btn-xs sharp\"\n                                                      >\n                                                         <i className=\"fa fa-trash\"></i>\n                                                      </Link>\n                                                   </div>\n                                                )}\n                                             </Fragment>\n                                          )}\n                                       </td>\n                                    </Fragment>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.profileTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.profileTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.profileTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.profileTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-circle\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() =>\n                                    activePag.current > 1 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPagination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={\n                                       activePag.current === i ? \"active\" : \"\"\n                                    }\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPagination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ProfileDatatable;\n","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\SimpleDataTable.js",[],"D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\table\\BasicDatatable.js",["951"],"import React, { useState, useRef } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\nimport data from \"./tableData.js\";\nimport { Link } from \"react-router-dom\";\n\nconst BasicDatatable = () => {\n   const sort = 3;\n   let jobPaggination = Array(Math.ceil(data.jobsTable.data.length / sort))\n      .fill()\n      .map((_, i) => i + 1);\n\n   const activePag = useRef(0);\n   const jobData = useRef(\n      data.jobsTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      )\n   );\n   const [demo, setdemo] = useState();\n   const onClick = (i) => {\n      activePag.current = i;\n\n      jobData.current = data.jobsTable.data.slice(\n         activePag.current * sort,\n         (activePag.current + 1) * sort\n      );\n      setdemo(\n         data.jobsTable.data.slice(\n            activePag.current * sort,\n            (activePag.current + 1) * sort\n         )\n      );\n   };\n   return (\n      <div className=\"col-12\">\n         <div className=\"card\">\n            <div className=\"card-header\">\n               <h4 className=\"card-title\">Basic Datatable</h4>\n            </div>\n            <div className=\"card-body\">\n               <Table responsive className=\"w-100\">\n                  <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\n                     <table id=\"example\" className=\"display w-100 dataTable\">\n                        <thead>\n                           <tr role=\"row\">\n                              {data.jobsTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {jobData.current.map((d, i) => (\n                              <tr key={i}>\n                                 {d.map((da, i) => (\n                                    <td key={i}>{da}</td>\n                                 ))}\n                              </tr>\n                           ))}\n                        </tbody>\n                        <tfoot>\n                           <tr role=\"row\">\n                              {data.jobsTable.columns.map((d, i) => (\n                                 <th key={i}>{d}</th>\n                              ))}\n                           </tr>\n                        </tfoot>\n                     </table>\n                     <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <div className=\"dataTables_info\">\n                           Showing {activePag.current * sort + 1} to\n                           {data.jobsTable.data.length <\n                           (activePag.current + 1) * sort\n                              ? data.jobsTable.data.length\n                              : (activePag.current + 1) * sort}\n                           of {data.jobsTable.data.length} entries\n                        </div>\n                        <div className=\"dataTables_paginate paging_simple_numbers\">\n                           <Pagination\n                              className=\"pagination-primary pagination-circle\"\n                              size=\"lg\"\n                           >\n                              <li\n                                 className=\"page-item page-indicator \"\n                                 onClick={() =>\n                                    activePag.current > 1 &&\n                                    onClick(activePag.current - 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-left\" />\n                                 </Link>\n                              </li>\n                              {jobPaggination.map((number, i) => (\n                                 <Pagination.Item\n                                    className={\n                                       activePag.current === i ? \"active\" : \"\"\n                                    }\n                                    onClick={() => onClick(i)}\n                                 >\n                                    {number}\n                                 </Pagination.Item>\n                              ))}\n                              <li\n                                 className=\"page-item page-indicator\"\n                                 onClick={() =>\n                                    activePag.current + 1 <\n                                       jobPaggination.length &&\n                                    onClick(activePag.current + 1)\n                                 }\n                              >\n                                 <Link className=\"page-link\" to=\"#\">\n                                    <i className=\"la la-angle-right\" />\n                                 </Link>\n                              </li>\n                           </Pagination>\n                        </div>\n                     </div>\n                  </div>\n               </Table>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default BasicDatatable;\n","D:\\fineDine\\React-Koki-v1.0-06-April-2021\\React-Koki\\src\\jsx\\components\\bootstrap\\alertData.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\index.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\App.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\index.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\Footer.js",[],["952","953"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error400.js",[],["954","955"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error403.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\LockScreen.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error404.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error500.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Error503.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Login.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\Registration.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\pages\\ForgotPassword.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Dashboard\\Home\\Home.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\index.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\PageTitle.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\Header.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\NavHader.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\layouts\\nav\\SideBar.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\branches.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Companies\\company.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Products\\product.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\services\\serviceArea.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\units\\unit.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Inventories\\inventory.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Units\\unit.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Services\\serviceArea.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\category.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\subCategory.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Dashboard\\Profile\\Profile.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\PublicRoute.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\PrivateRoute.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\utils\\index.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\order.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\variants.js",[],["956","957"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\gallary.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\basket.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\Order.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Orders\\Basket.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\Gallary.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\Variants.js",["958"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\Branches.js",["959","960","961","962"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\n\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\"\r\n// import profile from \"../../../images/hellomenu/logo.svg\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport QRCode from \"qrcode.react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CDropdownMenu, CDropdownDivider, CDropdown, CDropdownToggle, CDropdownItem, CBreadcrumbItem, CButton, CCloseButton, COffcanvas, COffcanvasBody, COffcanvasHeader, COffcanvasTitle } from '@coreui/react'\r\nimport ReactWhatsapp from 'react-whatsapp';\r\nimport FloatingWhatsApp from 'react-floating-whatsapp'\r\n\r\nconst schema = yup.object().shape({\r\n    BrancheName: yup.string().required(\"This field is a required field\"),\r\n    currencyID: yup.string().required(\"This field is a required field\"),\r\n}).required();\r\nconst Branches = () => {\r\n    // validation\r\n\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // localization\r\n    const { t } = useTranslation();\r\n\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert a branch\r\n    const [branchstate, setBranchstate] = useState([]);\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        setBranchstate({ ...branchstate, [e.target.name]: e.target.value });\r\n    };\r\n    const saveBranch = (e) => {\r\n        // e.preventDefault();\r\n        axios.post(\"/api/InsertBranches\", branchstate).then(res => {\r\n            if (res.data.status === 200) {\r\n                setBranchstate([]);\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n            }\r\n        });\r\n    };\r\n    // edit code\r\n    const [editBranchstate, setEditBranchstate] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditBranchstate({ ...editBranchstate, [e.target.name]: e.target.value });\r\n    };\r\n    const editBranch = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditBranches/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditBranchstate(res.data.branch);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n        });\r\n\r\n    }\r\n    const updateBranch = (e) => {\r\n        e.preventDefault();\r\n        console.log(editBranchstate);\r\n\r\n        axios.post(\"/api/UpdateBranches\", editBranchstate).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setEditBranchstate([]);\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n\r\n    };\r\n    //for retriving data using laravel API\r\n    const [branchdata, setBranchdata] = useState([]);\r\n    const [currency, setCurrency] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    // for mobile\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/GetBranches').then(res => {\r\n            if (res.data.status === 200) {\r\n                setBranchdata(res.data.branches);\r\n            }\r\n            setLoading(false);\r\n        });\r\n        axios.get('/api/GetCurrencies').then(res => {\r\n            if (res.data.status === 200) {\r\n                setCurrency(res.data.fetchData);\r\n            }\r\n        });\r\n\r\n    }, [branchstate, editBranchstate]);\r\n    const [destinationLink, setDestinationLink] = useState(\"\");\r\n\r\n    const phone = (e, srcLink) => {\r\n        e.preventDefault();\r\n        setDestinationLink(srcLink);\r\n        setVisible(true)\r\n    }\r\n    const downloadQRCode = (e, id) => {\r\n        e.preventDefault();\r\n        // console.log(id)\r\n\r\n        const qrCodeURL = document.getElementById(id)\r\n            .toDataURL(\"image/png\")\r\n            .replace(\"image/png\", \"image/octet-stream\");\r\n        let aEl = document.createElement(\"a\");\r\n        aEl.href = qrCodeURL;\r\n        aEl.download = \"Branch_QR_Code.png\";\r\n        document.body.appendChild(aEl);\r\n        aEl.click();\r\n        document.body.removeChild(aEl);\r\n    }\r\n    var viewBranches_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n        //  <h4>{t('loading')}</h4>\r\n\r\n    } else {\r\n        viewBranches_HTMLTABLE =\r\n            branchdata.map((item, i) => {\r\n                return (\r\n                    <div className=\"col-xl-4 col-lg-6 col-sm-6\" key={item.id}>\r\n                        <div className=\"card overflow-hidden\">\r\n                            <div className=\"card-body\">\r\n                                {/* <div className=\"profile-photo\"> */}\r\n                                {/* <div className=\"primary\"> */}\r\n                                {/* <span className=\"text-left mx-2\">\r\n                                    <Link\r\n                                        to={`show-branch-details/${btoa(item.id)}`}\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        {t('public_link')}\r\n                                    </Link>\r\n                                </span> */}\r\n                                <div className=\"text-center\">\r\n                                    <Link to={{\r\n                                        pathname: `/category/${item.id}`,\r\n                                        branchName: item.BrancheName\r\n                                    }} >\r\n                                        <QRCode id={btoa(item.id)} level={'H'} size={256} fgColor=\"#f50b65\" value={`http://192.168.1.103:3000/show-branch-details/${btoa(item.id)}`} className=\"primary\" />\r\n                                        <Link\r\n                                            to=\"\"\r\n                                            onClick={(e) => downloadQRCode(e, btoa(item.id))}\r\n                                        > <p>{t('download_qr_code')}</p></Link>\r\n                                        <h3 className=\"mt-4 mb-1\"> {item.BrancheName}</h3>\r\n                                    </Link>\r\n\r\n                                    {/* </div> */}\r\n\r\n\r\n                                    {/* <img\r\n                                    src={profile}\r\n                                    width=\"100\"\r\n                                    className=\"img-fluid rounded-circle\"\r\n                                    alt=\"\"\r\n                                    /> */}\r\n                                    {/* </div> */}\r\n                                    <CDropdown variant=\"btn-group\">\r\n                                        {/* <CButton color=\"primary\" size=\"sm\"></CButton> */}\r\n                                        <CDropdownToggle color=\"primary\" size=\"lg\" split shape=\"rounded\" caret={false}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" />\r\n                                        </svg></CDropdownToggle>\r\n                                        <CDropdownMenu>\r\n\r\n                                            <div className=\"mx-3 my-2\">\r\n\r\n                                                <Link\r\n                                                    to=\"\"\r\n                                                    onClick={(e) => editBranch(e, item.id)}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                                        <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('edit')}</span>\r\n                                                </Link>\r\n                                            </div>\r\n\r\n                                            <div className=\"mx-3 my-2\">\r\n\r\n                                                <Link\r\n                                                    to=\"\"\r\n                                                    onClick={(e) => deleteBranch(e, item.id)}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                                        <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('delete')}</span>\r\n\r\n\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"mx-3 my-2\">\r\n\r\n                                                <Link\r\n                                                    to=\"\"\r\n                                                    data-toggle=\"tooltip\" data-placement=\"right\" title=\"To perview on mobile click this.\"\r\n                                                    onClick={(e) => phone(e, `http://192.168.1.103:3000/show-branch-details/${btoa(item.id)}`)}>\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-phone-fill\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M3 2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V2zm6 11a1 1 0 1 0-2 0 1 1 0 0 0 2 0z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('preview')}</span>\r\n                                                </Link>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div className=\"mx-3 my-2\">\r\n\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: `/service-area/${item.id}`,\r\n                                                        branchName: item.BrancheName\r\n                                                    }}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bounding-box\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M5 2V0H0v5h2v6H0v5h5v-2h6v2h5v-5h-2V5h2V0h-5v2H5zm6 1v2h2v6h-2v2H5v-2H3V5h2V3h6zm1-2h3v3h-3V1zm3 11v3h-3v-3h3zM4 15H1v-3h3v3zM1 4V1h3v3H1z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('services')}</span>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"mx-3 my-2\">\r\n                                                <Link\r\n                                                    to={{\r\n                                                        pathname: `/unit/${item.id}`,\r\n                                                        branchName: item.BrancheName\r\n                                                    }}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-border-style\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M1 3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1zm0 4a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5v-1zm0 4a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm8 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-4 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm8 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-4-4a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5v-1z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('units')}</span>\r\n                                                </Link>\r\n                                            </div>\r\n\r\n                                            <div className=\"mx-3 my-2\">\r\n                                                <Link\r\n\r\n                                                    to={{\r\n                                                        pathname: `/inventory/${item.id}`,\r\n                                                        branchName: item.BrancheName\r\n                                                    }}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-stack-overflow\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M12.412 14.572V10.29h1.428V16H1v-5.71h1.428v4.282h9.984z\" />\r\n                                                        <path d=\"M3.857 13.145h7.137v-1.428H3.857v1.428zM10.254 0 9.108.852l4.26 5.727 1.146-.852L10.254 0zm-3.54 3.377 5.484 4.567.913-1.097L7.627 2.28l-.914 1.097zM4.922 6.55l6.47 3.013.603-1.294-6.47-3.013-.603 1.294zm-.925 3.344 6.985 1.469.294-1.398-6.985-1.468-.294 1.397z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('inventory')}</span>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"mx-3 my-2\">\r\n                                                <Link\r\n\r\n                                                    to={{\r\n                                                        pathname: `/tables/${item.id}`,\r\n                                                        branchName: item.BrancheName\r\n                                                    }}\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-tablet\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M12 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h8zM4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H4z\" />\r\n                                                        <path d=\"M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('tables')}</span>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <span className=\"mx-3 my-2\">\r\n                                                <Link\r\n                                                    to={`show-branch-details/${btoa(item.id)}`}\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus-square-dotted\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M2.5 0c-.166 0-.33.016-.487.048l.194.98A1.51 1.51 0 0 1 2.5 1h.458V0H2.5zm2.292 0h-.917v1h.917V0zm1.833 0h-.917v1h.917V0zm1.833 0h-.916v1h.916V0zm1.834 0h-.917v1h.917V0zm1.833 0h-.917v1h.917V0zM13.5 0h-.458v1h.458c.1 0 .199.01.293.029l.194-.981A2.51 2.51 0 0 0 13.5 0zm2.079 1.11a2.511 2.511 0 0 0-.69-.689l-.556.831c.164.11.305.251.415.415l.83-.556zM1.11.421a2.511 2.511 0 0 0-.689.69l.831.556c.11-.164.251-.305.415-.415L1.11.422zM16 2.5c0-.166-.016-.33-.048-.487l-.98.194c.018.094.028.192.028.293v.458h1V2.5zM.048 2.013A2.51 2.51 0 0 0 0 2.5v.458h1V2.5c0-.1.01-.199.029-.293l-.981-.194zM0 3.875v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zM0 5.708v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zM0 7.542v.916h1v-.916H0zm15 .916h1v-.916h-1v.916zM0 9.375v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zm-16 .916v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zm-16 .917v.458c0 .166.016.33.048.487l.98-.194A1.51 1.51 0 0 1 1 13.5v-.458H0zm16 .458v-.458h-1v.458c0 .1-.01.199-.029.293l.981.194c.032-.158.048-.32.048-.487zM.421 14.89c.183.272.417.506.69.689l.556-.831a1.51 1.51 0 0 1-.415-.415l-.83.556zm14.469.689c.272-.183.506-.417.689-.69l-.831-.556c-.11.164-.251.305-.415.415l.556.83zm-12.877.373c.158.032.32.048.487.048h.458v-1H2.5c-.1 0-.199-.01-.293-.029l-.194.981zM13.5 16c.166 0 .33-.016.487-.048l-.194-.98A1.51 1.51 0 0 1 13.5 15h-.458v1h.458zm-9.625 0h.917v-1h-.917v1zm1.833 0h.917v-1h-.917v1zm1.834-1v1h.916v-1h-.916zm1.833 1h.917v-1h-.917v1zm1.833 0h.917v-1h-.917v1zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\r\n                                                    </svg>\r\n                                                    <span> {t('public_link')} </span>\r\n                                                </Link>\r\n                                            </span>\r\n                                        </CDropdownMenu>\r\n                                    </CDropdown>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete branch \r\n    const deleteBranch = (e, id) => {\r\n        e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteBranches/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                            // thisClicked.closest(\"tr\").remove();\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                        }\r\n                        setBranchstate([]);\r\n                    });\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem active>{t('Branches')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('Branches')} activeMenu={t('add_branch')} motherMenu={t('Branches')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveBranch)} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_branch')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('branch_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"BrancheName\")}\r\n                                className={\r\n                                    errors.BrancheName?.message\r\n                                        ? \"form-control  is-invalid\"\r\n                                        : \"form-control\"\r\n                                }\r\n                                placeholder={t('branch_name')}\r\n                                name=\"BrancheName\"\r\n                                onChange={handleInput}\r\n                                value={branchstate.BrancheName}\r\n                            />\r\n                            {errors.BrancheName?.message && (\r\n                                <div className=\"invalid-feedback\">{errors.BrancheName?.message}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('currency')}</strong> </label>\r\n                            <select type=\"text\"\r\n                                {...register(\"currencyID\")}\r\n\r\n                                className={\r\n                                    errors.currencyID?.message\r\n                                        ? \"form-control  is-invalid\"\r\n                                        : \"form-control\"\r\n                                }\r\n                                placeholder=\"currencyID\"\r\n\r\n                                name=\"currencyID\"\r\n                                onChange={handleInput}\r\n                                value={branchstate.currencyID}>\r\n                                <option value=''>{t('select_currency')}</option> )\r\n                                {\r\n                                    currency.map((item) =>\r\n                                        <option value={item.id} key={item.id}>{item.currency_name + ' / ' + item.currency_code}</option>)\r\n                                }</select>\r\n                            {errors.currencyID?.message && (\r\n                                <div className=\"invalid-feedback\">{errors.currencyID?.message}</div>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateBranch} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_branch')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('id')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled=\"disabled\"\r\n                                className=\"form-control\"\r\n                                // placeholder=\"Branch Name\"\r\n                                name=\"id\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editBranchstate.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('branch_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('branch_name')}\r\n                                name=\"BrancheName\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editBranchstate.BrancheName}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('currency')}</strong> </label>\r\n                            <select type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"currencyID\"\r\n                                name=\"currencyID\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editBranchstate.currencyID}>\r\n                                <option value=''>{t('select_currency')}</option> )\r\n                                {\r\n                                    currency.map((item) =>\r\n                                        <option value={item.id} key={item.id}>{item.currency_name + ' / ' + item.currency_code}</option>)\r\n                                }</select>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* mobile modal */}\r\n\r\n            {/* <CButton onClick={() =>}>Toggle offcanvas</CButton> */}\r\n            <COffcanvas placement=\"end\" className=\"fade bd-example-modal-lg\" scroll visible={visible} onHide={() => setVisible(false)} >\r\n                <COffcanvasHeader >\r\n                    <COffcanvasTitle>{t('display_mobile')}</COffcanvasTitle>\r\n                    <CCloseButton className=\"text-reset\" onClick={() => setVisible(false)} />\r\n                </COffcanvasHeader>\r\n                <COffcanvasBody >\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"iphone\">\r\n                            <div className=\"power\"></div>\r\n                            <div className=\"lock\"></div>\r\n                            <div className=\"volume up\"></div>\r\n                            <div className=\"volume down\"></div>\r\n                            <div className=\"camera\"></div>\r\n                            <div className=\"speaker\"></div>\r\n                            <div className=\"screen\">\r\n                                <iframe src={destinationLink} height=\"100%\" width=\"100%\" title=\"Devices\"></iframe>\r\n                            </div>\r\n                            <div className=\"button\">\r\n                                <div className=\"square\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </COffcanvasBody>\r\n            </COffcanvas>\r\n            <div className=\"row\" >\r\n                {viewBranches_HTMLTABLE}\r\n                <div className=\"col-xl-4 col-lg-6 col-sm-6 \" >\r\n                    <div className=\"card overflow-hidden \"  >\r\n                        <div className=\"card-body d-flex justify-content-center text-center\" style={{ border: \"2px dashed red\" }}>\r\n                            <div className=\"align-self-center text-center\">\r\n                                <button type=\"button\" className=\"btn btn-outline-primary\"\r\n                                    onClick={() => setModalCentered(true)}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                                    </svg>\r\n                                    {t('add_branch')}\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ReactWhatsapp number=\"93744647067\" message=\"Hello World!!!\" >WhatsApps</ReactWhatsapp>\r\n            </div>\r\n            <div className=\"App\">\r\n                <FloatingWhatsApp\r\n                    phoneNumber=\"93744647067\"\r\n                    accountName=\"Mohammad Faiq\"\r\n                    allowClickAway\r\n                    // notification\r\n                    // notificationDelay={60000} // 1 minute\r\n                    // notificationSound\r\n                />\r\n                \r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Branches;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Products\\Product.js",[],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Companies\\Company.js",["963"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst Company = () => {\r\n    // for validation start\r\n    const schema = yup.object().shape({\r\n        company: yup.string().required(),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    //   validation end\r\n\r\n    // for localization\r\n    const { t } = useTranslation();\r\n\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert section\r\n    const [companyState, setCompanyState] = useState([]);\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        setCompanyState({ ...companyState, [e.target.name]: e.target.value });\r\n    };\r\n    const saveCompany = (e) => {\r\n        axios.post(\"/api/InsertCompanies\", companyState).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setCompanyState('');\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n\r\n    };\r\n    // edit code\r\n    const [editCompanystate, setEditCompanystate] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditCompanystate({ ...editCompanystate, [e.target.name]: e.target.value });\r\n    };\r\n    const editCompany = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditCompanies/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditCompanystate(res.data.company);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    const updateCompany = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateCompanies\", editCompanystate).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setEditCompanystate('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/GetCompanies').then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [companyState, editCompanystate]);\r\n\r\n    var viewCompanies_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\"><span className=\"sr-only\" style={{position: 'fixed',top: '50%',  left: '50%'}}>{t('loading')}</span></div>\r\n    } else {\r\n        viewCompanies_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>{item.company}</td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={(e) => editCompany(e, item.id)} className=\"btn btn-outline-danger btn-sm\">{t('edit')}</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"button\" onClick={(e) => deleteCompany(e, item.id)} className=\"btn btn-outline-warning btn-sm\">{t('delete')}</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete section \r\n    const deleteCompany = (e, id) => {\r\n        // e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteCompanies/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(res.data.message, {\r\n                                icon: \"success\",\r\n                            });\r\n                            // swal(\"Success\",,\"success\");\r\n                            // thisClicked.closest(\"tr\").remove();\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                        setCompanyState([]);\r\n\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem className=\"font-weight-bold\" href=\"/branches\" >{t('Branches')}</CBreadcrumbItem>\r\n                <CBreadcrumbItem active>{t('companies')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('companies')} activeMenu={t('add_company')} motherMenu={t('companies')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveCompany)} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_company')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('user_id')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('user_id')}\r\n                                name=\"user_id\"\r\n                                required\r\n                                disabled\r\n                                onChange={handleInput}\r\n                                value={localStorage.getItem('auth_id')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('company_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"company\")}\r\n                                className=\"form-control\"\r\n                                placeholder={t('company_name')}\r\n                                name=\"company\"\r\n                                onChange={handleInput}\r\n                                value={companyState.company}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.company?.message}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateCompany} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_company')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('id')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled=\"disabled\"\r\n                                className=\"form-control\"\r\n                                // placeholder=\"Company Name\"\r\n                                name=\"id\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editCompanystate.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('company_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('company_name')}\r\n                                name=\"company\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editCompanystate.company}\r\n                            />\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('companies')} </h4>\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 mr-2\"\r\n                                    onClick={() => setModalCentered(true)} >\r\n                                    {t('add_company')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')} </th>\r\n                                            <th>{t('company_name')} </th>\r\n                                            <th>{t('actions')} </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewCompanies_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Company;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\Category.js",["964"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n/// Bootstrap\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem, CDropdown, CDropdownToggle, CDropdownMenu } from '@coreui/react'\r\n\r\nconst Category = (props) => {\r\n    const schema = yup.object().shape({\r\n        CategoryName: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    // insert modal\r\n    const id = props.match.params.id;\r\n\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert a section\r\n\r\n    const [categoryInsert, setCategoryInsert] = useState({\r\n        CategoryName: '',\r\n        branchID: id,\r\n    });\r\n    const [imageState, setImageState] = useState([]);\r\n\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setCategoryInsert({ ...categoryInsert, [e.target.name]: e.target.value });\r\n    };\r\n    const handleImage = (e) => {\r\n        setImageState({ ...imageState, CategoryIcon: e.target.files[0] });\r\n    };\r\n    const saveMenu = (e) => {\r\n        // e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('CategoryIcon', imageState.CategoryIcon);\r\n        formData.append('CategoryName', categoryInsert.CategoryName);\r\n        formData.append('branchID', categoryInsert.branchID);\r\n\r\n        axios.post(\"/api/InsertCategories\", formData).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setCategoryInsert({\r\n                    CategoryName: '',\r\n                    branchID: id,\r\n                });\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n\r\n    };\r\n    // edit code\r\n    const [editMenu, setEditMenu] = useState('');\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditMenu({ ...editMenu, [e.target.name]: e.target.value });\r\n    };\r\n    const fetchMenus = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditCategories/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditMenu(res.data.menu);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    const updateMenu = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('CategoryIcon', imageState.CategoryIcon);\r\n        formData.append('CategoryName', editMenu.CategoryName);\r\n        formData.append('branchID', editMenu.branchID);\r\n        formData.append('id', editMenu.id);\r\n\r\n\r\n        axios.post(\"/api/UpdateCategories\", formData).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.status);\r\n                setEditMenu('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n\r\n            }\r\n        });\r\n\r\n    };\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/GetCategories/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [categoryInsert, editMenu, id]);\r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\"><span className=\"sr-only\" >{t('loading')}</span></div>\r\n    } else {\r\n        viewProducts_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <Col xl={3} key={item.id}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h4 className=\"card-intro-title\">{item.CategoryName}</h4>\r\n                            </Card.Header>\r\n                            <Card.Body className=\"p-4\">\r\n                            <Link to={{pathname: `/sub-category/${item.id}`, CategoryName: item.CategoryName}}>\r\n                                <span>\r\n                                <img\r\n                                    style={{ height: '100px', objectFit: 'contain' }}\r\n                                    src={`http://localhost:8000/images/catagories/${item.CategoryIcon}`}\r\n                                    className=\"d-block w-40\"\r\n                                    alt=\"Menu\"\r\n                                />\r\n                                </span>\r\n                                </Link>\r\n                            </Card.Body>\r\n\r\n                            <Card.Footer className=\"text-center\">\r\n                                <CDropdown variant=\"btn-group\">\r\n                                    {/* <CButton color=\"primary\" size=\"sm\"></CButton> */}\r\n                                    <CDropdownToggle color=\"primary\" size=\"sm\"  shape=\"rounded\" caret={false}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-three-dots\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\" />\r\n                                    </svg>\r\n                                    </CDropdownToggle>\r\n                                    <CDropdownMenu>\r\n                                        <div className=\"mx-3 my-2\">\r\n\r\n                                            <Link\r\n                                                to=\"\"\r\n                                                onClick={(e) => fetchMenus(e, item.id)}\r\n                                            >\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                                </svg>\r\n                                                <span> {t('edit')}</span>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div className=\"mx-3 my-2\">\r\n\r\n                                            <Link\r\n                                                to=\"\"\r\n                                                onClick={(e) => deleteMenu(e, item.id)}\r\n\r\n                                            >\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                                    <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                                </svg>\r\n                                                <span> {t('delete')}</span>\r\n\r\n\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"mx-3 my-2\">\r\n\r\n                                            <Link to={{\r\n                                                pathname: `/sub-category/${item.id}`,\r\n                                                CategoryName: item.CategoryName\r\n                                            }}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-subtract\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M0 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-2H2a2 2 0 0 1-2-2V2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H2z\" />\r\n                                                </svg>\r\n                                                <span> {t('sub_category')}</span>\r\n\r\n                                            </Link>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </CDropdownMenu>\r\n                                </CDropdown>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete section \r\n    const deleteMenu = (e, id) => {\r\n        e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteCategories/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            setCategoryInsert([]);\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                            // thisClicked.closest(\"tr\").remove();\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem className=\"font-weight-bold\" href=\"/branches\">{t('Branches')}</CBreadcrumbItem>\r\n                <CBreadcrumbItem active>{t('categories')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('categories')} activeMenu={t('add_category')} motherMenu={t('categories')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveMenu)} method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_category')} </Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('branch_name')}: {props.location.branchName}</strong> </label>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('category_icon')}</strong> </label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"custom-file\">\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('category_icon')}\r\n                                        name=\"CategoryIcon\"\r\n                                        required\r\n                                        onChange={handleImage}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('category_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"CategoryName\")}\r\n                                className=\"form-control\"\r\n                                placeholder={t('category_name')}\r\n                                name=\"CategoryName\"\r\n\r\n                                onChange={handleInput}\r\n                                value={categoryInsert.CategoryName}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.CategoryName?.message}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')}</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateMenu} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_category')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('edit_category')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                disabled=\"disabled\"\r\n                                className=\"form-control\"\r\n                                name=\"id\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editMenu.id}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('category_icon')}</strong> </label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"custom-file\">\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('category_icon')}\r\n                                        name=\"CategoryIcon\"\r\n\r\n                                        onChange={handleImage}\r\n                                    />\r\n                                    <img src={`http://localhost:8000/images/catagories/${editMenu.CategoryIcon}`} width=\"70\" alt=\" \" />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('category_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('category_name')}\r\n                                name=\"CategoryName\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editMenu.CategoryName}\r\n                            />\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <Row>\r\n                {viewProducts_HTMLTABLE}\r\n                <div className=\"col-xl-3 col-lg-4 col-sm-4 \" >\r\n                    <div className=\"card overflow-hidden \"  >\r\n                        <div className=\"card-body d-flex justify-content-center text-center\" style={{ border: \"2px dashed red\" }}>\r\n                            <div className=\"align-self-center text-center\">\r\n                                <button type=\"button\" className=\"btn btn-outline-primary\"\r\n                                    onClick={() => setModalCentered(true)}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                                    </svg>\r\n                                    {t('add_category')}\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Category;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Services\\ServiceArea.js",["965"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst ServiceArea = (props) => {\r\n    // validation\r\n    const schema = yup.object().shape({\r\n        AreaName: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    //ID\r\n    const id = props.match.params.id;\r\n\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert a section\r\n    const [serviceAreaInsert, setServiceAreaInsert] = useState({\r\n        AreaName: '',\r\n        BranchID: id\r\n    });\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setServiceAreaInsert({ ...serviceAreaInsert, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const saveServiceAreas = (e) => {\r\n        // e.preventDefault();\r\n        axios.post(\"/api/InsertServicAreas\", serviceAreaInsert).then(res => {\r\n            if (res.data.status === 200) {\r\n                setServiceAreaInsert({\r\n                    AreaName: '',\r\n                    BranchID: id\r\n                });\r\n                reset();\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n    };\r\n    // edit code\r\n    const [editServiceAreas, setEditServiceAreas] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditServiceAreas({ ...editServiceAreas, [e.target.name]: e.target.value });\r\n    };\r\n    const fetchServiceArea = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditServiceAreas/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditServiceAreas(res.data.menu);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    const updateServiceArea = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateServiceAreas\", editServiceAreas).then(res => {\r\n            if (res.data.status === 200) {\r\n                console.log(res.data.status);\r\n                setEditServiceAreas('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/GetServiceAreas/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [serviceAreaInsert, editServiceAreas, id]);\r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n        viewProducts_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <td>{i + 1}</td>\r\n\r\n                        <td> {item.AreaName}</td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={(e) => fetchServiceArea(e, item.id)} className=\"btn btn-outline-danger btn-sm\">{t('edit')}</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"button\" onClick={(e) => deleteServiceArea(e, item.id)} className=\"btn btn-outline-warning btn-sm\">{t('delete')}</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete section \r\n    const deleteServiceArea = (e, id) => {\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteServiceAreas/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                            setServiceAreaInsert({\r\n                                AreaName: '',\r\n                                BranchID: id\r\n                            })\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem className=\"font-weight-bold\" href=\"/branches\" >{t('Branches')}</CBreadcrumbItem>\r\n                <CBreadcrumbItem active>{t('services_area')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('services_area')} activeMenu={t('add_service_area')} motherMenu={t('services_area')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveServiceAreas)} method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_service_area')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('branch_name')}: {props.location.branchName}</strong> </label>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('service_area')}</strong> </label>\r\n                            <textarea\r\n                                type=\"text\"\r\n                                {...register(\"AreaName\")}\r\n                                className=\"form-control\"\r\n                                placeholder={t('service_area')}\r\n                                name=\"AreaName\"\r\n                                onChange={handleInput}\r\n                                value={serviceAreaInsert.AreaName}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.AreaName?.message}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')}</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateServiceArea} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_service_area')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('service_area')}</strong> </label>\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('service_area')}\r\n                                name=\"AreaName\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editServiceAreas.AreaName}\r\n                            />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('service_area')}</h4>\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 mr-2\"\r\n                                    onClick={() => setModalCentered(true)} >\r\n                                    {t('add_service_area')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')}</th>\r\n                                            <th>{t('service_area')}</th>\r\n                                            <th>{t('actions')}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewProducts_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ServiceArea;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Categories\\SubCategory.js",["966"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Units\\Unit.js",["967"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\n\r\nconst Unit = (props) => {\r\n    // validation\r\n    const schema = yup.object().shape({\r\n        UnitName: yup.string().required(\"This field is a required field\"),\r\n    }).required();\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    // ID\r\n    const id = props.match.params.id;\r\n    // insert modal\r\n    const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // insert a section\r\n    const [unitInsert, setUnitInsert] = useState({\r\n        UnitName: '',\r\n        brancheID: id\r\n    });\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setUnitInsert({ ...unitInsert, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const saveUnit = (e) => {\r\n        // e.preventDefault();\r\n        axios.post(\"/api/InsertUnits\", unitInsert).then(res => {\r\n            if (res.data.status === 200) {\r\n                setUnitInsert({\r\n                    UnitName: '',\r\n                    brancheID: id\r\n                });\r\n                reset();\r\n\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            }\r\n        });\r\n    };\r\n    // edit code\r\n    const [editUnit, setEditUnit] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditUnit({ ...editUnit, [e.target.name]: e.target.value });\r\n    };\r\n    const fetchUnit = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditUnits/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditUnit(res.data.unit);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    const updateUnit = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateUnit\", editUnit).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditUnit('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/GetUnits/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                // console.log(res.data.fetchData);\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [unitInsert, editUnit, id]);\r\n\r\n    var viewProducts_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\">{t('loading')}</span></div>\r\n    } else {\r\n        viewProducts_HTMLTABLE =\r\n            fetchData.map((item, i) => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <td>{i + 1}</td>\r\n\r\n                        <td> {item.UnitName}</td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={(e) => fetchUnit(e, item.id)} className=\"btn btn-outline-danger btn-sm\">{t('edit')}</button>&nbsp;&nbsp;&nbsp;\r\n                            <button type=\"button\" onClick={(e) => deleteUnit(e, item.id)} className=\"btn btn-outline-warning btn-sm\">{t('delete')}</button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n\r\n    }\r\n    // delete section \r\n    const deleteUnit = (e, id) => {\r\n        e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteUnits/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                            setUnitInsert({\r\n                                UnitName: '',\r\n                                brancheID: id\r\n                            });\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <Fragment>\r\n             <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem className=\"font-weight-bold\" href=\"/branches\" >{t('Branches')}</CBreadcrumbItem>\r\n                <CBreadcrumbItem active>{t('units')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('units')} activeMenu={t('add_unit')} motherMenu={t('units')} /> */}\r\n            {/* <!-- Insert  Modal --> */}\r\n            <Modal className=\"fade\" show={modalCentered}>\r\n                <Form onSubmit={handleSubmit(saveUnit)} method=\"POST\" encType=\"multipart/form-data\">\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('add_unit')}</Modal.Title>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('branch_name')}: {props.location.branchName}</strong> </label>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('unit_name')} </strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register(\"UnitName\")}\r\n\r\n                                className=\"form-control\"\r\n                                placeholder={t('unit_name')}\r\n                                name=\"UnitName\"\r\n                                onChange={handleInput}\r\n                                value={unitInsert.UnitName}\r\n                            />\r\n                            <div className=\"text-danger\">\r\n                                {errors.UnitName?.message}\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('save')}</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade\" show={editmodalCentered}>\r\n                <Form onSubmit={updateUnit} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title>{t('edit_unit')} </Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"mb-1 \"> <strong>{t('unit_name')}</strong> </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={t('unit_name')}\r\n                                name=\"UnitName\"\r\n                                required\r\n                                onChange={editHandleInput}\r\n                                value={editUnit.UnitName}\r\n                            />\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">{t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('units')}</h4>\r\n                            </div>\r\n                            <div className=\"dropdown\">\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 mr-2\"\r\n                                    onClick={() => setModalCentered(true)} >\r\n                                    {t('add_unit')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')}</th>\r\n                                            <th>{t('unit_name')}</th>\r\n                                            <th>{t('actions')}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewProducts_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Unit;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Inventories\\Inventory.js",["968","969","970","971","972"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PageTItle from \"../../layouts/PageTitle\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\nimport { CSmartTable, CBadge, CCollapse, CButton, CCardBody } from '@coreui/react-pro'\r\nconst Inventory = (props) => {\r\n    // for localization\r\n    const { t } = useTranslation();\r\n    const id = props.match.params.id;\r\n    // insert modal\r\n    // const [modalCentered, setModalCentered] = useState(false);\r\n    // edit modal\r\n    const [editmodalCentered, setEditModalCentered] = useState(false);\r\n    // edit code\r\n    const [editIventory, setEditInventory] = useState([]);\r\n    const editHandleInput = (e) => {\r\n        e.persist();\r\n        setEditInventory({ ...editIventory, [e.target.name]: e.target.value });\r\n    };\r\n    const fetchUnit = (e, id) => {\r\n        e.preventDefault();\r\n        axios.get(`/api/EditInventory/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditInventory(res.data.intenvtory);\r\n                setEditModalCentered(true);\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n            }\r\n        });\r\n\r\n    }\r\n    const updateInventory = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"/api/UpdateInventory\", editIventory).then(res => {\r\n            if (res.data.status === 200) {\r\n                setEditInventory('');\r\n                swal(\"Success\", res.data.message, \"success\");\r\n                setEditModalCentered(false)\r\n                //  this.props.history.push(\"/\")\r\n            } else if (res.data.status === 404) {\r\n                swal(\"Error\", res.data.message, \"error\");\r\n\r\n            }\r\n        });\r\n    };\r\n    //for retriving data using laravel API\r\n    const [fetchData, setFetchData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/GetInventory/${id}`).then(res => {\r\n            if (res.data.status === 200) {\r\n                setFetchData(res.data.fetchData);\r\n            }\r\n            setLoading(false);\r\n        });\r\n\r\n    }, [editIventory, id]);\r\n    const columns = [\r\n        {\r\n            key: 'variant_name',\r\n        },\r\n        {\r\n            key: 'Buyingquantity',\r\n        },\r\n        {\r\n            key: 'SellingQuantity',\r\n        },\r\n        {\r\n            key: 'buyingPrice',\r\n        },\r\n        {\r\n            key: 'sellingPrice',\r\n        },\r\n        {\r\n            key: 'actions',\r\n        }\r\n\r\n\r\n    ]\r\n\r\n    var viewInventory_HTMLTABLE = \"\";\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-primary \" role=\"status\" ><span className=\"sr-only\" >{t('loading')}</span></div>\r\n    } else {\r\n        viewInventory_HTMLTABLE =\r\n            // fetchData.map((item, i) => {\r\n                // return (\r\n                    <CSmartTable\r\n                activePage={1}\r\n                cleaner\r\n                // clickableRows\r\n                columns={columns}\r\n                // columnFilter\r\n                columnSorter\r\n                // footer\r\n                items={fetchData}\r\n                itemsPerPageSelect\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedColumns={{\r\n                    actions: (item) => {\r\n                        return (\r\n                            <td>\r\n                                <Link\r\n                                    to=\"\"\r\n                                    onClick={(e) => fetchUnit(e, item.id)}\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                    </svg>\r\n                                </Link>\r\n                                <span> | </span>\r\n                                <Link\r\n                                    to=\"\"\r\n                                    onClick={(e) => deleteInventory(e, item.id)}\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                    </svg>\r\n                                </Link>\r\n                            </td>\r\n                        )\r\n                    },\r\n                }}\r\n                // selectable\r\n                // sorterValue={{ column: 'name', state: 'asc' }}\r\n                tableFilter\r\n                // tableHeadProps={{\r\n                //   color: 'primary',\r\n                // }}\r\n                tableProps={{\r\n                      striped: true,\r\n                    hover: true,\r\n                }}\r\n            />\r\n            //     )\r\n            // })\r\n\r\n    }\r\n    // delete section \r\n    const deleteInventory = (e, id) => {\r\n        e.preventDefault();\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: [t('cancel'), t('confirm')],\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    axios.delete(`/api/DeleteInventory/${id}`).then(res => {\r\n                        if (res.data.status === 200) {\r\n                            setEditInventory([]);\r\n                            swal(\"Success\", res.data.message, \"success\");\r\n                        } else if (res.data.status === 404) {\r\n                            swal(\"Error\", res.data.message, \"error\");\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    swal(\"Your Data is safe now!\");\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <CBreadcrumb style={{ \"--cui-breadcrumb-divider\": \"'>'\" }}>\r\n                <CBreadcrumbItem className=\"font-weight-bold\" href=\"/branches\" >{t('Branches')}</CBreadcrumbItem>\r\n                <CBreadcrumbItem active>{t('inventory')}</CBreadcrumbItem>\r\n            </CBreadcrumb>\r\n            {/* <PageTItle headingPara={t('inventory')} activeMenu={t('add_variant')} motherMenu={t('inventory')} /> */}\r\n\r\n            {/* Edit Modal */}\r\n            <Modal className=\"fade bd-example-modal-lg\" show={editmodalCentered} size=\"lg\">\r\n                <Form onSubmit={updateInventory} method=\"POST\" >\r\n                    <Modal.Header>\r\n                        <Modal.Title> {t('edit_inventory')} </Modal.Title>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"\"\r\n                            className=\"close\"\r\n                        >\r\n                            <span>&times;</span>\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"row\" >\r\n                            <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('variant_name')}</strong> </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('variant_name')}\r\n                                        name=\"variant_name\"\r\n                                        required\r\n                                        onChange={editHandleInput}\r\n                                        value={editIventory.variant_name}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('buying_quantity')}</strong> </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('buying_quantity')}\r\n                                        name=\"Buyingquantity\"\r\n                                        required\r\n                                        onChange={editHandleInput}\r\n                                        value={editIventory.Buyingquantity}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('buying_price')}</strong> </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('buying_price')}\r\n                                        name=\"buyingPrice\"\r\n                                        required\r\n                                        onChange={editHandleInput}\r\n                                        value={editIventory.buyingPrice}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>{t('selling_price')}</strong> </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder={t('selling_price')}\r\n                                        name=\"sellingPrice\"\r\n                                        required\r\n                                        onChange={editHandleInput}\r\n                                        value={editIventory.sellingPrice}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"col-xl-6 col-xxl-6 col-lg-6 col-sm-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"mb-1 \"> <strong>SellingQuantity</strong> </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"SellingQuantity\"\r\n                                        name=\"SellingQuantity\"\r\n                                        required\r\n                                        onChange={editHandleInput}  \r\n                                        value={editIventory.SellingQuantity}\r\n                                    />\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            onClick={() => setEditModalCentered(false)}\r\n                            variant=\"danger light\"\r\n                        >\r\n                            {t('close')}\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\"> {t('update')} </Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n            {/* <div className=\"row\" >\r\n                <div className=\"col-xl-12 col-xxl-12 col-lg-12 col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div>\r\n                                <h4 className=\"card-title mb-2\">{t('inventory')}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive \">\r\n                                <table className=\"table \">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{t('number')}</th>\r\n                                            <th>{t('variant_name')}</th>\r\n                                            <th>{t('buying_quantity')}</th>\r\n                                            <th>{t('selling_quantity')}</th>\r\n                                            <th>{t('buying_price')}</th>\r\n                                            <th>{t('selling_price')}</th>\r\n                                            <th>{t('actions')}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {viewProducts_HTMLTABLE}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            {viewInventory_HTMLTABLE}\r\n            \r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default Inventory;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\ShowBranchDetails.js",["973","974","975","976","977","978"],"import React, { useEffect, useState, Fragment } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link as RLink } from \"react-router-dom\"\r\n\r\nimport 'react-awesome-slider/dist/styles.css';\r\nimport { Row, Col, Card, Tab, Button } from \"react-bootstrap\";\r\n\r\nimport { CContainer, CFooter, CLink, CNavbar, CNavbarBrand, CNavbarToggler, CCollapse, CNavbarNav, CNavItem, CNavLink } from '@coreui/react'\r\n\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n// import InfiniteScroll from 'react-infinite-scroller';\r\nimport Slider from \"react-slick\";\r\nimport { Link } from 'react-scroll'\r\n// import Button from \"@restart/ui/esm/Button\";\r\n\r\nvar hold = 1;\r\n\r\nconst ShowBranchDetails = (props) => {\r\n   const { t } = useTranslation();\r\n   const branchId = atob(props.match.params.id);\r\n   // atob(branchNameId)\r\n   const [loading, setLoading] = useState(true);\r\n   const [data, setData] = useState([])\r\n   const [categories, setCategories] = useState([])\r\n   const [subcategories, setSubCategories] = useState([])\r\n   // const [products, setProducts]= useState([])\r\n   const [variants, setVariants] = useState([])\r\n   const [activeCategory, setActiveCategory] = useState(0)\r\n   const [activeSubCategory, setActiveSubCategory] = useState(0)\r\n\r\n   useEffect(() => {\r\n      axios.get(`/api/GetBranchForShow/${branchId}`).then(res => {\r\n         if (res.data.status === 200) {\r\n            setData(res.data.data);\r\n         }\r\n         setLoading(false);\r\n      });\r\n      axios.get(`/api/GetCategories/${branchId}`).then(res => {\r\n         if (res.data.status === 200) {\r\n            setCategories(res.data.fetchData);\r\n            // setActiveCategory(res.data.fetchData[0].id);\r\n         }\r\n\r\n      });\r\n      axios.get(`/api/getSubCateBasedOnBranch/${branchId}`).then(res => {\r\n         if (res.data.status === 200) {\r\n            // console.log(res.data.fetchData);\r\n            axios.get(`/api/GetProductsBasedOnSubCategory/${res.data.fetchData[0].sub_id}`).then(res => {\r\n               if (res.data.status === 200) {\r\n                  setVariants(res.data.fetchData);\r\n\r\n                  setActiveSubCategory(res.data.fetchData[0].sub_category_id)\r\n               }\r\n            });\r\n            setSubCategories(res.data.fetchData);\r\n            // setProducts([]);\r\n            // setVariants([]);\r\n         }\r\n      });\r\n\r\n   }, [branchId])\r\n   const [changeState, setChangeState] = useState(true)\r\n   const fetchMoreData = () => {\r\n      if (hold < subcategories.length) {\r\n         axios.get(`/api/getSubCateBasedOnBranch/${branchId}`).then(res => {\r\n            if (res.data.status === 200) {\r\n               // console.log(res.data.fetchData);\r\n               setActiveSubCategory(res.data.fetchData[hold].sub_id)\r\n               axios.get(`/api/GetProductsBasedOnSubCategory/${res.data.fetchData[hold].sub_id}`).then(res => {\r\n                  if (res.data.status === 200) {\r\n                     if (res.data.fetchData.length === 0) {\r\n                        hold = hold + 1\r\n                        // console.log(res.data.fetchData);\r\n                        fetchMoreData()\r\n                     } else {\r\n                        hold = hold + 1\r\n                        setVariants(variants.concat(res.data.fetchData))\r\n\r\n                     }\r\n\r\n\r\n                  }\r\n\r\n               });\r\n\r\n               setSubCategories(res.data.fetchData);\r\n\r\n\r\n            }\r\n         });\r\n      } else {\r\n         setChangeState(false);\r\n      }\r\n      // console.log(hold);\r\n\r\n\r\n   }\r\n   const filterCategory = (cateId) => {\r\n      axios.get(`/api/GetSubCategories/${cateId}`).then(res => {\r\n         if (res.data.status === 200) {\r\n            // console.log(res.data.fetchData);\r\n            setSubCategories(res.data.fetchData);\r\n            // console.log(subcategories.length);\r\n            // setProducts([]);\r\n            // setVariants([]);\r\n         }\r\n      });\r\n      setActiveCategory(cateId);\r\n\r\n   }\r\n   const filterProducts = (subCateID) => {\r\n      //  const updateItem=variants.filter((curElem) => {\r\n      //    return curElem.sub_category_id===subCateID;\r\n      // })\r\n      // setVariants(updateItem);\r\n\r\n      // axios.get(`/api/GetProductsBasedOnSubCategory/${subCateID}`).then(res => {\r\n      //    if (res.data.status === 200) {\r\n      //       setVariants(res.data.fetchData)\r\n      //    }\r\n      // });\r\n      setActiveSubCategory(subCateID);\r\n   }\r\n   // const filterVariants = (productID)=>{\r\n   //    axios.get(`/api/Getvariations/${productID}`).then(res => {\r\n   //       if(res.data.status === 200){\r\n   //          setVariants(res.data.fetchData);\r\n   //       }\r\n   //     });\r\n\r\n   // }\r\n\r\n   const [quantity, setQuantity] = useState(1);\r\n   const [show, setShow] = useState(false);\r\n   const handleDecrement = (e,variant_id) => {\r\n      e.preventDefault();\r\n\r\n      if (quantity > 1) {\r\n         setQuantity(prevCount => prevCount - 1);\r\n      } else if (quantity === 1) {\r\n         setShow(false)\r\n      }\r\n   }\r\n   const handelIncrement = (e,variant_id) => {\r\n      e.preventDefault();\r\n         variants.map((item) =>{\r\n          return (item.variantID === variant_id ? setQuantity(prevCount => prevCount + 1): item)\r\n         }\r\n      )\r\n\r\n      // setQuantity(prevCount => prevCount + 1);\r\n   }\r\n\r\n\r\n   const [visible, setVisible] = useState(false)\r\n   var viewShow_HTMLTABLE = \"\";\r\n   if (loading) {\r\n      return <div className=\"spinner-border text-primary \" role=\"status\" style={{ position: 'fixed', top: '50%', left: '50%' }}><span className=\"sr-only\">{t('loading')}</span></div>\r\n   } else {\r\n      var value;\r\n      viewShow_HTMLTABLE =\r\n         variants.map((item, i) => {\r\n\r\n            return (\r\n               <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-4 col-xs-4 col-half-offset\" key={i} id={item.SubCategoryName} >\r\n                  {item.ProductName === value ? <h5 className=\"row mt-2 mx-3 invisible\">{item.ProductName}</h5> : <h5 className=\"row mt-2 mx-3 text-uppercase font-weight-bold text-black\">{item.ProductName}</h5>}\r\n                  <h6 className=\"d-none\">{value = item.ProductName}</h6>\r\n                  <div>\r\n                     <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                           <div className=\"new-arrival-product\">\r\n                              <RLink to={`/variant-details/${item.variantID}`} className=\"text-black\">\r\n                                 <div className=\"text-center bg-white\">\r\n                                    <img className=\"img-fluid w-100 img-thumbnail\" style={{ height: '100px', objectFit: 'contain' }} src={`http://192.168.1.103/yesilik1/public/images/variants_pics/${item.PicturesLocation}`} alt=\"\" />\r\n\r\n\r\n\r\n                                 </div>\r\n                                 <div className=\"new-arrival-content text-center mt-3\">\r\n                                    <h4>\r\n                                       {item.VariationName}\r\n                                    </h4>\r\n\r\n                                    <span className=\"price\">{item.CurrentPrice + ' ' + item.currency_code}</span>\r\n                                    <s className=\"ms-2\">{item.OldPrice + ' ' + item.currency_code}</s>\r\n                                 </div>\r\n                              </RLink>\r\n                              <RLink onClick={() => setShow(!show)} className={`${show === false ? \" \" : \"d-none\"}`}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-plus-square-dotted text-success mt-2\" viewBox=\"0 0 16 16\">\r\n                                 <path d=\"M2.5 0c-.166 0-.33.016-.487.048l.194.98A1.51 1.51 0 0 1 2.5 1h.458V0H2.5zm2.292 0h-.917v1h.917V0zm1.833 0h-.917v1h.917V0zm1.833 0h-.916v1h.916V0zm1.834 0h-.917v1h.917V0zm1.833 0h-.917v1h.917V0zM13.5 0h-.458v1h.458c.1 0 .199.01.293.029l.194-.981A2.51 2.51 0 0 0 13.5 0zm2.079 1.11a2.511 2.511 0 0 0-.69-.689l-.556.831c.164.11.305.251.415.415l.83-.556zM1.11.421a2.511 2.511 0 0 0-.689.69l.831.556c.11-.164.251-.305.415-.415L1.11.422zM16 2.5c0-.166-.016-.33-.048-.487l-.98.194c.018.094.028.192.028.293v.458h1V2.5zM.048 2.013A2.51 2.51 0 0 0 0 2.5v.458h1V2.5c0-.1.01-.199.029-.293l-.981-.194zM0 3.875v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zM0 5.708v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zM0 7.542v.916h1v-.916H0zm15 .916h1v-.916h-1v.916zM0 9.375v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zm-16 .916v.917h1v-.917H0zm16 .917v-.917h-1v.917h1zm-16 .917v.458c0 .166.016.33.048.487l.98-.194A1.51 1.51 0 0 1 1 13.5v-.458H0zm16 .458v-.458h-1v.458c0 .1-.01.199-.029.293l.981.194c.032-.158.048-.32.048-.487zM.421 14.89c.183.272.417.506.69.689l.556-.831a1.51 1.51 0 0 1-.415-.415l-.83.556zm14.469.689c.272-.183.506-.417.689-.69l-.831-.556c-.11.164-.251.305-.415.415l.556.83zm-12.877.373c.158.032.32.048.487.048h.458v-1H2.5c-.1 0-.199-.01-.293-.029l-.194.981zM13.5 16c.166 0 .33-.016.487-.048l-.194-.98A1.51 1.51 0 0 1 13.5 15h-.458v1h.458zm-9.625 0h.917v-1h-.917v1zm1.833 0h.917v-1h-.917v1zm1.834-1v1h.916v-1h-.916zm1.833 1h.917v-1h-.917v1zm1.833 0h.917v-1h-.917v1zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\" />\r\n                              </svg>\r\n                              </RLink>\r\n\r\n                              <div className={`input-group ${show === true ? \" \" : \"d-none\"}`}>\r\n                                 <RLink  onClick={(e)=>handleDecrement(e,item.variantID)} className=\"input-group-text \">{quantity === 1 ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                    <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                 </svg> : t('minus')} </RLink>\r\n                                 <div className=\"input-group-text bg-white \"> {quantity}</div>\r\n                                 <RLink  onClick={(e)=>handelIncrement(e,item.variantID)} className=\"input-group-text\" disabled={item.Buyingquantity - item.SellingQuantity === quantity ? 'disabled' : ''}>{t('plus')} </RLink>\r\n                              </div>\r\n                              \r\n                              {item.Buyingquantity - item.SellingQuantity === quantity\r\n                                 ?\r\n                                 <div className=\"text-danger\">\r\n                                    {t('not_available')}\r\n                                 </div>\r\n                                 : \"\"\r\n                              }\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n\r\n               </div>\r\n\r\n            )\r\n         })\r\n   }\r\n\r\n   const settings = {\r\n      dots: false,\r\n      // className: \"center\",\r\n      centerMode: true,\r\n      infinite: true,\r\n      swipeToSlide: true,\r\n      centerPadding: \"10px\",\r\n      slidesToShow: subcategories.length >= 7 ? 7 : subcategories.length,\r\n      slidesToScroll: 1,\r\n      speed: 1000,\r\n      responsive: [\r\n         {\r\n            breakpoint: 1024,\r\n            settings: {\r\n               slidesToShow: subcategories.length >= 5 ? 5 : subcategories.length,\r\n               slidesToScroll: 1,\r\n               infinite: true,\r\n               dots: true,\r\n               speed: 1000,\r\n\r\n            }\r\n         },\r\n         {\r\n            breakpoint: 600,\r\n            settings: {\r\n               slidesToShow: subcategories.length >= 2 ? 2 : 1,\r\n               slidesToScroll: 1,\r\n               initialSlide: 1,\r\n               speed: 1000\r\n\r\n            }\r\n         },\r\n         {\r\n            breakpoint: 480,\r\n            settings: {\r\n               speed: 1000,\r\n\r\n               slidesToShow: subcategories.length >= 1 ? 1 : 1,\r\n               slidesToScroll: 1\r\n            }\r\n         }\r\n      ]\r\n   };\r\n\r\n\r\n   return (\r\n\r\n      <div style={{ marginTop: 5 }}>\r\n         <Fragment>\r\n\r\n            <CNavbar expand=\"lg\" colorScheme=\"light\" className=\"bg-light\" placement=\"sticky-top\" >\r\n               {/* <Row> */}\r\n               {/* <Col lg={12}> */}\r\n               <CContainer fluid>\r\n                  {data.map((item, i) => (\r\n                     <CNavbarBrand className=\"text-center text-uppercase font-weight-bold text-primary\" key={i}>{item.BrancheName}</CNavbarBrand>\r\n                  ))}\r\n                  <CNavbarToggler\r\n                     aria-label=\"Toggle navigation\"\r\n                     aria-expanded={visible}\r\n                     onClick={() => setVisible(!visible)}\r\n                  />\r\n                  <CCollapse className=\"navbar-collapse\" visible={visible}>\r\n                     <CNavbarNav>\r\n                        {categories.map((data, i) => (\r\n                           <CNavItem as=\"li\" key={i} >\r\n                              <CNavLink href=\"#\"\r\n                                 onClick={() => filterCategory(data.id)}\r\n\r\n                                 className={`text-capitalize font-weight-bold ${activeCategory === data.id ? \"active bg-primary text-white\" : \" \"}`}\r\n                              >\r\n                                 {data.CategoryName}\r\n                              </CNavLink>\r\n                           </CNavItem>\r\n                        ))}\r\n                     </CNavbarNav>\r\n                  </CCollapse>\r\n               </CContainer>\r\n               {/* </Col> */}\r\n\r\n               {/* </Row> */}\r\n            </CNavbar>\r\n            <CNavbar colorScheme=\"light\" className=\"bg-white\" placement=\"sticky-top\" >\r\n\r\n               {/* <Col lg={12}> */}\r\n               <Card  >\r\n                  <Card.Body>\r\n                     <Slider {...settings}>\r\n                        {subcategories.map((item, i) => (\r\n                           <div key={i} className=\"px-1 text-center text-capitalize\" >\r\n                              <Nav.Item as=\"li\"  >\r\n                                 <Link\r\n                                    onClick={() => filterProducts(item.sub_id)}\r\n                                    smooth={true}\r\n                                    duration={1000}\r\n                                    to={`${item.SubCategoryName}`}\r\n                                    // eventKey={item.SubCategoryName.toLowerCase()}\r\n                                    className={`text-capitalize font-weight-bold ${activeSubCategory === item.sub_id ? \"active border border-primary text-primary   \" : \" \"}`}\r\n                                 >\r\n                                    <div>\r\n                                       <img className={`w-100 img-thumbnail mt-1 mx-1 ${activeSubCategory === item.sub_id ? \"border border-primary\" : \" \"}`} style={{ height: '60px', objectFit: 'contain' }} src={`http://192.168.1.103/yesilik1/public/images/sub_catagories/${item.SubCategoryIcon}`} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                       {item.SubCategoryName}\r\n                                    </div>\r\n                                 </Link>\r\n                              </Nav.Item>\r\n                           </div>\r\n                        )\r\n                        )}\r\n                     </Slider>\r\n                  </Card.Body>\r\n               </Card>\r\n               {/* </Col> */}\r\n            </CNavbar>\r\n\r\n         </Fragment>\r\n         <div className=\"row mt-2 mx-2\">\r\n\r\n            {viewShow_HTMLTABLE}\r\n         </div>\r\n         <InfiniteScroll\r\n            dataLength={variants.length} //This is important field to render the next data\r\n            next={fetchMoreData}\r\n            hasMore={changeState}\r\n            loader={<p className=\"text-center pt-5\" style={{ height: 120 }}><b>{t('loading')}</b></p>}\r\n            endMessage={\r\n               <p style={{ textAlign: 'center ', height: 120 }} >\r\n                  <b>{t('yay_you_have_seen_it_all')}</b>\r\n               </p>\r\n            }\r\n         >\r\n\r\n         </InfiniteScroll>\r\n         <CNavbar expand=\"lg\" colorScheme=\"light\" className=\"row bg-light text-center\" placement=\"fixed-bottom\" >\r\n\r\n            <div className=\"col-xl-4 col-xxl-4 col-lg-4 col-sm-12 \">\r\n               <strong>{t('grand_total')}</strong>\r\n               <p className=\"text-dark\">Free</p>\r\n\r\n            </div>\r\n            <div className=\"col-xl-4 col-xxl-4 col-lg-4 col-sm-12 \">\r\n               <strong>{t('delivery_fee')}</strong>\r\n               <p className=\"text-dark\">Free</p>\r\n            </div>\r\n            <div className=\"col-xl-4 col-xxl-4 col-lg-4 col-sm-12 \">\r\n               <Button variant=\"outline-success\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-whatsapp\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\r\n               </svg>  {t('order_now_by_whatsapp')}\r\n               </Button>\r\n\r\n            </div>\r\n         </CNavbar>\r\n\r\n      </div>\r\n\r\n\r\n   );\r\n\r\n};\r\n\r\nexport default ShowBranchDetails;\r\n","D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\VariantDetailsForPublicLink.js",["979","980","981","982","983"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Variants\\VariantDetails.js",["984"],"D:\\fineDine\\source code\\Client-Side\\src\\jsx\\components\\Branches\\Tables.js",[],{"ruleId":"985","replacedBy":"986"},{"ruleId":"987","replacedBy":"988"},{"ruleId":"989","severity":1,"message":"990","line":20,"column":11,"nodeType":"991","messageId":"992","endLine":20,"endColumn":15},{"ruleId":"989","severity":1,"message":"990","line":20,"column":11,"nodeType":"991","messageId":"992","endLine":20,"endColumn":15},{"ruleId":"989","severity":1,"message":"990","line":20,"column":11,"nodeType":"991","messageId":"992","endLine":20,"endColumn":15},{"ruleId":"989","severity":1,"message":"990","line":20,"column":11,"nodeType":"991","messageId":"992","endLine":20,"endColumn":15},{"ruleId":"985","replacedBy":"993"},{"ruleId":"987","replacedBy":"994"},{"ruleId":"985","replacedBy":"995"},{"ruleId":"987","replacedBy":"996"},{"ruleId":"985","replacedBy":"997"},{"ruleId":"987","replacedBy":"998"},{"ruleId":"999","severity":1,"message":"1000","line":206,"column":36,"nodeType":"1001","messageId":"1002","endLine":206,"endColumn":38},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1004","line":14,"column":38,"nodeType":"991","messageId":"992","endLine":14,"endColumn":54},{"ruleId":"989","severity":1,"message":"1005","line":14,"column":84,"nodeType":"991","messageId":"992","endLine":14,"endColumn":97},{"ruleId":"989","severity":1,"message":"1006","line":14,"column":116,"nodeType":"991","messageId":"992","endLine":14,"endColumn":123},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1007","line":9,"column":23,"nodeType":"991","messageId":"992","endLine":9,"endColumn":29},{"ruleId":"989","severity":1,"message":"1008","line":9,"column":31,"nodeType":"991","messageId":"992","endLine":9,"endColumn":40},{"ruleId":"989","severity":1,"message":"1006","line":9,"column":42,"nodeType":"991","messageId":"992","endLine":9,"endColumn":49},{"ruleId":"989","severity":1,"message":"1009","line":9,"column":51,"nodeType":"991","messageId":"992","endLine":9,"endColumn":60},{"ruleId":"989","severity":1,"message":"1010","line":5,"column":10,"nodeType":"991","messageId":"992","endLine":5,"endColumn":16},{"ruleId":"989","severity":1,"message":"1011","line":9,"column":10,"nodeType":"991","messageId":"992","endLine":9,"endColumn":13},{"ruleId":"989","severity":1,"message":"1012","line":9,"column":15,"nodeType":"991","messageId":"992","endLine":9,"endColumn":18},{"ruleId":"989","severity":1,"message":"1013","line":9,"column":26,"nodeType":"991","messageId":"992","endLine":9,"endColumn":29},{"ruleId":"989","severity":1,"message":"1014","line":11,"column":22,"nodeType":"991","messageId":"992","endLine":11,"endColumn":29},{"ruleId":"989","severity":1,"message":"1015","line":11,"column":31,"nodeType":"991","messageId":"992","endLine":11,"endColumn":36},{"ruleId":"989","severity":1,"message":"1003","line":6,"column":8,"nodeType":"991","messageId":"992","endLine":6,"endColumn":17},{"ruleId":"989","severity":1,"message":"1016","line":12,"column":10,"nodeType":"991","messageId":"992","endLine":12,"endColumn":13},{"ruleId":"989","severity":1,"message":"1017","line":96,"column":11,"nodeType":"991","messageId":"992","endLine":96,"endColumn":21},{"ruleId":"1018","severity":1,"message":"1019","line":143,"column":91,"nodeType":"1020","messageId":"1021","endLine":143,"endColumn":93},{"ruleId":"1018","severity":1,"message":"1019","line":146,"column":97,"nodeType":"1020","messageId":"1021","endLine":146,"endColumn":99},{"ruleId":"989","severity":1,"message":"1003","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},"no-native-reassign",["1022"],"no-negated-in-lhs",["1023"],"no-unused-vars","'demo' is assigned a value but never used.","Identifier","unusedVar",["1022"],["1023"],["1022"],["1023"],["1022"],["1023"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PageTItle' is defined but never used.","'CDropdownDivider' is defined but never used.","'CDropdownItem' is defined but never used.","'CButton' is defined but never used.","'CBadge' is defined but never used.","'CCollapse' is defined but never used.","'CCardBody' is defined but never used.","'Navbar' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tab' is defined but never used.","'CFooter' is defined but never used.","'CLink' is defined but never used.","'Nav' is defined but never used.","'addBaskets' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]